{"version":3,"sources":["components/MyEMS/common/DetailedDataTable.js"],"names":["defaultSorted","dataField","order","withTranslation","title","data","columns","pagesize","options","t","custom","sizePerPage","totalSize","length","handleNextPage","page","onPageChange","handlePrevPage","className","pagination","paginationFactory","paginationProps","paginationTableProps","lastIndex","bootstrap4","keyField","noGutters","xs","color","size","onClick","disabled","icon","getPaginationArray","map","pageNo","key"],"mappings":"iGAAA,wJAgBMA,EAAgB,CAAC,CACrBC,UAAW,gBACXC,MAAO,QAoFMC,yBAhFW,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,SAE3CC,GAF6D,EAARC,EAE3C,CACdC,QAAQ,EACRC,YAAaJ,EACbK,UAAWP,EAAKQ,SAEZC,EAAiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,aAAT,OAA4B,WACjDA,EAAaD,EAAO,KAGhBE,EAAiB,SAAC,GAAD,IAAGF,EAAH,EAAGA,KAAMC,EAAT,EAASA,aAAT,OAA4B,WACjDA,EAAaD,EAAO,KAEtB,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAkBX,MAAOA,EAAOc,UAAU,aAG1C,kBAAC,IAAD,KACA,kBAAC,qBAAD,CAAoBC,WAAYC,IAAkBZ,KAC7C,YAAgD,IAA7Ca,EAA4C,EAA5CA,gBAAiBC,EAA2B,EAA3BA,qBACbC,EAAYF,EAAgBN,KAAOM,EAAgBV,YACzD,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,eACEa,YAAU,EACVC,SAAS,KACTpB,KAAMA,EACNC,QAASA,EACTN,cAAeA,GACXsB,MAIV,kBAAC,IAAD,CAAKI,WAAS,EAACR,UAAU,yBACvB,kBAAC,IAAD,CAAKS,GAAG,QACN,kBAAC,IAAD,CACEC,MAAM,iBACNC,KAAK,KACLC,QAASb,EAAeI,GACxBU,SAAmC,IAAzBV,EAAgBN,MAE1B,kBAAC,IAAD,CAAiBiB,KAAK,kBAEvBC,YAAmBZ,EAAgBT,UAAWS,EAAgBV,aAAauB,KAAI,SAAAC,GAAM,OACpF,kBAAC,IAAD,CACEP,MAAOP,EAAgBN,OAASoB,EAAS,iBAAmB,iBAC5DN,KAAK,KACLX,UAAU,OACVY,QAAS,kBAAMT,EAAgBL,aAAamB,IAC5CC,IAAKD,GAEJA,MAGL,kBAAC,IAAD,CACEP,MAAM,iBACNC,KAAK,KACLX,UAAU,OACVY,QAAShB,EAAeO,GACxBU,SAAUR,GAAaF,EAAgBT,WAEvC,kBAAC,IAAD,CAAiBoB,KAAK","file":"static/js/0.f636a613.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport { \n  Button,\n  Card, \n  CardBody, \n  Row, \n  Col } from 'reactstrap';\nimport FalconCardHeader from '../../common/FalconCardHeader';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { withTranslation } from 'react-i18next';\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\nimport { getPaginationArray } from '../../../helpers/utils';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\nconst defaultSorted = [{\n  dataField: 'startdatetime',\n  order: 'asc'\n}];\n\n\nconst DetailedDataTable = ({ title, data, columns, pagesize, t }) => {\n\n  const options = {\n    custom: true,\n    sizePerPage: pagesize,\n    totalSize: data.length\n  };\n  const handleNextPage = ({ page, onPageChange }) => () => {\n    onPageChange(page + 1);\n  };\n  \n  const handlePrevPage = ({ page, onPageChange }) => () => {\n    onPageChange(page - 1);\n  };\n  return (\n    <Fragment>\n      <Card>\n        <FalconCardHeader title={title} className=\"bg-light\">\n          \n        </FalconCardHeader>\n        <CardBody>\n        <PaginationProvider pagination={paginationFactory(options)}>\n            {({ paginationProps, paginationTableProps }) => {\n              const lastIndex = paginationProps.page * paginationProps.sizePerPage;\n              return (\n                <Fragment>\n                  <Row>\n                    <Col>\n                      <BootstrapTable\n                        bootstrap4\n                        keyField=\"id\"\n                        data={data}\n                        columns={columns}\n                        defaultSorted={defaultSorted}\n                        {...paginationTableProps}\n                      />\n                    </Col>\n                  </Row>\n                  <Row noGutters className=\"px-1 py-3 flex-center\">\n                    <Col xs=\"auto\">\n                      <Button\n                        color=\"falcon-default\"\n                        size=\"sm\"\n                        onClick={handlePrevPage(paginationProps)}\n                        disabled={paginationProps.page === 1}\n                      >\n                        <FontAwesomeIcon icon=\"chevron-left\" />\n                      </Button>\n                      {getPaginationArray(paginationProps.totalSize, paginationProps.sizePerPage).map(pageNo => (\n                        <Button\n                          color={paginationProps.page === pageNo ? 'falcon-primary' : 'falcon-default'}\n                          size=\"sm\"\n                          className=\"ml-2\"\n                          onClick={() => paginationProps.onPageChange(pageNo)}\n                          key={pageNo}\n                        >\n                          {pageNo}\n                        </Button>\n                      ))}\n                      <Button\n                        color=\"falcon-default\"\n                        size=\"sm\"\n                        className=\"ml-2\"\n                        onClick={handleNextPage(paginationProps)}\n                        disabled={lastIndex >= paginationProps.totalSize}\n                      >\n                        <FontAwesomeIcon icon=\"chevron-right\" />\n                      </Button>\n                    </Col>\n                  </Row>\n                </Fragment>\n              );\n            }}\n          </PaginationProvider>\n        </CardBody>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(DetailedDataTable);\n"],"sourceRoot":""}