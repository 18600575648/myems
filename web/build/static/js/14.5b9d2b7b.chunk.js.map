{"version":3,"sources":["components/MyEMS/FDD/CombinedEquipmentFault.js","components/MyEMS/FDD/EquipmentFault.js","components/MyEMS/FDD/SpaceFault.js","components/MyEMS/FDD/TenantFault.js","components/MyEMS/FDD/StoreFault.js","components/MyEMS/FDD/ShopfloorFault.js","components/MyEMS/Monitoring/img/1.png","components/MyEMS/Monitoring/img/2.png","components/MyEMS/Monitoring/img/4.png","components/MyEMS/Monitoring/img/3.png","components/MyEMS/Monitoring/img/8.png","components/MyEMS/Monitoring/img/6.png","components/MyEMS/Monitoring/img/7.png","components/MyEMS/Monitoring/img/5.png","components/MyEMS/Monitoring/img/9.png","components/MyEMS/Notification/Notification.js","components/MyEMS/common/PeriodTypeOptions.js","components/MyEMS/common/ComparisonTypeOptions.js","components/MyEMS/Space/SpaceEnergyCategory.js","components/MyEMS/Space/SpaceEnergyItem.js","components/MyEMS/Space/SpaceCost.js","components/MyEMS/Space/SpaceOutput.js","components/MyEMS/Space/SpaceIncome.js","components/MyEMS/Space/SpaceEfficiency.js","components/MyEMS/Space/SpaceLoad.js","components/MyEMS/Space/SpaceStatistics.js","components/MyEMS/Space/SpaceSaving.js","components/MyEMS/Equipment/EquipmentBatch.js","components/MyEMS/Equipment/EquipmentCost.js","components/MyEMS/Equipment/EquipmentEfficiency.js","components/MyEMS/Equipment/EquipmentEnergyCategory.js","components/MyEMS/Equipment/EquipmentEnergyItem.js","components/MyEMS/Equipment/EquipmentIncome.js","components/MyEMS/Equipment/EquipmentLoad.js","components/MyEMS/Equipment/EquipmentOutput.js","components/MyEMS/Equipment/EquipmentSaving.js","components/MyEMS/Equipment/EquipmentStatistics.js","components/MyEMS/Equipment/EquipmentTracking.js","components/common/Loader.js","components/MyEMS/Meter/MeterEnergy.js","components/MyEMS/Meter/MeterCost.js","components/MyEMS/Meter/MeterTrend.js","components/MyEMS/Meter/RealtimeChart.js","components/MyEMS/Meter/MeterRealtime.js","components/MyEMS/Meter/MeterSubmetersBalance.js","components/MyEMS/Meter/OfflineMeterEnergy.js","components/MyEMS/Meter/OfflineMeterCost.js","components/MyEMS/Meter/VirtualMeterEnergy.js","components/MyEMS/Meter/VirtualMeterCost.js","components/MyEMS/Meter/MeterTracking.js","components/MyEMS/Tenant/TenantEnergyCategory.js","components/MyEMS/Tenant/TenantEnergyItem.js","components/MyEMS/Tenant/TenantCost.js","components/MyEMS/Tenant/TenantLoad.js","components/MyEMS/Tenant/TenantStatistics.js","components/MyEMS/Tenant/TenantSaving.js","components/MyEMS/Tenant/TenantBill.js","components/MyEMS/Tenant/TenantBatch.js","components/MyEMS/Store/StoreEnergyCategory.js","components/MyEMS/Store/StoreEnergyItem.js","components/MyEMS/Store/StoreCost.js","components/MyEMS/Store/StoreLoad.js","components/MyEMS/Store/StoreStatistics.js","components/MyEMS/Store/StoreSaving.js","components/MyEMS/Store/StoreBatch.js","components/MyEMS/Shopfloor/ShopfloorEnergyCategory.js","components/MyEMS/Shopfloor/ShopfloorEnergyItem.js","components/MyEMS/Shopfloor/ShopfloorCost.js","components/MyEMS/Shopfloor/ShopfloorLoad.js","components/MyEMS/Shopfloor/ShopfloorStatistics.js","components/MyEMS/Shopfloor/ShopfloorSaving.js","components/MyEMS/Shopfloor/ShopfloorBatch.js","components/MyEMS/CombinedEquipment/CombinedEquipmentBatch.js","components/MyEMS/CombinedEquipment/CombinedEquipmentCost.js","components/MyEMS/CombinedEquipment/CombinedEquipmentEfficiency.js","components/MyEMS/CombinedEquipment/CombinedEquipmentEnergyCategory.js","components/MyEMS/CombinedEquipment/CombinedEquipmentEnergyItem.js","components/MyEMS/CombinedEquipment/CombinedEquipmentLoad.js","components/MyEMS/CombinedEquipment/CombinedEquipmentIncome.js","components/MyEMS/CombinedEquipment/CombinedEquipmentOutput.js","components/MyEMS/CombinedEquipment/CombinedEquipmentSaving.js","components/MyEMS/CombinedEquipment/CombinedEquipmentStatistics.js","components/MyEMS/AuxiliarySystem/EnergyFlowDiagram.js","components/MyEMS/AuxiliarySystem/RealtimeChart.js","components/MyEMS/AuxiliarySystem/DistributionSystem.js","components/MyEMS/Monitoring/EquipmentList.js","components/MyEMS/Monitoring/EquipmentFooter.js","hooks/usePagination.js","components/MyEMS/Monitoring/equipments.js","components/MyEMS/Monitoring/SpaceEquipments.js","components/MyEMS/Monitoring/CombinedEquipments.js","components/MyEMS/Monitoring/TenantEquipments.js","components/MyEMS/Monitoring/StoreEquipments.js","components/MyEMS/Monitoring/ShopfloorEquipments.js","components/common/Calendar.js","components/MyEMS/AdvancedReporting/Summary.js","components/MyEMS/AdvancedReporting/AdvancedReporting.js","components/MyEMS/KnowledgeBase/Summary.js","components/MyEMS/KnowledgeBase/KnowledgeBase.js","layouts/MyEMSRoutes.js"],"names":["withTranslation","withRedirect","setRedirect","setRedirectUrl","t","current_moment","moment","useEffect","is_logged_in","getCookieValue","user_name","user_display_name","user_uuid","token","createCookie","useState","undefined","selectedSpaceName","setSelectedSpaceName","selectedSpaceID","setSelectedSpaceID","combinedEquipmentList","setCombinedEquipmentList","selectedCombinedEquipment","setSelectedCombinedEquipment","clone","startOf","reportingPeriodBeginsDatetime","setReportingPeriodBeginsDatetime","reportingPeriodEndsDatetime","setReportingPeriodEndsDatetime","cascaderOptions","setCascaderOptions","submitButtonDisabled","setSubmitButtonDisabled","spinnerHidden","setSpinnerHidden","exportButtonHidden","setExportButtonHidden","detailedDataTableData","setDetailedDataTableData","dataField","text","sort","detailedDataTableColumns","setDetailedDataTableColumns","excelBytesBase64","setExcelBytesBase64","isResponseOK","fetch","APIBaseURL","method","headers","body","then","response","console","log","ok","json","JSON","parse","stringify","split","join","map","o","label","value","length","toast","error","description","catch","err","orderFormatter","id","name","email","to","href","shippingFormatter","address","shippingType","className","badgeFormatter","status","color","icon","transform","actionFormatter","size","right","onClick","divider","options","custom","sizePerPage","totalSize","SelectRowInput","indeterminate","rest","rowIndex","onChange","ref","input","selectRow","onSelect","mode","classes","clickToSelect","selectionHeaderRenderer","type","selectionRenderer","onSelectAll","labelClasses","table","createRef","isSelected","setIsSelected","handleNextPage","page","onPageChange","handlePrevPage","setImmediate","current","selectionContext","selected","active","onSubmit","e","preventDefault","format","uuid","date","amount","formatter","align","form","xs","sm","for","selectedOptions","changeOnSelect","expandTrigger","readOnly","target","combinedEquipment","index","key","newDateTime","isValidDate","currentDate","isBefore","closeOnSelect","isAfter","disabled","hidden","mimeType","blob","link","window","document","createElement","URL","createObjectURL","download","appendChild","click","removeChild","title","light","pagination","paginationFactory","paginationProps","paginationTableProps","lastIndex","bootstrap4","keyField","data","columns","bordered","rowClasses","headerClasses","noGutters","getPaginationArray","pageNo","equipmentList","setEquipmentList","selectedEquipment","setSelectedEquipment","equipment","tenantList","setTenantList","selectedTenant","setSelectedTenant","tenant","storeList","setStoreList","selectedStore","setSelectedStore","store","shopfloorList","setShopfloorList","selectedShopfloor","setSelectedShopfloor","shopfloor","module","exports","subtract","startDatetime","endDatetime","fetchSuccess","setFetchSuccess","notifications","setNotifications","notificationList","forEach","currentValue","notification","push","url","handleRead","periodTypeOptions","comparisonTypeOptions","ChildSpacesTable","loadable","DetailedDataTable","comparisonType","setComparisonType","periodType","setPeriodType","basePeriodBeginsDatetime","setBasePeriodBeginsDatetime","basePeriodEndsDatetime","setBasePeriodEndsDatetime","basePeriodBeginsDatetimeDisabled","setBasePeriodBeginsDatetimeDisabled","basePeriodEndsDatetimeDisabled","setBasePeriodEndsDatetimeDisabled","timeOfUseShareData","setTimeOfUseShareData","TCEShareData","setTCEShareData","TCO2EShareData","setTCO2EShareData","cardSummaryList","setCardSummaryList","totalInTCE","setTotalInTCE","totalInTCO2E","setTotalInTCO2E","childSpaceProportionList","setChildSpaceProportionList","spaceLineChartLabels","setSpaceLineChartLabels","spaceLineChartData","setSpaceLineChartData","spaceLineChartOptions","setSpaceLineChartOptions","parameterLineChartLabels","setParameterLineChartLabels","parameterLineChartData","setParameterLineChartData","parameterLineChartOptions","setParameterLineChartOptions","childSpacesTableData","setChildSpacesTableData","childSpacesTableColumns","setChildSpacesTableColumns","Breadcrumb","BreadcrumbItem","Card","CardBody","Form","cardSummaryArray","cardSummaryItem","parseFloat","toFixed","timeOfUseArray","timeOfUseItem","Math","random","toString","TCEDataArray","TCEDataItem","TCO2EDataArray","TCO2EDataItem","childSpaceProportionArray","energyCategoryIndex","childSpaceProportionItem","currentSpaceName","spaceIndex","childSpaceProportionItemDataItem","timestamps","values","names","Array","unit","startsWith","replace","detailed_value_list","currentTimestamp","timestampIndex","detailed_value","detailed_column_list","child_space_value_list","child_space_value","child_space_column_list","Row","Col","FormGroup","Label","Input","CustomInput","defaultValue","inputProps","ButtonGroup","Button","Spinner","ButtonIcon","CardSummary","rate","footnote","footvalue","footunit","end","duration","prefix","separator","decimal","decimals","SharePie","LineChart","reportingTitle","baseTitle","labels","pagesize","sharePieList","setSharePieList","sharePieDict","energyCategoryDict","sharePieSubItem","current_energy_category_id","sharePieArray","sharePieItem","energyItemIndex","costShareData","setCostShareData","costDataArray","costDataItem","total_current_timstamp","total_of_subtotals","total","incomeShareData","setIncomeShareData","incomeDataArray","incomeDataItem","equipments","currentEquipment","equipmentLineChartLabels","setEquipmentLineChartLabels","equipmentLineChartData","setEquipmentLineChartData","equipmentLineChartOptions","setEquipmentLineChartOptions","parameterIndex","isSecondResponseOK","json_equipments","Media","tag","Flex","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","Loader","props","defaultProps","meterList","setMeterList","filteredMeterList","setFilteredMeterList","selectedMeter","setSelectedMeter","meterEnergyCategory","setMeterEnergyCategory","reportingPeriodEnergyConsumptionInCategory","setReportingPeriodEnergyConsumptionInCategory","reportingPeriodEnergyConsumptionRate","setReportingPeriodEnergyConsumptionRate","reportingPeriodEnergyConsumptionInTCE","setReportingPeriodEnergyConsumptionInTCE","reportingPeriodEnergyConsumptionInCO2","setReportingPeriodEnergyConsumptionInCO2","basePeriodEnergyConsumptionInCategory","setBasePeriodEnergyConsumptionInCategory","meterLineChartOptions","setMeterLineChartOptions","meterLineChartData","setMeterLineChartData","meterLineChartLabels","setMeterLineChartLabels","inline","placeholder","keyword","toLowerCase","filteredResult","filter","meter","includes","reportingPeriodEnergyCostInCategory","setReportingPeriodEnergyCostInCategory","reportingPeriodEnergyCostRate","setReportingPeriodEnergyCostRate","basePeriodEnergyCostInCategory","setBasePeriodEnergyCostInCategory","column","detial_value_list","detial_value","currentValue1","index1","chartOptions","legend","display","scales","yAxes","stacked","xAxes","ticks","categoryPercentage","gridLines","rgbaColor","RealtimeChart","_isMounted","state","trendLog","currentEnergyValue","chartData","range","datasets","backgroundColor","pointList","this","clearInterval","refreshInterval","clearTimeout","refreshTimeout","meterId","currentName","pointItem","currentValues","setState","setInterval","floor","CardHeader","meterName","style","borderBottom","width","height","ListGroup","flush","ListGroupItem","borderColor","Component","cursor","setCursor","maxCursor","setMaxCursor","selectMeterList","setSelectMeterList","Token","meterLen","ceil","slice","lg","Pagination","PaginationItem","PaginationLink","first","previous","next","last","reportingPeriodMasterMeterConsumptionInCategory","setReportingPeriodMasterMeterConsumptionInCategory","reportingPeriodSubmetersConsumptionInCategory","setReportingPeriodSubmetersConsumptionInCategory","reportingPeriodDifferenceInCategory","setReportingPeriodDifferenceInCategory","reportingPeriodPercentageDifference","setReportingPeriodPercentageDifference","offlineMeterList","setOfflineMeterList","selectedOfflineMeter","setSelectedOfflineMeter","offlineMeterEnergyCategory","setOfflineMeterEnergyCategory","offlineMeterLineChartOptions","setOfflineMeterLineChartOptions","offlineMeterLineChartData","setOfflineMeterLineChartData","offlineMeterLineChartLabels","setOfflineMeterLineChartLabels","offlineMeter","virtualMeterList","setVirtualMeterList","selectedVirtualMeter","setSelectedVirtualMeter","virtualMeterEnergyCategory","setVirtualMeterEnergyCategory","virtualMeterLineChartOptions","setVirtualMeterLineChartOptions","virtualMeterLineChartData","setVirtualMeterLineChartData","virtualMeterLineChartLabels","setVirtualMeterLineChartLabels","virtualMeter","meters","tenantLineChartLabels","setTenantLineChartLabels","tenantLineChartData","setTenantLineChartData","tenantLineChartOptions","setTenantLineChartOptions","formatCurrency","number","currency","ProductTr","startdate","enddate","subtotalinput","subtotalcost","InvoiceHeader","institution","logo","src","alt","dangerouslySetInnerHTML","createMarkup","endOf","invoice","setInvoice","subtotal","setSubtotal","taxRate","tax","setTax","setTotal","productArray","productItem","logoInvoice","user","cell","summary","invoice_no","lease_number","invoice_date","payment_due","add","amount_due","products","md","Table","borderless","striped","isIterableArray","product","tenants","currentTenant","storeLineChartLabels","setStoreLineChartLabels","storeLineChartData","setStoreLineChartData","storeLineChartOptions","setStoreLineChartOptions","stores","currentStore","shopfloorLineChartLabels","setShopfloorLineChartLabels","shopfloorLineChartData","setShopfloorLineChartData","shopfloorLineChartOptions","setShopfloorLineChartOptions","shopfloors","currentShopfloor","combined_equipments","currentCombinedEquipment","AssociatedEquipmentTable","combinedEquipmentLineChartLabels","setCombinedEquipmentLineChartLabels","combinedEquipmentLineChartData","setCombinedEquipmentLineChartData","combinedEquipmentLineChartOptions","setCombinedEquipmentLineChartOptions","associatedEquipmentTableData","setAssociatedEquipmentTableData","associatedEquipmentTableColumns","setAssociatedEquipmentTableColumns","associated_equipment_value_list","currentEquipmentName","equipmentIndex","associated_equipment_value","associated_equipment_column_list","energyFlowDiagramList","setEnergyFlowDiagramList","selectedEnergyFlowDiagram","setSelectedEnergyFlowDiagram","isDark","useContext","AppContext","energyFlowDiagramData","setEnergyFlowDiagramData","energyFlowDiagram","echarts","option","colorArr","labelColor","labelTextBorderColor","colorIndex","i","nodes","itemStyle","links","item","sourceColor","targetColor","source","x","y","x2","y2","colorStops","offset","globalCoord","lineStyle","tooltip","trigger","triggerOn","series","focusNodeAdjacency","borderWidth","curveness","fontFamily","fontSize","fontStyle","fontWeight","textBorderWidth","textBorderColor","getOption","distributionSystemID","currentCircuit","circuitIndex","currentPoint","pointIndex","distributionSystemName","latestUpdateDatetime","distributionSystemList","setDistributionSystemList","selectedDistributionSystemName","setSelectedDistributionSystemName","selectedDistributionSystemID","setSelectedDistributionSystemID","images","setImages","__html","event","currentItem","distributionSystem","EquipmentList","files","category","features","parameter1","parameter2","parameter3","parameter4","parameter5","parameter6","parameter7","alarms","isOnline","isRunning","sliderSettings","favouriteItemsDispatch","ProductContext","cartLoading","setCartLoading","classNames","path","file","Badge","pill","feature","justify","payload","iconClassName","setTimeout","EquipmentFooter","meta","handler","isRTL","itemsPerPage","nextPageNo","prevPageNo","nextPage","prevPage","currentPage","CardFooter","usePagination","items","defaultItemsPerPage","setData","itemsChunk","setItemsChunk","lastPageNo","setLastPageNo","setItemsPerPage","setPageNo","from","setFrom","setTo","setPrevPageNo","setNextPageNo","chunk","perPage","product2","product1","product4","product3","product8","product6","product7","product5","product9","equipmentIds","setEquipmentIds","infinite","speed","slidesToShow","slidesToScroll","loading","useFakeFetch","paginationData","paginationMeta","paginationHandler","bsSize","Number","Calendar","month","day","ReportBadge","Summary","fileName","fileBytesBase64","calendar","badge","children","file_bytes_base64","reports","setReports","reportList","report","substring","FalconCardHeader","additional","Alert","MyEMSRoutes","exact","component","SpaceEnergyCategory","SpaceEnergyItem","SpaceCost","SpaceOutput","SpaceIncome","SpaceEfficiency","SpaceLoad","SpaceStatistics","SpaceSaving","EquipmentBatch","EquipmentCost","EquipmentEfficiency","EquipmentEnergyCategory","EquipmentEnergyItem","EquipmentIncome","EquipmentLoad","EquipmentOutput","EquipmentSaving","EquipmentStatistics","EquipmentTracking","MeterEnergy","MeterCost","MeterTrend","MeterRealtime","MeterSubmetersBalance","OfflineMeterEnergy","OfflineMeterCost","VirtualMeterEnergy","VirtualMeterCost","MeterTracking","TenantEnergyCategory","TenantEnergyItem","TenantCost","TenantLoad","TenantStatistics","TenantSaving","TenantBill","TenantBatch","StoreEnergyCategory","StoreEnergyItem","StoreCost","StoreLoad","StoreStatistics","StoreSaving","StoreBatch","ShopfloorEnergyCategory","ShopfloorEnergyItem","ShopfloorCost","ShopfloorLoad","ShopfloorStatistics","ShopfloorSaving","ShopfloorBatch","CombinedEquipmentBatch","CombinedEquipmentCost","CombinedEquipmentEfficiency","CombinedEquipmentEnergyCategory","CombinedEquipmentEnergyItem","CombinedEquipmentIncome","CombinedEquipmentLoad","CombinedEquipmentOutput","CombinedEquipmentSaving","CombinedEquipmentStatistics","EnergyFlowDiagram","DistributionSystem","FDDCombinedEquipmentFault","FDDEquipmentFault","FDDSpaceFault","FDDTenantFault","FDDStoreFault","FDDShopfloorFault","SpaceEquipments","CombinedEquipments","TenantEquipments","StoreEquipments","ShopfloorEquipments","AdvancedReporting","KnowledgeBase","Notification"],"mappings":"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","file":"static/js/14.5b9d2b7b.chunk.js","sourcesContent":["import React, { createRef, Fragment, useEffect, useState } from 'react';\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  InputGroup,\n  UncontrolledDropdown,\n  Spinner,\n} from 'reactstrap';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport Cascader from 'rc-cascader';\nimport { Link } from 'react-router-dom';\nimport Badge from 'reactstrap/es/Badge';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport FalconCardHeader from '../../common/FalconCardHeader';\nimport uuid from 'uuid/v1';\nimport { getPaginationArray } from '../../../helpers/utils';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\n\n\nconst CombinedEquipmentFault = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [combinedEquipmentList, setCombinedEquipmentList] = useState([]);\n  const [selectedCombinedEquipment, setSelectedCombinedEquipment] = useState(undefined);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n\n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n  //Results\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json)\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Combined Equipments by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/combinedequipments', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setCombinedEquipmentList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedCombinedEquipment(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedCombinedEquipment(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Combined Equipments by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const orderFormatter = (dataField, { id, name, email }) => (\n    <Fragment>\n      <Link to=\"/e-commerce/order-details\">\n        <strong>#{id}</strong>\n      </Link>{' '}\n      by <strong>{name}</strong>\n      <br />\n      <a href={`mailto:${email}`}>{email}</a>\n    </Fragment>\n  );\n\n  const shippingFormatter = (address, { shippingType }) => (\n    <Fragment>\n      {address}\n      <p className=\"mb-0 text-500\">{shippingType}</p>\n    </Fragment>\n  );\n\n  const badgeFormatter = status => {\n    let color = '';\n    let icon = '';\n    let text = '';\n    switch (status) {\n      case 'success':\n        color = 'success';\n        icon = 'check';\n        text = 'Completed';\n        break;\n      case 'hold':\n        color = 'secondary';\n        icon = 'ban';\n        text = 'On hold';\n        break;\n      case 'processing':\n        color = 'primary';\n        icon = 'redo';\n        text = 'Processing';\n        break;\n      case 'pending':\n        color = 'warning';\n        icon = 'stream';\n        text = 'Pending';\n        break;\n      default:\n        color = 'warning';\n        icon = 'stream';\n        text = 'Pending';\n    }\n\n    return (\n      <Badge color={`soft-${color}`} className=\"rounded-capsule fs--1 d-block\">\n        {text}\n        <FontAwesomeIcon icon={icon} transform=\"shrink-2\" className=\"ml-1\" />\n      </Badge>\n    );\n  };\n\n  const actionFormatter = (dataField, { id }) => (\n    // Control your row with this id\n    <UncontrolledDropdown>\n      <DropdownToggle color=\"link\" size=\"sm\" className=\"text-600 btn-reveal mr-3\">\n        <FontAwesomeIcon icon=\"ellipsis-h\" className=\"fs--1\" />\n      </DropdownToggle>\n      <DropdownMenu right className=\"border py-2\">\n        <DropdownItem onClick={() => console.log('Completed: ', id)}>Completed</DropdownItem>\n        <DropdownItem onClick={() => console.log('Processing: ', id)}>Processing</DropdownItem>\n        <DropdownItem onClick={() => console.log('On hold: ', id)}>On hold</DropdownItem>\n        <DropdownItem onClick={() => console.log('Pending: ', id)}>Pending</DropdownItem>\n        <DropdownItem divider />\n        <DropdownItem onClick={() => console.log('Delete: ', id)} className=\"text-danger\">\n          Delete\n        </DropdownItem>\n      </DropdownMenu>\n    </UncontrolledDropdown>\n  );\n\n  const options = {\n    custom: true,\n    sizePerPage: 10,\n    totalSize: detailedDataTableData.length\n  };\n\n  const SelectRowInput = ({ indeterminate, rowIndex, ...rest }) => (\n    <div className=\"custom-control custom-checkbox\">\n      <input\n        className=\"custom-control-input\"\n        {...rest}\n        onChange={() => { }}\n        ref={input => {\n          if (input) input.indeterminate = indeterminate;\n        }}\n      />\n      <label className=\"custom-control-label\" />\n    </div>\n  );\n\n  const selectRow = onSelect => ({\n    mode: 'checkbox',\n    classes: 'py-2 align-middle',\n    clickToSelect: false,\n    selectionHeaderRenderer: ({ mode, ...rest }) => <SelectRowInput type=\"checkbox\" {...rest} />,\n    selectionRenderer: ({ mode, ...rest }) => <SelectRowInput type={mode} {...rest} />,\n    onSelect: onSelect,\n    onSelectAll: onSelect\n  });\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let table = createRef();\n\n  const [isSelected, setIsSelected] = useState(false);\n  const handleNextPage = ({ page, onPageChange }) => () => {\n    onPageChange(page + 1);\n  };\n\n  const handlePrevPage = ({ page, onPageChange }) => () => {\n    onPageChange(page - 1);\n  };\n\n  const onSelect = () => {\n    setImmediate(() => {\n      setIsSelected(!!table.current.selectionContext.selected.length);\n    });\n  };\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/combinedequipments', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setCombinedEquipmentList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedCombinedEquipment(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedCombinedEquipment(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedCombinedEquipment);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/fddcombinedequipmentfault?' +\n      'combinedequipmentid' + selectedCombinedEquipment +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n\n      // enable submit button\n      setSubmitButtonDisabled(false);\n      // hide spinner\n      setSpinnerHidden(true);\n      // show export buttion\n      setExportButtonHidden(false)\n\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n              \n        setDetailedDataTableData([\n          {\n            id: uuid().split('-')[0],\n            // id: 181,\n            name: 'Ricky Antony',\n            email: 'ricky@example.com',\n            date: '20/04/2019',\n            address: 'Ricky Antony, 2392 Main Avenue, Penasauka, New Jersey 02149',\n            shippingType: 'Via Flat Rate',\n            status: 'success',\n            amount: 99\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 182,\n            name: 'Kin Rossow',\n            email: 'kin@example.com',\n            date: '20/04/2019',\n            address: 'Kin Rossow, 1 Hollywood Blvd,Beverly Hills, California 90210',\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 120\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 183,\n            name: 'Merry Diana',\n            email: 'merry@example.com',\n            date: '30/04/2019',\n            address: 'Merry Diana, 1 Infinite Loop, Cupertino, California 90210',\n            shippingType: 'Via Link Road',\n            status: 'hold',\n            amount: 70\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 184,\n            name: 'Bucky Robert',\n            email: 'bucky@example.com',\n            date: '30/04/2019',\n            address: 'Bucky Robert, 1 Infinite Loop, Cupertino, California 90210',\n            shippingType: 'Via Free Shipping',\n            status: 'pending',\n            amount: 92\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 185,\n            name: 'Rocky Zampa',\n            email: 'rocky@example.com',\n            date: '30/04/2019',\n            address: 'Rocky Zampa, 1 Infinite Loop, Cupertino, California 90210',\n            shippingType: 'Via Free Road',\n            status: 'hold',\n            amount: 120\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 186,\n            name: 'Ricky John',\n            email: 'ricky@example.com',\n            date: '30/04/2019',\n            address: 'Ricky John, 1 Infinite Loop, Cupertino, California 90210',\n            shippingType: 'Via Free Shipping',\n            status: 'processing',\n            amount: 145\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 187,\n            name: 'Cristofer Henric',\n            email: 'cristofer@example.com',\n            date: '30/04/2019',\n            address: 'Cristofer Henric, 1 Infinite Loop, Cupertino, California 90210',\n            shippingType: 'Via Flat Rate',\n            status: 'success',\n            amount: 55\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 188,\n            name: 'Brate Lee',\n            email: 'lee@example.com',\n            date: '29/04/2019',\n            address: 'Brate Lee, 1 Infinite Loop, Cupertino, California 90210',\n            shippingType: 'Via Link Road',\n            status: 'hold',\n            amount: 90\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 189,\n            name: 'Thomas Stephenson',\n            email: 'Stephenson@example.com',\n            date: '29/04/2019',\n            address: 'Thomas Stephenson, 116 Ballifeary Road, Bamff',\n            shippingType: 'Via Flat Rate',\n            status: 'processing',\n            amount: 52\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 190,\n            name: 'Evie Singh',\n            email: 'eviewsing@example.com',\n            date: '29/04/2019',\n            address: 'Evie Singh, 54 Castledore Road, Tunstead',\n            shippingType: 'Via Flat Rate',\n            status: 'success',\n            amount: 90\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 191,\n            name: 'David Peters',\n            email: 'peter@example.com',\n            date: '29/04/2019',\n            address: 'David Peters, Rhyd Y Groes, Rhosgoch, LL66 0AT',\n            shippingType: 'Via Link Road',\n            status: 'success',\n            amount: 69\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 192,\n            name: 'Jennifer Johnson',\n            email: 'jennifer@example.com',\n            date: '28/04/2019',\n            address: 'Jennifer Johnson, Rhyd Y Groes, Rhosgoch, LL66 0AT',\n            shippingType: 'Via Flat Rate',\n            status: 'processing',\n            amount: 112\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 193,\n            name: ' Demarcus Okuneva',\n            email: 'okuneva@example.com',\n            date: '28/04/2019',\n            address: ' Demarcus Okuneva, 90555 Upton Drive Jeffreyview, UT 08771',\n            shippingType: 'Via Flat Rate',\n            status: 'success',\n            amount: 99\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 194,\n            name: 'Simeon Harber',\n            email: 'simeon@example.com',\n            date: '27/04/2019',\n            address: 'Simeon Harber, 702 Kunde Plain Apt. 634 East Bridgetview, HI 13134-1862',\n            shippingType: 'Via Free Shipping',\n            status: 'hold',\n            amount: 129\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 195,\n            name: 'Lavon Haley',\n            email: 'lavon@example.com',\n            date: '27/04/2019',\n            address: 'Lavon Haley, 30998 Adonis Locks McGlynnside, ID 27241',\n            shippingType: 'Via Free Shipping',\n            status: 'pending',\n            amount: 70\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 196,\n            name: 'Ashley Kirlin',\n            email: 'ashley@example.com',\n            date: '26/04/2019',\n            address: 'Ashley Kirlin, 43304 Prosacco Shore South Dejuanfurt, MO 18623-0505',\n            shippingType: 'Via Link Road',\n            status: 'processing',\n            amount: 39\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 197,\n            name: 'Johnnie Considine',\n            email: 'johnnie@example.com',\n            date: '26/04/2019',\n            address: 'Johnnie Considine, 6008 Hermann Points Suite 294 Hansenville, TN 14210',\n            shippingType: 'Via Flat Rate',\n            status: 'pending',\n            amount: 70\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 198,\n            name: 'Trace Farrell',\n            email: 'trace@example.com',\n            date: '26/04/2019',\n            address: 'Trace Farrell, 431 Steuber Mews Apt. 252 Germanland, AK 25882',\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 70\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 199,\n            name: 'Estell Nienow',\n            email: 'nienow@example.com',\n            date: '26/04/2019',\n            address: 'Estell Nienow, 4167 Laverna Manor Marysemouth, NV 74590',\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 59\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 200,\n            name: 'Daisha Howe',\n            email: 'howe@example.com',\n            date: '25/04/2019',\n            address: 'Daisha Howe, 829 Lavonne Valley Apt. 074 Stehrfort, RI 77914-0379',\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 39\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 201,\n            name: 'Miles Haley',\n            email: 'haley@example.com',\n            date: '24/04/2019',\n            address: 'Miles Haley, 53150 Thad Squares Apt. 263 Archibaldfort, MO 00837',\n            shippingType: 'Via Flat Rate',\n            status: 'success',\n            amount: 55\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 202,\n            name: 'Brenda Watsica',\n            email: 'watsica@example.com',\n            date: '24/04/2019',\n            address: \"Brenda Watsica, 9198 O'Kon Harbors Morarborough, IA 75409-7383\",\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 89\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 203,\n            name: \"Ellie O'Reilly\",\n            email: 'ellie@example.com',\n            date: '24/04/2019',\n            address: \"Ellie O'Reilly, 1478 Kaitlin Haven Apt. 061 Lake Muhammadmouth, SC 35848\",\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 47\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 204,\n            name: 'Garry Brainstrow',\n            email: 'garry@example.com',\n            date: '23/04/2019',\n            address: 'Garry Brainstrow, 13572 Kurt Mews South Merritt, IA 52491',\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 139\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 205,\n            name: 'Estell Pollich',\n            email: 'estell@example.com',\n            date: '23/04/2019',\n            address: 'Estell Pollich, 13572 Kurt Mews South Merritt, IA 52491',\n            shippingType: 'Via Free Shipping',\n            status: 'hold',\n            amount: 49\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 206,\n            name: 'Ara Mueller',\n            email: 'ara@example.com',\n            date: '23/04/2019',\n            address: 'Ara Mueller, 91979 Kohler Place Waelchiborough, CT 41291',\n            shippingType: 'Via Flat Rate',\n            status: 'hold',\n            amount: 19\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 207,\n            name: 'Lucienne Blick',\n            email: 'blick@example.com',\n            date: '23/04/2019',\n            address: 'Lucienne Blick, 6757 Giuseppe Meadows Geraldinemouth, MO 48819-4970',\n            shippingType: 'Via Flat Rate',\n            status: 'hold',\n            amount: 59\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 208,\n            name: 'Laverne Haag',\n            email: 'haag@example.com',\n            date: '22/04/2019',\n            address: 'Laverne Haag, 2327 Kaylee Mill East Citlalli, AZ 89582-3143',\n            shippingType: 'Via Flat Rate',\n            status: 'hold',\n            amount: 49\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 209,\n            name: 'Brandon Bednar',\n            email: 'bednar@example.com',\n            date: '22/04/2019',\n            address: 'Brandon Bednar, 25156 Isaac Crossing Apt. 810 Lonborough, CO 83774-5999',\n            shippingType: 'Via Flat Rate',\n            status: 'hold',\n            amount: 39\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 210,\n            name: 'Dimitri Boehm',\n            email: 'dimitri@example.com',\n            date: '23/04/2019',\n            address: 'Dimitri Boehm, 71603 Wolff Plains Apt. 885 Johnstonton, MI 01581',\n            shippingType: 'Via Flat Rate',\n            status: 'hold',\n            amount: 111\n          }\n        ]);\n\n        setDetailedDataTableColumns([\n          {\n            dataField: 'id',\n            text: 'Space',\n            classes: 'py-2 align-middle',\n            formatter: orderFormatter,\n            sort: true\n          },\n          {\n            dataField: 'date',\n            text: 'Date',\n            classes: 'py-2 align-middle',\n            sort: true\n          },\n          {\n            dataField: 'address',\n            text: 'Description',\n            classes: 'py-2 align-middle',\n            formatter: shippingFormatter,\n            sort: true\n          },\n          {\n            dataField: 'status',\n            text: 'Status',\n            classes: 'py-2 align-middle',\n            formatter: badgeFormatter,\n            sort: true\n          },\n          {\n            dataField: '',\n            text: '',\n            classes: 'py-2 align-middle',\n            formatter: actionFormatter,\n            align: 'right'\n          }\n        ]);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  \n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'combinedequipmentfault.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Fault Detection & Diagnostics')}</BreadcrumbItem><BreadcrumbItem active>{t('Combined Equipment Faults Data')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"combinedEquipmentSelect\">\n                    {t('Combined Equipment')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"combinedEquipmentSelect\" name=\"combinedEquipmentSelect\" onChange={({ target }) => setSelectedCombinedEquipment(target.value)}\n                  >\n                    {combinedEquipmentList.map((combinedEquipment, index) => (\n                      <option value={combinedEquipment.value} key={combinedEquipment.value}>\n                        {combinedEquipment.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <Card className=\"mb-3\">\n        <FalconCardHeader title={t('Fault List')} light={false}>\n          {isSelected ? (\n            <InputGroup size=\"sm\" className=\"input-group input-group-sm\">\n              <CustomInput type=\"select\" id=\"bulk-select\">\n                <option>Bulk actions</option>\n                <option value=\"Refund\">Refund</option>\n                <option value=\"Delete\">Delete</option>\n                <option value=\"Archive\">Archive</option>\n              </CustomInput>\n              <Button color=\"falcon-default\" size=\"sm\" className=\"ml-2\">\n                Apply\n                </Button>\n            </InputGroup>\n          ) : (\n              <Fragment>\n               \n              </Fragment>\n            )}\n        </FalconCardHeader>\n        <CardBody className=\"p-0\">\n          <PaginationProvider pagination={paginationFactory(options)}>\n            {({ paginationProps, paginationTableProps }) => {\n              const lastIndex = paginationProps.page * paginationProps.sizePerPage;\n\n              return (\n                <Fragment>\n                  <div className=\"table-responsive\">\n                    <BootstrapTable\n                      ref={table}\n                      bootstrap4\n                      keyField=\"id\"\n                      data={detailedDataTableData}\n                      columns={detailedDataTableColumns}\n                      selectRow={selectRow(onSelect)}\n                      bordered={false}\n                      classes=\"table-dashboard table-striped table-sm fs--1 border-bottom mb-0 table-dashboard-th-nowrap\"\n                      rowClasses=\"btn-reveal-trigger\"\n                      headerClasses=\"bg-200 text-900\"\n                      {...paginationTableProps}\n                    />\n                  </div>\n                  <Row noGutters className=\"px-1 py-3 flex-center\">\n                    <Col xs=\"auto\">\n                      <Button\n                        color=\"falcon-default\"\n                        size=\"sm\"\n                        onClick={handlePrevPage(paginationProps)}\n                        disabled={paginationProps.page === 1}\n                      >\n                        <FontAwesomeIcon icon=\"chevron-left\" />\n                      </Button>\n                      {getPaginationArray(paginationProps.totalSize, paginationProps.sizePerPage).map(pageNo => (\n                        <Button\n                          color={paginationProps.page === pageNo ? 'falcon-primary' : 'falcon-default'}\n                          size=\"sm\"\n                          className=\"ml-2\"\n                          onClick={() => paginationProps.onPageChange(pageNo)}\n                          key={pageNo}\n                        >\n                          {pageNo}\n                        </Button>\n                      ))}\n                      <Button\n                        color=\"falcon-default\"\n                        size=\"sm\"\n                        className=\"ml-2\"\n                        onClick={handleNextPage(paginationProps)}\n                        disabled={lastIndex >= paginationProps.totalSize}\n                      >\n                        <FontAwesomeIcon icon=\"chevron-right\" />\n                      </Button>\n                    </Col>\n                  </Row>\n                </Fragment>\n              );\n            }}\n          </PaginationProvider>\n        </CardBody>\n      </Card>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(CombinedEquipmentFault));\n","import React, { createRef, Fragment, useEffect, useState } from 'react';\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  InputGroup,\n  UncontrolledDropdown,\n  Spinner,\n} from 'reactstrap';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport Cascader from 'rc-cascader';\nimport { Link } from 'react-router-dom';\nimport Badge from 'reactstrap/es/Badge';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport FalconCardHeader from '../../common/FalconCardHeader';\nimport uuid from 'uuid/v1';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { getPaginationArray } from '../../../helpers/utils';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\n\n\nconst EquipmentFault = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [equipmentList, setEquipmentList] = useState([]);\n  const [selectedEquipment, setSelectedEquipment] = useState(undefined);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n  \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n  //Results\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n\n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Equipments by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/equipments', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setEquipmentList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedEquipment(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedEquipment(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Equipments by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n  const orderFormatter = (dataField, { id, name, email }) => (\n    <Fragment>\n      <Link to=\"/e-commerce/order-details\">\n        <strong>#{id}</strong>\n      </Link>{' '}\n      by <strong>{name}</strong>\n      <br />\n      <a href={`mailto:${email}`}>{email}</a>\n    </Fragment>\n  );\n\n  const shippingFormatter = (address, { shippingType }) => (\n    <Fragment>\n      {address}\n      <p className=\"mb-0 text-500\">{shippingType}</p>\n    </Fragment>\n  );\n\n  const badgeFormatter = status => {\n    let color = '';\n    let icon = '';\n    let text = '';\n    switch (status) {\n      case 'success':\n        color = 'success';\n        icon = 'check';\n        text = 'Completed';\n        break;\n      case 'hold':\n        color = 'secondary';\n        icon = 'ban';\n        text = 'On hold';\n        break;\n      case 'processing':\n        color = 'primary';\n        icon = 'redo';\n        text = 'Processing';\n        break;\n      case 'pending':\n        color = 'warning';\n        icon = 'stream';\n        text = 'Pending';\n        break;\n      default:\n        color = 'warning';\n        icon = 'stream';\n        text = 'Pending';\n    }\n\n    return (\n      <Badge color={`soft-${color}`} className=\"rounded-capsule fs--1 d-block\">\n        {text}\n        <FontAwesomeIcon icon={icon} transform=\"shrink-2\" className=\"ml-1\" />\n      </Badge>\n    );\n  };\n\n  const actionFormatter = (dataField, { id }) => (\n    // Control your row with this id\n    <UncontrolledDropdown>\n      <DropdownToggle color=\"link\" size=\"sm\" className=\"text-600 btn-reveal mr-3\">\n        <FontAwesomeIcon icon=\"ellipsis-h\" className=\"fs--1\" />\n      </DropdownToggle>\n      <DropdownMenu right className=\"border py-2\">\n        <DropdownItem onClick={() => console.log('Completed: ', id)}>Completed</DropdownItem>\n        <DropdownItem onClick={() => console.log('Processing: ', id)}>Processing</DropdownItem>\n        <DropdownItem onClick={() => console.log('On hold: ', id)}>On hold</DropdownItem>\n        <DropdownItem onClick={() => console.log('Pending: ', id)}>Pending</DropdownItem>\n        <DropdownItem divider />\n        <DropdownItem onClick={() => console.log('Delete: ', id)} className=\"text-danger\">\n          Delete\n        </DropdownItem>\n      </DropdownMenu>\n    </UncontrolledDropdown>\n  );\n\n  const options = {\n    custom: true,\n    sizePerPage: 10,\n    totalSize: detailedDataTableData.length\n  };\n\n  const SelectRowInput = ({ indeterminate, rowIndex, ...rest }) => (\n    <div className=\"custom-control custom-checkbox\">\n      <input\n        className=\"custom-control-input\"\n        {...rest}\n        onChange={() => { }}\n        ref={input => {\n          if (input) input.indeterminate = indeterminate;\n        }}\n      />\n      <label className=\"custom-control-label\" />\n    </div>\n  );\n\n  const selectRow = onSelect => ({\n    mode: 'checkbox',\n    classes: 'py-2 align-middle',\n    clickToSelect: false,\n    selectionHeaderRenderer: ({ mode, ...rest }) => <SelectRowInput type=\"checkbox\" {...rest} />,\n    selectionRenderer: ({ mode, ...rest }) => <SelectRowInput type={mode} {...rest} />,\n    onSelect: onSelect,\n    onSelectAll: onSelect\n  });\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  // State\n  let table = createRef();\n\n  const [isSelected, setIsSelected] = useState(false);\n  const handleNextPage = ({ page, onPageChange }) => () => {\n    onPageChange(page + 1);\n  };\n\n  const handlePrevPage = ({ page, onPageChange }) => () => {\n    onPageChange(page - 1);\n  };\n\n  const onSelect = () => {\n    setImmediate(() => {\n      setIsSelected(!!table.current.selectionContext.selected.length);\n    });\n  };\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/equipments', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setEquipmentList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedEquipment(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedEquipment(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedEquipment);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/fddequipmentfault?' +\n      'equipmentid' + selectedEquipment +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n\n      // enable submit button\n      setSubmitButtonDisabled(false);\n      // hide spinner\n      setSpinnerHidden(true);\n      // show export buttion\n      setExportButtonHidden(false)\n\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json);\n              \n        setDetailedDataTableData([\n          {\n            id: uuid().split('-')[0],\n            // id: 181,\n            name: 'Ricky Antony',\n            email: 'ricky@example.com',\n            date: '20/04/2019',\n            address: 'Ricky Antony, 2392 Main Avenue, Penasauka, New Jersey 02149',\n            shippingType: 'Via Flat Rate',\n            status: 'success',\n            amount: 99\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 182,\n            name: 'Kin Rossow',\n            email: 'kin@example.com',\n            date: '20/04/2019',\n            address: 'Kin Rossow, 1 Hollywood Blvd,Beverly Hills, California 90210',\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 120\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 183,\n            name: 'Merry Diana',\n            email: 'merry@example.com',\n            date: '30/04/2019',\n            address: 'Merry Diana, 1 Infinite Loop, Cupertino, California 90210',\n            shippingType: 'Via Link Road',\n            status: 'hold',\n            amount: 70\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 184,\n            name: 'Bucky Robert',\n            email: 'bucky@example.com',\n            date: '30/04/2019',\n            address: 'Bucky Robert, 1 Infinite Loop, Cupertino, California 90210',\n            shippingType: 'Via Free Shipping',\n            status: 'pending',\n            amount: 92\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 185,\n            name: 'Rocky Zampa',\n            email: 'rocky@example.com',\n            date: '30/04/2019',\n            address: 'Rocky Zampa, 1 Infinite Loop, Cupertino, California 90210',\n            shippingType: 'Via Free Road',\n            status: 'hold',\n            amount: 120\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 186,\n            name: 'Ricky John',\n            email: 'ricky@example.com',\n            date: '30/04/2019',\n            address: 'Ricky John, 1 Infinite Loop, Cupertino, California 90210',\n            shippingType: 'Via Free Shipping',\n            status: 'processing',\n            amount: 145\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 187,\n            name: 'Cristofer Henric',\n            email: 'cristofer@example.com',\n            date: '30/04/2019',\n            address: 'Cristofer Henric, 1 Infinite Loop, Cupertino, California 90210',\n            shippingType: 'Via Flat Rate',\n            status: 'success',\n            amount: 55\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 188,\n            name: 'Brate Lee',\n            email: 'lee@example.com',\n            date: '29/04/2019',\n            address: 'Brate Lee, 1 Infinite Loop, Cupertino, California 90210',\n            shippingType: 'Via Link Road',\n            status: 'hold',\n            amount: 90\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 189,\n            name: 'Thomas Stephenson',\n            email: 'Stephenson@example.com',\n            date: '29/04/2019',\n            address: 'Thomas Stephenson, 116 Ballifeary Road, Bamff',\n            shippingType: 'Via Flat Rate',\n            status: 'processing',\n            amount: 52\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 190,\n            name: 'Evie Singh',\n            email: 'eviewsing@example.com',\n            date: '29/04/2019',\n            address: 'Evie Singh, 54 Castledore Road, Tunstead',\n            shippingType: 'Via Flat Rate',\n            status: 'success',\n            amount: 90\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 191,\n            name: 'David Peters',\n            email: 'peter@example.com',\n            date: '29/04/2019',\n            address: 'David Peters, Rhyd Y Groes, Rhosgoch, LL66 0AT',\n            shippingType: 'Via Link Road',\n            status: 'success',\n            amount: 69\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 192,\n            name: 'Jennifer Johnson',\n            email: 'jennifer@example.com',\n            date: '28/04/2019',\n            address: 'Jennifer Johnson, Rhyd Y Groes, Rhosgoch, LL66 0AT',\n            shippingType: 'Via Flat Rate',\n            status: 'processing',\n            amount: 112\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 193,\n            name: ' Demarcus Okuneva',\n            email: 'okuneva@example.com',\n            date: '28/04/2019',\n            address: ' Demarcus Okuneva, 90555 Upton Drive Jeffreyview, UT 08771',\n            shippingType: 'Via Flat Rate',\n            status: 'success',\n            amount: 99\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 194,\n            name: 'Simeon Harber',\n            email: 'simeon@example.com',\n            date: '27/04/2019',\n            address: 'Simeon Harber, 702 Kunde Plain Apt. 634 East Bridgetview, HI 13134-1862',\n            shippingType: 'Via Free Shipping',\n            status: 'hold',\n            amount: 129\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 195,\n            name: 'Lavon Haley',\n            email: 'lavon@example.com',\n            date: '27/04/2019',\n            address: 'Lavon Haley, 30998 Adonis Locks McGlynnside, ID 27241',\n            shippingType: 'Via Free Shipping',\n            status: 'pending',\n            amount: 70\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 196,\n            name: 'Ashley Kirlin',\n            email: 'ashley@example.com',\n            date: '26/04/2019',\n            address: 'Ashley Kirlin, 43304 Prosacco Shore South Dejuanfurt, MO 18623-0505',\n            shippingType: 'Via Link Road',\n            status: 'processing',\n            amount: 39\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 197,\n            name: 'Johnnie Considine',\n            email: 'johnnie@example.com',\n            date: '26/04/2019',\n            address: 'Johnnie Considine, 6008 Hermann Points Suite 294 Hansenville, TN 14210',\n            shippingType: 'Via Flat Rate',\n            status: 'pending',\n            amount: 70\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 198,\n            name: 'Trace Farrell',\n            email: 'trace@example.com',\n            date: '26/04/2019',\n            address: 'Trace Farrell, 431 Steuber Mews Apt. 252 Germanland, AK 25882',\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 70\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 199,\n            name: 'Estell Nienow',\n            email: 'nienow@example.com',\n            date: '26/04/2019',\n            address: 'Estell Nienow, 4167 Laverna Manor Marysemouth, NV 74590',\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 59\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 200,\n            name: 'Daisha Howe',\n            email: 'howe@example.com',\n            date: '25/04/2019',\n            address: 'Daisha Howe, 829 Lavonne Valley Apt. 074 Stehrfort, RI 77914-0379',\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 39\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 201,\n            name: 'Miles Haley',\n            email: 'haley@example.com',\n            date: '24/04/2019',\n            address: 'Miles Haley, 53150 Thad Squares Apt. 263 Archibaldfort, MO 00837',\n            shippingType: 'Via Flat Rate',\n            status: 'success',\n            amount: 55\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 202,\n            name: 'Brenda Watsica',\n            email: 'watsica@example.com',\n            date: '24/04/2019',\n            address: \"Brenda Watsica, 9198 O'Kon Harbors Morarborough, IA 75409-7383\",\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 89\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 203,\n            name: \"Ellie O'Reilly\",\n            email: 'ellie@example.com',\n            date: '24/04/2019',\n            address: \"Ellie O'Reilly, 1478 Kaitlin Haven Apt. 061 Lake Muhammadmouth, SC 35848\",\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 47\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 204,\n            name: 'Garry Brainstrow',\n            email: 'garry@example.com',\n            date: '23/04/2019',\n            address: 'Garry Brainstrow, 13572 Kurt Mews South Merritt, IA 52491',\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 139\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 205,\n            name: 'Estell Pollich',\n            email: 'estell@example.com',\n            date: '23/04/2019',\n            address: 'Estell Pollich, 13572 Kurt Mews South Merritt, IA 52491',\n            shippingType: 'Via Free Shipping',\n            status: 'hold',\n            amount: 49\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 206,\n            name: 'Ara Mueller',\n            email: 'ara@example.com',\n            date: '23/04/2019',\n            address: 'Ara Mueller, 91979 Kohler Place Waelchiborough, CT 41291',\n            shippingType: 'Via Flat Rate',\n            status: 'hold',\n            amount: 19\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 207,\n            name: 'Lucienne Blick',\n            email: 'blick@example.com',\n            date: '23/04/2019',\n            address: 'Lucienne Blick, 6757 Giuseppe Meadows Geraldinemouth, MO 48819-4970',\n            shippingType: 'Via Flat Rate',\n            status: 'hold',\n            amount: 59\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 208,\n            name: 'Laverne Haag',\n            email: 'haag@example.com',\n            date: '22/04/2019',\n            address: 'Laverne Haag, 2327 Kaylee Mill East Citlalli, AZ 89582-3143',\n            shippingType: 'Via Flat Rate',\n            status: 'hold',\n            amount: 49\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 209,\n            name: 'Brandon Bednar',\n            email: 'bednar@example.com',\n            date: '22/04/2019',\n            address: 'Brandon Bednar, 25156 Isaac Crossing Apt. 810 Lonborough, CO 83774-5999',\n            shippingType: 'Via Flat Rate',\n            status: 'hold',\n            amount: 39\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 210,\n            name: 'Dimitri Boehm',\n            email: 'dimitri@example.com',\n            date: '23/04/2019',\n            address: 'Dimitri Boehm, 71603 Wolff Plains Apt. 885 Johnstonton, MI 01581',\n            shippingType: 'Via Flat Rate',\n            status: 'hold',\n            amount: 111\n          }\n        ]);\n        setDetailedDataTableColumns([\n          {\n            dataField: 'id',\n            text: 'Space',\n            classes: 'py-2 align-middle',\n            formatter: orderFormatter,\n            sort: true\n          },\n          {\n            dataField: 'date',\n            text: 'Date',\n            classes: 'py-2 align-middle',\n            sort: true\n          },\n          {\n            dataField: 'address',\n            text: 'Description',\n            classes: 'py-2 align-middle',\n            formatter: shippingFormatter,\n            sort: true\n          },\n          {\n            dataField: 'status',\n            text: 'Status',\n            classes: 'py-2 align-middle',\n            formatter: badgeFormatter,\n            sort: true\n          },\n          {\n            dataField: '',\n            text: '',\n            classes: 'py-2 align-middle',\n            formatter: actionFormatter,\n            align: 'right'\n          }\n        ]);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  \n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'equipmentfault.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Fault Detection & Diagnostics')}</BreadcrumbItem><BreadcrumbItem active>{t('Equipment Faults Data')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"equipmentSelect\">\n                    {t('Equipment')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"equipmentSelect\" name=\"equipmentSelect\" onChange={({ target }) => setSelectedEquipment(target.value)}\n                  >\n                    {equipmentList.map((equipment, index) => (\n                      <option value={equipment.value} key={equipment.value}>\n                        {equipment.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <Card className=\"mb-3\">\n        <FalconCardHeader title={t('Fault List')} light={false}>\n          {isSelected ? (\n            <InputGroup size=\"sm\" className=\"input-group input-group-sm\">\n              <CustomInput type=\"select\" id=\"bulk-select\">\n                <option>Bulk actions</option>\n                <option value=\"Refund\">Refund</option>\n                <option value=\"Delete\">Delete</option>\n                <option value=\"Archive\">Archive</option>\n              </CustomInput>\n              <Button color=\"falcon-default\" size=\"sm\" className=\"ml-2\">\n                Apply\n                </Button>\n            </InputGroup>\n          ) : (\n              <Fragment>\n                \n              </Fragment>\n            )}\n        </FalconCardHeader>\n        <CardBody className=\"p-0\">\n          <PaginationProvider pagination={paginationFactory(options)}>\n            {({ paginationProps, paginationTableProps }) => {\n              const lastIndex = paginationProps.page * paginationProps.sizePerPage;\n\n              return (\n                <Fragment>\n                  <div className=\"table-responsive\">\n                    <BootstrapTable\n                      ref={table}\n                      bootstrap4\n                      keyField=\"id\"\n                      data={detailedDataTableData}\n                      columns={detailedDataTableColumns}\n                      selectRow={selectRow(onSelect)}\n                      bordered={false}\n                      classes=\"table-dashboard table-striped table-sm fs--1 border-bottom mb-0 table-dashboard-th-nowrap\"\n                      rowClasses=\"btn-reveal-trigger\"\n                      headerClasses=\"bg-200 text-900\"\n                      {...paginationTableProps}\n                    />\n                  </div>\n                  <Row noGutters className=\"px-1 py-3 flex-center\">\n                    <Col xs=\"auto\">\n                      <Button\n                        color=\"falcon-default\"\n                        size=\"sm\"\n                        onClick={handlePrevPage(paginationProps)}\n                        disabled={paginationProps.page === 1}\n                      >\n                        <FontAwesomeIcon icon=\"chevron-left\" />\n                      </Button>\n                      {getPaginationArray(paginationProps.totalSize, paginationProps.sizePerPage).map(pageNo => (\n                        <Button\n                          color={paginationProps.page === pageNo ? 'falcon-primary' : 'falcon-default'}\n                          size=\"sm\"\n                          className=\"ml-2\"\n                          onClick={() => paginationProps.onPageChange(pageNo)}\n                          key={pageNo}\n                        >\n                          {pageNo}\n                        </Button>\n                      ))}\n                      <Button\n                        color=\"falcon-default\"\n                        size=\"sm\"\n                        className=\"ml-2\"\n                        onClick={handleNextPage(paginationProps)}\n                        disabled={lastIndex >= paginationProps.totalSize}\n                      >\n                        <FontAwesomeIcon icon=\"chevron-right\" />\n                      </Button>\n                    </Col>\n                  </Row>\n                </Fragment>\n              );\n            }}\n          </PaginationProvider>\n        </CardBody>\n      </Card>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(EquipmentFault));\n","import React, { createRef, Fragment, useEffect, useState } from 'react';\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  InputGroup,\n  UncontrolledDropdown,\n  Spinner,\n} from 'reactstrap';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport Cascader from 'rc-cascader';\nimport { Link } from 'react-router-dom';\nimport Badge from 'reactstrap/es/Badge';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport FalconCardHeader from '../../common/FalconCardHeader';\nimport uuid from 'uuid/v1';\nimport { getPaginationArray } from '../../../helpers/utils';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\n\n\nconst SpaceFault = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n  \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n  //Results\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n\n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n        // enable submit button\n        setSubmitButtonDisabled(false);\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n  const orderFormatter = (dataField, { id, name, email }) => (\n    <Fragment>\n      <Link to=\"/e-commerce/order-details\">\n        <strong>#{id}</strong>\n      </Link>{' '}\n      by <strong>{name}</strong>\n      <br />\n      <a href={`mailto:${email}`}>{email}</a>\n    </Fragment>\n  );\n\n  const shippingFormatter = (address, { shippingType }) => (\n    <Fragment>\n      {address}\n      <p className=\"mb-0 text-500\">{shippingType}</p>\n    </Fragment>\n  );\n\n  const badgeFormatter = status => {\n    let color = '';\n    let icon = '';\n    let text = '';\n    switch (status) {\n      case 'success':\n        color = 'success';\n        icon = 'check';\n        text = 'Completed';\n        break;\n      case 'hold':\n        color = 'secondary';\n        icon = 'ban';\n        text = 'On hold';\n        break;\n      case 'processing':\n        color = 'primary';\n        icon = 'redo';\n        text = 'Processing';\n        break;\n      case 'pending':\n        color = 'warning';\n        icon = 'stream';\n        text = 'Pending';\n        break;\n      default:\n        color = 'warning';\n        icon = 'stream';\n        text = 'Pending';\n    }\n\n    return (\n      <Badge color={`soft-${color}`} className=\"rounded-capsule fs--1 d-block\">\n        {text}\n        <FontAwesomeIcon icon={icon} transform=\"shrink-2\" className=\"ml-1\" />\n      </Badge>\n    );\n  };\n\n  const actionFormatter = (dataField, { id }) => (\n    // Control your row with this id\n    <UncontrolledDropdown>\n      <DropdownToggle color=\"link\" size=\"sm\" className=\"text-600 btn-reveal mr-3\">\n        <FontAwesomeIcon icon=\"ellipsis-h\" className=\"fs--1\" />\n      </DropdownToggle>\n      <DropdownMenu right className=\"border py-2\">\n        <DropdownItem onClick={() => console.log('Completed: ', id)}>Completed</DropdownItem>\n        <DropdownItem onClick={() => console.log('Processing: ', id)}>Processing</DropdownItem>\n        <DropdownItem onClick={() => console.log('On hold: ', id)}>On hold</DropdownItem>\n        <DropdownItem onClick={() => console.log('Pending: ', id)}>Pending</DropdownItem>\n        <DropdownItem divider />\n        <DropdownItem onClick={() => console.log('Delete: ', id)} className=\"text-danger\">\n          Delete\n        </DropdownItem>\n      </DropdownMenu>\n    </UncontrolledDropdown>\n  );\n\n  const options = {\n    custom: true,\n    sizePerPage: 10,\n    totalSize: detailedDataTableData.length\n  };\n\n  const SelectRowInput = ({ indeterminate, rowIndex, ...rest }) => (\n    <div className=\"custom-control custom-checkbox\">\n      <input\n        className=\"custom-control-input\"\n        {...rest}\n        onChange={() => { }}\n        ref={input => {\n          if (input) input.indeterminate = indeterminate;\n        }}\n      />\n      <label className=\"custom-control-label\" />\n    </div>\n  );\n\n  const selectRow = onSelect => ({\n    mode: 'checkbox',\n    classes: 'py-2 align-middle',\n    clickToSelect: false,\n    selectionHeaderRenderer: ({ mode, ...rest }) => <SelectRowInput type=\"checkbox\" {...rest} />,\n    selectionRenderer: ({ mode, ...rest }) => <SelectRowInput type={mode} {...rest} />,\n    onSelect: onSelect,\n    onSelectAll: onSelect\n  });\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let table = createRef();\n\n  const [isSelected, setIsSelected] = useState(false);\n  const handleNextPage = ({ page, onPageChange }) => () => {\n    onPageChange(page + 1);\n  };\n\n  const handlePrevPage = ({ page, onPageChange }) => () => {\n    onPageChange(page - 1);\n  };\n\n  const onSelect = () => {\n    setImmediate(() => {\n      setIsSelected(!!table.current.selectionContext.selected.length);\n    });\n  };\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    console.log(value, selectedOptions);\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n  }\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/fddspacefault?' +\n      'spaceid=' + selectedSpaceID + \n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n\n      // enable submit button\n      setSubmitButtonDisabled(false);\n      // hide spinner\n      setSpinnerHidden(true);\n      // show export buttion\n      setExportButtonHidden(false)\n\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n        setDetailedDataTableData([\n          {\n            id: uuid().split('-')[0],\n            // id: 181,\n            name: 'Ricky Antony',\n            email: 'ricky@example.com',\n            date: '20/04/2019',\n            address: 'Ricky Antony, 2392 Main Avenue, Penasauka, New Jersey 02149',\n            shippingType: 'Via Flat Rate',\n            status: 'success',\n            amount: 99\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 182,\n            name: 'Kin Rossow',\n            email: 'kin@example.com',\n            date: '20/04/2019',\n            address: 'Kin Rossow, 1 Hollywood Blvd,Beverly Hills, California 90210',\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 120\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 183,\n            name: 'Merry Diana',\n            email: 'merry@example.com',\n            date: '30/04/2019',\n            address: 'Merry Diana, 1 Infinite Loop, Cupertino, California 90210',\n            shippingType: 'Via Link Road',\n            status: 'hold',\n            amount: 70\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 184,\n            name: 'Bucky Robert',\n            email: 'bucky@example.com',\n            date: '30/04/2019',\n            address: 'Bucky Robert, 1 Infinite Loop, Cupertino, California 90210',\n            shippingType: 'Via Free Shipping',\n            status: 'pending',\n            amount: 92\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 185,\n            name: 'Rocky Zampa',\n            email: 'rocky@example.com',\n            date: '30/04/2019',\n            address: 'Rocky Zampa, 1 Infinite Loop, Cupertino, California 90210',\n            shippingType: 'Via Free Road',\n            status: 'hold',\n            amount: 120\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 186,\n            name: 'Ricky John',\n            email: 'ricky@example.com',\n            date: '30/04/2019',\n            address: 'Ricky John, 1 Infinite Loop, Cupertino, California 90210',\n            shippingType: 'Via Free Shipping',\n            status: 'processing',\n            amount: 145\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 187,\n            name: 'Cristofer Henric',\n            email: 'cristofer@example.com',\n            date: '30/04/2019',\n            address: 'Cristofer Henric, 1 Infinite Loop, Cupertino, California 90210',\n            shippingType: 'Via Flat Rate',\n            status: 'success',\n            amount: 55\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 188,\n            name: 'Brate Lee',\n            email: 'lee@example.com',\n            date: '29/04/2019',\n            address: 'Brate Lee, 1 Infinite Loop, Cupertino, California 90210',\n            shippingType: 'Via Link Road',\n            status: 'hold',\n            amount: 90\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 189,\n            name: 'Thomas Stephenson',\n            email: 'Stephenson@example.com',\n            date: '29/04/2019',\n            address: 'Thomas Stephenson, 116 Ballifeary Road, Bamff',\n            shippingType: 'Via Flat Rate',\n            status: 'processing',\n            amount: 52\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 190,\n            name: 'Evie Singh',\n            email: 'eviewsing@example.com',\n            date: '29/04/2019',\n            address: 'Evie Singh, 54 Castledore Road, Tunstead',\n            shippingType: 'Via Flat Rate',\n            status: 'success',\n            amount: 90\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 191,\n            name: 'David Peters',\n            email: 'peter@example.com',\n            date: '29/04/2019',\n            address: 'David Peters, Rhyd Y Groes, Rhosgoch, LL66 0AT',\n            shippingType: 'Via Link Road',\n            status: 'success',\n            amount: 69\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 192,\n            name: 'Jennifer Johnson',\n            email: 'jennifer@example.com',\n            date: '28/04/2019',\n            address: 'Jennifer Johnson, Rhyd Y Groes, Rhosgoch, LL66 0AT',\n            shippingType: 'Via Flat Rate',\n            status: 'processing',\n            amount: 112\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 193,\n            name: ' Demarcus Okuneva',\n            email: 'okuneva@example.com',\n            date: '28/04/2019',\n            address: ' Demarcus Okuneva, 90555 Upton Drive Jeffreyview, UT 08771',\n            shippingType: 'Via Flat Rate',\n            status: 'success',\n            amount: 99\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 194,\n            name: 'Simeon Harber',\n            email: 'simeon@example.com',\n            date: '27/04/2019',\n            address: 'Simeon Harber, 702 Kunde Plain Apt. 634 East Bridgetview, HI 13134-1862',\n            shippingType: 'Via Free Shipping',\n            status: 'hold',\n            amount: 129\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 195,\n            name: 'Lavon Haley',\n            email: 'lavon@example.com',\n            date: '27/04/2019',\n            address: 'Lavon Haley, 30998 Adonis Locks McGlynnside, ID 27241',\n            shippingType: 'Via Free Shipping',\n            status: 'pending',\n            amount: 70\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 196,\n            name: 'Ashley Kirlin',\n            email: 'ashley@example.com',\n            date: '26/04/2019',\n            address: 'Ashley Kirlin, 43304 Prosacco Shore South Dejuanfurt, MO 18623-0505',\n            shippingType: 'Via Link Road',\n            status: 'processing',\n            amount: 39\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 197,\n            name: 'Johnnie Considine',\n            email: 'johnnie@example.com',\n            date: '26/04/2019',\n            address: 'Johnnie Considine, 6008 Hermann Points Suite 294 Hansenville, TN 14210',\n            shippingType: 'Via Flat Rate',\n            status: 'pending',\n            amount: 70\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 198,\n            name: 'Trace Farrell',\n            email: 'trace@example.com',\n            date: '26/04/2019',\n            address: 'Trace Farrell, 431 Steuber Mews Apt. 252 Germanland, AK 25882',\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 70\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 199,\n            name: 'Estell Nienow',\n            email: 'nienow@example.com',\n            date: '26/04/2019',\n            address: 'Estell Nienow, 4167 Laverna Manor Marysemouth, NV 74590',\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 59\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 200,\n            name: 'Daisha Howe',\n            email: 'howe@example.com',\n            date: '25/04/2019',\n            address: 'Daisha Howe, 829 Lavonne Valley Apt. 074 Stehrfort, RI 77914-0379',\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 39\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 201,\n            name: 'Miles Haley',\n            email: 'haley@example.com',\n            date: '24/04/2019',\n            address: 'Miles Haley, 53150 Thad Squares Apt. 263 Archibaldfort, MO 00837',\n            shippingType: 'Via Flat Rate',\n            status: 'success',\n            amount: 55\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 202,\n            name: 'Brenda Watsica',\n            email: 'watsica@example.com',\n            date: '24/04/2019',\n            address: \"Brenda Watsica, 9198 O'Kon Harbors Morarborough, IA 75409-7383\",\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 89\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 203,\n            name: \"Ellie O'Reilly\",\n            email: 'ellie@example.com',\n            date: '24/04/2019',\n            address: \"Ellie O'Reilly, 1478 Kaitlin Haven Apt. 061 Lake Muhammadmouth, SC 35848\",\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 47\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 204,\n            name: 'Garry Brainstrow',\n            email: 'garry@example.com',\n            date: '23/04/2019',\n            address: 'Garry Brainstrow, 13572 Kurt Mews South Merritt, IA 52491',\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 139\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 205,\n            name: 'Estell Pollich',\n            email: 'estell@example.com',\n            date: '23/04/2019',\n            address: 'Estell Pollich, 13572 Kurt Mews South Merritt, IA 52491',\n            shippingType: 'Via Free Shipping',\n            status: 'hold',\n            amount: 49\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 206,\n            name: 'Ara Mueller',\n            email: 'ara@example.com',\n            date: '23/04/2019',\n            address: 'Ara Mueller, 91979 Kohler Place Waelchiborough, CT 41291',\n            shippingType: 'Via Flat Rate',\n            status: 'hold',\n            amount: 19\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 207,\n            name: 'Lucienne Blick',\n            email: 'blick@example.com',\n            date: '23/04/2019',\n            address: 'Lucienne Blick, 6757 Giuseppe Meadows Geraldinemouth, MO 48819-4970',\n            shippingType: 'Via Flat Rate',\n            status: 'hold',\n            amount: 59\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 208,\n            name: 'Laverne Haag',\n            email: 'haag@example.com',\n            date: '22/04/2019',\n            address: 'Laverne Haag, 2327 Kaylee Mill East Citlalli, AZ 89582-3143',\n            shippingType: 'Via Flat Rate',\n            status: 'hold',\n            amount: 49\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 209,\n            name: 'Brandon Bednar',\n            email: 'bednar@example.com',\n            date: '22/04/2019',\n            address: 'Brandon Bednar, 25156 Isaac Crossing Apt. 810 Lonborough, CO 83774-5999',\n            shippingType: 'Via Flat Rate',\n            status: 'hold',\n            amount: 39\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 210,\n            name: 'Dimitri Boehm',\n            email: 'dimitri@example.com',\n            date: '23/04/2019',\n            address: 'Dimitri Boehm, 71603 Wolff Plains Apt. 885 Johnstonton, MI 01581',\n            shippingType: 'Via Flat Rate',\n            status: 'hold',\n            amount: 111\n          }\n        ]);\n        setDetailedDataTableColumns([\n          {\n            dataField: 'id',\n            text: 'Space',\n            classes: 'py-2 align-middle',\n            formatter: orderFormatter,\n            sort: true\n          },\n          {\n            dataField: 'date',\n            text: 'Date',\n            classes: 'py-2 align-middle',\n            sort: true\n          },\n          {\n            dataField: 'address',\n            text: 'Description',\n            classes: 'py-2 align-middle',\n            formatter: shippingFormatter,\n            sort: true\n          },\n          {\n            dataField: 'status',\n            text: 'Status',\n            classes: 'py-2 align-middle',\n            formatter: badgeFormatter,\n            sort: true\n          },\n          {\n            dataField: '',\n            text: '',\n            classes: 'py-2 align-middle',\n            formatter: actionFormatter,\n            align: 'right'\n          }\n        ]);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  \n  };\n  \n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'spacefault.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Fault Detection & Diagnostics')}</BreadcrumbItem><BreadcrumbItem active>{t('Space Faults Data')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <Card className=\"mb-3\">\n        <FalconCardHeader title={t('Fault List')} light={false}>\n          {isSelected ? (\n            <InputGroup size=\"sm\" className=\"input-group input-group-sm\">\n              <CustomInput type=\"select\" id=\"bulk-select\">\n                <option>Bulk actions</option>\n                <option value=\"Refund\">Refund</option>\n                <option value=\"Delete\">Delete</option>\n                <option value=\"Archive\">Archive</option>\n              </CustomInput>\n              <Button color=\"falcon-default\" size=\"sm\" className=\"ml-2\">\n                Apply\n                </Button>\n            </InputGroup>\n          ) : (\n              <Fragment>\n                \n              </Fragment>\n            )}\n        </FalconCardHeader>\n        <CardBody className=\"p-0\">\n          <PaginationProvider pagination={paginationFactory(options)}>\n            {({ paginationProps, paginationTableProps }) => {\n              const lastIndex = paginationProps.page * paginationProps.sizePerPage;\n\n              return (\n                <Fragment>\n                  <div className=\"table-responsive\">\n                    <BootstrapTable\n                      ref={table}\n                      bootstrap4\n                      keyField=\"id\"\n                      data={detailedDataTableData}\n                      columns={detailedDataTableColumns}\n                      selectRow={selectRow(onSelect)}\n                      bordered={false}\n                      classes=\"table-dashboard table-striped table-sm fs--1 border-bottom mb-0 table-dashboard-th-nowrap\"\n                      rowClasses=\"btn-reveal-trigger\"\n                      headerClasses=\"bg-200 text-900\"\n                      {...paginationTableProps}\n                    />\n                  </div>\n                  <Row noGutters className=\"px-1 py-3 flex-center\">\n                    <Col xs=\"auto\">\n                      <Button\n                        color=\"falcon-default\"\n                        size=\"sm\"\n                        onClick={handlePrevPage(paginationProps)}\n                        disabled={paginationProps.page === 1}\n                      >\n                        <FontAwesomeIcon icon=\"chevron-left\" />\n                      </Button>\n                      {getPaginationArray(paginationProps.totalSize, paginationProps.sizePerPage).map(pageNo => (\n                        <Button\n                          color={paginationProps.page === pageNo ? 'falcon-primary' : 'falcon-default'}\n                          size=\"sm\"\n                          className=\"ml-2\"\n                          onClick={() => paginationProps.onPageChange(pageNo)}\n                          key={pageNo}\n                        >\n                          {pageNo}\n                        </Button>\n                      ))}\n                      <Button\n                        color=\"falcon-default\"\n                        size=\"sm\"\n                        className=\"ml-2\"\n                        onClick={handleNextPage(paginationProps)}\n                        disabled={lastIndex >= paginationProps.totalSize}\n                      >\n                        <FontAwesomeIcon icon=\"chevron-right\" />\n                      </Button>\n                    </Col>\n                  </Row>\n                </Fragment>\n              );\n            }}\n          </PaginationProvider>\n        </CardBody>\n      </Card>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(SpaceFault));\n","import React, { createRef, Fragment, useEffect, useState } from 'react';\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  InputGroup,\n  UncontrolledDropdown,\n  Spinner,\n} from 'reactstrap';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport Cascader from 'rc-cascader';\nimport { Link } from 'react-router-dom';\nimport Badge from 'reactstrap/es/Badge';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport FalconCardHeader from '../../common/FalconCardHeader';\nimport uuid from 'uuid/v1';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { getPaginationArray } from '../../../helpers/utils';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\n\n\nconst TenantFault = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [tenantList, setTenantList] = useState([]);\n  const [selectedTenant, setSelectedTenant] = useState(undefined);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n\n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n  //Results\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n\n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response)\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json)\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Tenants by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/tenants', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setTenantList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedTenant(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedTenant(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Tenants by root Space ID\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n  const orderFormatter = (dataField, { id, name, email }) => (\n    <Fragment>\n      <Link to=\"/e-commerce/order-details\">\n        <strong>#{id}</strong>\n      </Link>{' '}\n      by <strong>{name}</strong>\n      <br />\n      <a href={`mailto:${email}`}>{email}</a>\n    </Fragment>\n  );\n\n  const shippingFormatter = (address, { shippingType }) => (\n    <Fragment>\n      {address}\n      <p className=\"mb-0 text-500\">{shippingType}</p>\n    </Fragment>\n  );\n\n  const badgeFormatter = status => {\n    let color = '';\n    let icon = '';\n    let text = '';\n    switch (status) {\n      case 'success':\n        color = 'success';\n        icon = 'check';\n        text = 'Completed';\n        break;\n      case 'hold':\n        color = 'secondary';\n        icon = 'ban';\n        text = 'On hold';\n        break;\n      case 'processing':\n        color = 'primary';\n        icon = 'redo';\n        text = 'Processing';\n        break;\n      case 'pending':\n        color = 'warning';\n        icon = 'stream';\n        text = 'Pending';\n        break;\n      default:\n        color = 'warning';\n        icon = 'stream';\n        text = 'Pending';\n    }\n\n    return (\n      <Badge color={`soft-${color}`} className=\"rounded-capsule fs--1 d-block\">\n        {text}\n        <FontAwesomeIcon icon={icon} transform=\"shrink-2\" className=\"ml-1\" />\n      </Badge>\n    );\n  };\n\n  const actionFormatter = (dataField, { id }) => (\n    // Control your row with this id\n    <UncontrolledDropdown>\n      <DropdownToggle color=\"link\" size=\"sm\" className=\"text-600 btn-reveal mr-3\">\n        <FontAwesomeIcon icon=\"ellipsis-h\" className=\"fs--1\" />\n      </DropdownToggle>\n      <DropdownMenu right className=\"border py-2\">\n        <DropdownItem onClick={() => console.log('Completed: ', id)}>Completed</DropdownItem>\n        <DropdownItem onClick={() => console.log('Processing: ', id)}>Processing</DropdownItem>\n        <DropdownItem onClick={() => console.log('On hold: ', id)}>On hold</DropdownItem>\n        <DropdownItem onClick={() => console.log('Pending: ', id)}>Pending</DropdownItem>\n        <DropdownItem divider />\n        <DropdownItem onClick={() => console.log('Delete: ', id)} className=\"text-danger\">\n          Delete\n        </DropdownItem>\n      </DropdownMenu>\n    </UncontrolledDropdown>\n  );\n\n  const options = {\n    custom: true,\n    sizePerPage: 10,\n    totalSize: detailedDataTableData.length\n  };\n\n  const SelectRowInput = ({ indeterminate, rowIndex, ...rest }) => (\n    <div className=\"custom-control custom-checkbox\">\n      <input\n        className=\"custom-control-input\"\n        {...rest}\n        onChange={() => { }}\n        ref={input => {\n          if (input) input.indeterminate = indeterminate;\n        }}\n      />\n      <label className=\"custom-control-label\" />\n    </div>\n  );\n\n  const selectRow = onSelect => ({\n    mode: 'checkbox',\n    classes: 'py-2 align-middle',\n    clickToSelect: false,\n    selectionHeaderRenderer: ({ mode, ...rest }) => <SelectRowInput type=\"checkbox\" {...rest} />,\n    selectionRenderer: ({ mode, ...rest }) => <SelectRowInput type={mode} {...rest} />,\n    onSelect: onSelect,\n    onSelectAll: onSelect\n  });\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  // State\n  let table = createRef();\n\n  const [isSelected, setIsSelected] = useState(false);\n  const handleNextPage = ({ page, onPageChange }) => () => {\n    onPageChange(page + 1);\n  };\n\n  const handlePrevPage = ({ page, onPageChange }) => () => {\n    onPageChange(page - 1);\n  };\n\n  const onSelect = () => {\n    setImmediate(() => {\n      setIsSelected(!!table.current.selectionContext.selected.length);\n    });\n  };\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/tenants', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setTenantList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedTenant(json[0][0].value);\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedTenant(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedTenant);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/fddtenantfault?' +\n      'tenantid' + selectedTenant +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n\n      // enable submit button\n      setSubmitButtonDisabled(false);\n      // hide spinner\n      setSpinnerHidden(true);\n      // show export buttion\n      setExportButtonHidden(false)\n\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json);\n              \n        setDetailedDataTableData([\n          {\n            id: uuid().split('-')[0],\n            // id: 181,\n            name: 'Ricky Antony',\n            email: 'ricky@example.com',\n            date: '20/04/2019',\n            address: 'Ricky Antony, 2392 Main Avenue, Penasauka, New Jersey 02149',\n            shippingType: 'Via Flat Rate',\n            status: 'success',\n            amount: 99\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 182,\n            name: 'Kin Rossow',\n            email: 'kin@example.com',\n            date: '20/04/2019',\n            address: 'Kin Rossow, 1 Hollywood Blvd,Beverly Hills, California 90210',\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 120\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 183,\n            name: 'Merry Diana',\n            email: 'merry@example.com',\n            date: '30/04/2019',\n            address: 'Merry Diana, 1 Infinite Loop, Cupertino, California 90210',\n            shippingType: 'Via Link Road',\n            status: 'hold',\n            amount: 70\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 184,\n            name: 'Bucky Robert',\n            email: 'bucky@example.com',\n            date: '30/04/2019',\n            address: 'Bucky Robert, 1 Infinite Loop, Cupertino, California 90210',\n            shippingType: 'Via Free Shipping',\n            status: 'pending',\n            amount: 92\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 185,\n            name: 'Rocky Zampa',\n            email: 'rocky@example.com',\n            date: '30/04/2019',\n            address: 'Rocky Zampa, 1 Infinite Loop, Cupertino, California 90210',\n            shippingType: 'Via Free Road',\n            status: 'hold',\n            amount: 120\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 186,\n            name: 'Ricky John',\n            email: 'ricky@example.com',\n            date: '30/04/2019',\n            address: 'Ricky John, 1 Infinite Loop, Cupertino, California 90210',\n            shippingType: 'Via Free Shipping',\n            status: 'processing',\n            amount: 145\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 187,\n            name: 'Cristofer Henric',\n            email: 'cristofer@example.com',\n            date: '30/04/2019',\n            address: 'Cristofer Henric, 1 Infinite Loop, Cupertino, California 90210',\n            shippingType: 'Via Flat Rate',\n            status: 'success',\n            amount: 55\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 188,\n            name: 'Brate Lee',\n            email: 'lee@example.com',\n            date: '29/04/2019',\n            address: 'Brate Lee, 1 Infinite Loop, Cupertino, California 90210',\n            shippingType: 'Via Link Road',\n            status: 'hold',\n            amount: 90\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 189,\n            name: 'Thomas Stephenson',\n            email: 'Stephenson@example.com',\n            date: '29/04/2019',\n            address: 'Thomas Stephenson, 116 Ballifeary Road, Bamff',\n            shippingType: 'Via Flat Rate',\n            status: 'processing',\n            amount: 52\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 190,\n            name: 'Evie Singh',\n            email: 'eviewsing@example.com',\n            date: '29/04/2019',\n            address: 'Evie Singh, 54 Castledore Road, Tunstead',\n            shippingType: 'Via Flat Rate',\n            status: 'success',\n            amount: 90\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 191,\n            name: 'David Peters',\n            email: 'peter@example.com',\n            date: '29/04/2019',\n            address: 'David Peters, Rhyd Y Groes, Rhosgoch, LL66 0AT',\n            shippingType: 'Via Link Road',\n            status: 'success',\n            amount: 69\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 192,\n            name: 'Jennifer Johnson',\n            email: 'jennifer@example.com',\n            date: '28/04/2019',\n            address: 'Jennifer Johnson, Rhyd Y Groes, Rhosgoch, LL66 0AT',\n            shippingType: 'Via Flat Rate',\n            status: 'processing',\n            amount: 112\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 193,\n            name: ' Demarcus Okuneva',\n            email: 'okuneva@example.com',\n            date: '28/04/2019',\n            address: ' Demarcus Okuneva, 90555 Upton Drive Jeffreyview, UT 08771',\n            shippingType: 'Via Flat Rate',\n            status: 'success',\n            amount: 99\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 194,\n            name: 'Simeon Harber',\n            email: 'simeon@example.com',\n            date: '27/04/2019',\n            address: 'Simeon Harber, 702 Kunde Plain Apt. 634 East Bridgetview, HI 13134-1862',\n            shippingType: 'Via Free Shipping',\n            status: 'hold',\n            amount: 129\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 195,\n            name: 'Lavon Haley',\n            email: 'lavon@example.com',\n            date: '27/04/2019',\n            address: 'Lavon Haley, 30998 Adonis Locks McGlynnside, ID 27241',\n            shippingType: 'Via Free Shipping',\n            status: 'pending',\n            amount: 70\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 196,\n            name: 'Ashley Kirlin',\n            email: 'ashley@example.com',\n            date: '26/04/2019',\n            address: 'Ashley Kirlin, 43304 Prosacco Shore South Dejuanfurt, MO 18623-0505',\n            shippingType: 'Via Link Road',\n            status: 'processing',\n            amount: 39\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 197,\n            name: 'Johnnie Considine',\n            email: 'johnnie@example.com',\n            date: '26/04/2019',\n            address: 'Johnnie Considine, 6008 Hermann Points Suite 294 Hansenville, TN 14210',\n            shippingType: 'Via Flat Rate',\n            status: 'pending',\n            amount: 70\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 198,\n            name: 'Trace Farrell',\n            email: 'trace@example.com',\n            date: '26/04/2019',\n            address: 'Trace Farrell, 431 Steuber Mews Apt. 252 Germanland, AK 25882',\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 70\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 199,\n            name: 'Estell Nienow',\n            email: 'nienow@example.com',\n            date: '26/04/2019',\n            address: 'Estell Nienow, 4167 Laverna Manor Marysemouth, NV 74590',\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 59\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 200,\n            name: 'Daisha Howe',\n            email: 'howe@example.com',\n            date: '25/04/2019',\n            address: 'Daisha Howe, 829 Lavonne Valley Apt. 074 Stehrfort, RI 77914-0379',\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 39\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 201,\n            name: 'Miles Haley',\n            email: 'haley@example.com',\n            date: '24/04/2019',\n            address: 'Miles Haley, 53150 Thad Squares Apt. 263 Archibaldfort, MO 00837',\n            shippingType: 'Via Flat Rate',\n            status: 'success',\n            amount: 55\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 202,\n            name: 'Brenda Watsica',\n            email: 'watsica@example.com',\n            date: '24/04/2019',\n            address: \"Brenda Watsica, 9198 O'Kon Harbors Morarborough, IA 75409-7383\",\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 89\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 203,\n            name: \"Ellie O'Reilly\",\n            email: 'ellie@example.com',\n            date: '24/04/2019',\n            address: \"Ellie O'Reilly, 1478 Kaitlin Haven Apt. 061 Lake Muhammadmouth, SC 35848\",\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 47\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 204,\n            name: 'Garry Brainstrow',\n            email: 'garry@example.com',\n            date: '23/04/2019',\n            address: 'Garry Brainstrow, 13572 Kurt Mews South Merritt, IA 52491',\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 139\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 205,\n            name: 'Estell Pollich',\n            email: 'estell@example.com',\n            date: '23/04/2019',\n            address: 'Estell Pollich, 13572 Kurt Mews South Merritt, IA 52491',\n            shippingType: 'Via Free Shipping',\n            status: 'hold',\n            amount: 49\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 206,\n            name: 'Ara Mueller',\n            email: 'ara@example.com',\n            date: '23/04/2019',\n            address: 'Ara Mueller, 91979 Kohler Place Waelchiborough, CT 41291',\n            shippingType: 'Via Flat Rate',\n            status: 'hold',\n            amount: 19\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 207,\n            name: 'Lucienne Blick',\n            email: 'blick@example.com',\n            date: '23/04/2019',\n            address: 'Lucienne Blick, 6757 Giuseppe Meadows Geraldinemouth, MO 48819-4970',\n            shippingType: 'Via Flat Rate',\n            status: 'hold',\n            amount: 59\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 208,\n            name: 'Laverne Haag',\n            email: 'haag@example.com',\n            date: '22/04/2019',\n            address: 'Laverne Haag, 2327 Kaylee Mill East Citlalli, AZ 89582-3143',\n            shippingType: 'Via Flat Rate',\n            status: 'hold',\n            amount: 49\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 209,\n            name: 'Brandon Bednar',\n            email: 'bednar@example.com',\n            date: '22/04/2019',\n            address: 'Brandon Bednar, 25156 Isaac Crossing Apt. 810 Lonborough, CO 83774-5999',\n            shippingType: 'Via Flat Rate',\n            status: 'hold',\n            amount: 39\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 210,\n            name: 'Dimitri Boehm',\n            email: 'dimitri@example.com',\n            date: '23/04/2019',\n            address: 'Dimitri Boehm, 71603 Wolff Plains Apt. 885 Johnstonton, MI 01581',\n            shippingType: 'Via Flat Rate',\n            status: 'hold',\n            amount: 111\n          }\n        ]);\n\n        setDetailedDataTableColumns([\n          {\n            dataField: 'id',\n            text: 'Space',\n            classes: 'py-2 align-middle',\n            formatter: orderFormatter,\n            sort: true\n          },\n          {\n            dataField: 'date',\n            text: 'Date',\n            classes: 'py-2 align-middle',\n            sort: true\n          },\n          {\n            dataField: 'address',\n            text: 'Description',\n            classes: 'py-2 align-middle',\n            formatter: shippingFormatter,\n            sort: true\n          },\n          {\n            dataField: 'status',\n            text: 'Status',\n            classes: 'py-2 align-middle',\n            formatter: badgeFormatter,\n            sort: true\n          },\n          {\n            dataField: '',\n            text: '',\n            classes: 'py-2 align-middle',\n            formatter: actionFormatter,\n            align: 'right'\n          }\n        ]);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  \n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'tenantfault.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Fault Detection & Diagnostics')}</BreadcrumbItem><BreadcrumbItem active>{t('Tenant Faults Data')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"tenantSelect\">\n                    {t('Tenant')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"tenantSelect\" name=\"tenantSelect\" onChange={({ target }) => setSelectedTenant(target.value)}\n                  >\n                    {tenantList.map((tenant, index) => (\n                      <option value={tenant.value} key={tenant.value}>\n                        {tenant.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <Card className=\"mb-3\">\n        <FalconCardHeader title={t('Fault List')} light={false}>\n          {isSelected ? (\n            <InputGroup size=\"sm\" className=\"input-group input-group-sm\">\n              <CustomInput type=\"select\" id=\"bulk-select\">\n                <option>Bulk actions</option>\n                <option value=\"Refund\">Refund</option>\n                <option value=\"Delete\">Delete</option>\n                <option value=\"Archive\">Archive</option>\n              </CustomInput>\n              <Button color=\"falcon-default\" size=\"sm\" className=\"ml-2\">\n                Apply\n                </Button>\n            </InputGroup>\n          ) : (\n              <Fragment>\n                \n              </Fragment>\n            )}\n        </FalconCardHeader>\n        <CardBody className=\"p-0\">\n          <PaginationProvider pagination={paginationFactory(options)}>\n            {({ paginationProps, paginationTableProps }) => {\n              const lastIndex = paginationProps.page * paginationProps.sizePerPage;\n\n              return (\n                <Fragment>\n                  <div className=\"table-responsive\">\n                    <BootstrapTable\n                      ref={table}\n                      bootstrap4\n                      keyField=\"id\"\n                      data={detailedDataTableData}\n                      columns={detailedDataTableColumns}\n                      selectRow={selectRow(onSelect)}\n                      bordered={false}\n                      classes=\"table-dashboard table-striped table-sm fs--1 border-bottom mb-0 table-dashboard-th-nowrap\"\n                      rowClasses=\"btn-reveal-trigger\"\n                      headerClasses=\"bg-200 text-900\"\n                      {...paginationTableProps}\n                    />\n                  </div>\n                  <Row noGutters className=\"px-1 py-3 flex-center\">\n                    <Col xs=\"auto\">\n                      <Button\n                        color=\"falcon-default\"\n                        size=\"sm\"\n                        onClick={handlePrevPage(paginationProps)}\n                        disabled={paginationProps.page === 1}\n                      >\n                        <FontAwesomeIcon icon=\"chevron-left\" />\n                      </Button>\n                      {getPaginationArray(paginationProps.totalSize, paginationProps.sizePerPage).map(pageNo => (\n                        <Button\n                          color={paginationProps.page === pageNo ? 'falcon-primary' : 'falcon-default'}\n                          size=\"sm\"\n                          className=\"ml-2\"\n                          onClick={() => paginationProps.onPageChange(pageNo)}\n                          key={pageNo}\n                        >\n                          {pageNo}\n                        </Button>\n                      ))}\n                      <Button\n                        color=\"falcon-default\"\n                        size=\"sm\"\n                        className=\"ml-2\"\n                        onClick={handleNextPage(paginationProps)}\n                        disabled={lastIndex >= paginationProps.totalSize}\n                      >\n                        <FontAwesomeIcon icon=\"chevron-right\" />\n                      </Button>\n                    </Col>\n                  </Row>\n                </Fragment>\n              );\n            }}\n          </PaginationProvider>\n        </CardBody>\n      </Card>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(TenantFault));\n","import React, { createRef, Fragment, useEffect, useState } from 'react';\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  InputGroup,\n  UncontrolledDropdown,\n  Spinner,\n} from 'reactstrap';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport Cascader from 'rc-cascader';\nimport { Link } from 'react-router-dom';\nimport Badge from 'reactstrap/es/Badge';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport FalconCardHeader from '../../common/FalconCardHeader';\nimport uuid from 'uuid/v1';\nimport { getPaginationArray } from '../../../helpers/utils';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\n\n\nconst StoreFault = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [storeList, setStoreList] = useState([]);\n  const [selectedStore, setSelectedStore] = useState(undefined);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n  \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n  //Results\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n\n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response)\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json)\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Stores by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/stores', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setStoreList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedStore(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedStore(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Stores by root Space ID\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n  const orderFormatter = (dataField, { id, name, email }) => (\n    <Fragment>\n      <Link to=\"/e-commerce/order-details\">\n        <strong>#{id}</strong>\n      </Link>{' '}\n      by <strong>{name}</strong>\n      <br />\n      <a href={`mailto:${email}`}>{email}</a>\n    </Fragment>\n  );\n\n  const shippingFormatter = (address, { shippingType }) => (\n    <Fragment>\n      {address}\n      <p className=\"mb-0 text-500\">{shippingType}</p>\n    </Fragment>\n  );\n\n  const badgeFormatter = status => {\n    let color = '';\n    let icon = '';\n    let text = '';\n    switch (status) {\n      case 'success':\n        color = 'success';\n        icon = 'check';\n        text = 'Completed';\n        break;\n      case 'hold':\n        color = 'secondary';\n        icon = 'ban';\n        text = 'On hold';\n        break;\n      case 'processing':\n        color = 'primary';\n        icon = 'redo';\n        text = 'Processing';\n        break;\n      case 'pending':\n        color = 'warning';\n        icon = 'stream';\n        text = 'Pending';\n        break;\n      default:\n        color = 'warning';\n        icon = 'stream';\n        text = 'Pending';\n    }\n\n    return (\n      <Badge color={`soft-${color}`} className=\"rounded-capsule fs--1 d-block\">\n        {text}\n        <FontAwesomeIcon icon={icon} transform=\"shrink-2\" className=\"ml-1\" />\n      </Badge>\n    );\n  };\n\n  const actionFormatter = (dataField, { id }) => (\n    // Control your row with this id\n    <UncontrolledDropdown>\n      <DropdownToggle color=\"link\" size=\"sm\" className=\"text-600 btn-reveal mr-3\">\n        <FontAwesomeIcon icon=\"ellipsis-h\" className=\"fs--1\" />\n      </DropdownToggle>\n      <DropdownMenu right className=\"border py-2\">\n        <DropdownItem onClick={() => console.log('Completed: ', id)}>Completed</DropdownItem>\n        <DropdownItem onClick={() => console.log('Processing: ', id)}>Processing</DropdownItem>\n        <DropdownItem onClick={() => console.log('On hold: ', id)}>On hold</DropdownItem>\n        <DropdownItem onClick={() => console.log('Pending: ', id)}>Pending</DropdownItem>\n        <DropdownItem divider />\n        <DropdownItem onClick={() => console.log('Delete: ', id)} className=\"text-danger\">\n          Delete\n        </DropdownItem>\n      </DropdownMenu>\n    </UncontrolledDropdown>\n  );\n\n  const options = {\n    custom: true,\n    sizePerPage: 10,\n    totalSize: detailedDataTableData.length\n  };\n\n  const SelectRowInput = ({ indeterminate, rowIndex, ...rest }) => (\n    <div className=\"custom-control custom-checkbox\">\n      <input\n        className=\"custom-control-input\"\n        {...rest}\n        onChange={() => { }}\n        ref={input => {\n          if (input) input.indeterminate = indeterminate;\n        }}\n      />\n      <label className=\"custom-control-label\" />\n    </div>\n  );\n\n  const selectRow = onSelect => ({\n    mode: 'checkbox',\n    classes: 'py-2 align-middle',\n    clickToSelect: false,\n    selectionHeaderRenderer: ({ mode, ...rest }) => <SelectRowInput type=\"checkbox\" {...rest} />,\n    selectionRenderer: ({ mode, ...rest }) => <SelectRowInput type={mode} {...rest} />,\n    onSelect: onSelect,\n    onSelectAll: onSelect\n  });\n  \n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let table = createRef();\n\n  const [isSelected, setIsSelected] = useState(false);\n  const handleNextPage = ({ page, onPageChange }) => () => {\n    onPageChange(page + 1);\n  };\n\n  const handlePrevPage = ({ page, onPageChange }) => () => {\n    onPageChange(page - 1);\n  };\n\n  const onSelect = () => {\n    setImmediate(() => {\n      setIsSelected(!!table.current.selectionContext.selected.length);\n    });\n  };\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/stores', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setStoreList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedStore(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedStore(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedStore);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/fddstorefault?' +\n      'storeid' + selectedStore +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n\n      // enable submit button\n      setSubmitButtonDisabled(false);\n      // hide spinner\n      setSpinnerHidden(true);\n      // show export buttion\n      setExportButtonHidden(false)\n\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json);\n        setDetailedDataTableData([\n          {\n            id: uuid().split('-')[0],\n            // id: 181,\n            name: 'Ricky Antony',\n            email: 'ricky@example.com',\n            date: '20/04/2019',\n            address: 'Ricky Antony, 2392 Main Avenue, Penasauka, New Jersey 02149',\n            shippingType: 'Via Flat Rate',\n            status: 'success',\n            amount: 99\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 182,\n            name: 'Kin Rossow',\n            email: 'kin@example.com',\n            date: '20/04/2019',\n            address: 'Kin Rossow, 1 Hollywood Blvd,Beverly Hills, California 90210',\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 120\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 183,\n            name: 'Merry Diana',\n            email: 'merry@example.com',\n            date: '30/04/2019',\n            address: 'Merry Diana, 1 Infinite Loop, Cupertino, California 90210',\n            shippingType: 'Via Link Road',\n            status: 'hold',\n            amount: 70\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 184,\n            name: 'Bucky Robert',\n            email: 'bucky@example.com',\n            date: '30/04/2019',\n            address: 'Bucky Robert, 1 Infinite Loop, Cupertino, California 90210',\n            shippingType: 'Via Free Shipping',\n            status: 'pending',\n            amount: 92\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 185,\n            name: 'Rocky Zampa',\n            email: 'rocky@example.com',\n            date: '30/04/2019',\n            address: 'Rocky Zampa, 1 Infinite Loop, Cupertino, California 90210',\n            shippingType: 'Via Free Road',\n            status: 'hold',\n            amount: 120\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 186,\n            name: 'Ricky John',\n            email: 'ricky@example.com',\n            date: '30/04/2019',\n            address: 'Ricky John, 1 Infinite Loop, Cupertino, California 90210',\n            shippingType: 'Via Free Shipping',\n            status: 'processing',\n            amount: 145\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 187,\n            name: 'Cristofer Henric',\n            email: 'cristofer@example.com',\n            date: '30/04/2019',\n            address: 'Cristofer Henric, 1 Infinite Loop, Cupertino, California 90210',\n            shippingType: 'Via Flat Rate',\n            status: 'success',\n            amount: 55\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 188,\n            name: 'Brate Lee',\n            email: 'lee@example.com',\n            date: '29/04/2019',\n            address: 'Brate Lee, 1 Infinite Loop, Cupertino, California 90210',\n            shippingType: 'Via Link Road',\n            status: 'hold',\n            amount: 90\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 189,\n            name: 'Thomas Stephenson',\n            email: 'Stephenson@example.com',\n            date: '29/04/2019',\n            address: 'Thomas Stephenson, 116 Ballifeary Road, Bamff',\n            shippingType: 'Via Flat Rate',\n            status: 'processing',\n            amount: 52\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 190,\n            name: 'Evie Singh',\n            email: 'eviewsing@example.com',\n            date: '29/04/2019',\n            address: 'Evie Singh, 54 Castledore Road, Tunstead',\n            shippingType: 'Via Flat Rate',\n            status: 'success',\n            amount: 90\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 191,\n            name: 'David Peters',\n            email: 'peter@example.com',\n            date: '29/04/2019',\n            address: 'David Peters, Rhyd Y Groes, Rhosgoch, LL66 0AT',\n            shippingType: 'Via Link Road',\n            status: 'success',\n            amount: 69\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 192,\n            name: 'Jennifer Johnson',\n            email: 'jennifer@example.com',\n            date: '28/04/2019',\n            address: 'Jennifer Johnson, Rhyd Y Groes, Rhosgoch, LL66 0AT',\n            shippingType: 'Via Flat Rate',\n            status: 'processing',\n            amount: 112\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 193,\n            name: ' Demarcus Okuneva',\n            email: 'okuneva@example.com',\n            date: '28/04/2019',\n            address: ' Demarcus Okuneva, 90555 Upton Drive Jeffreyview, UT 08771',\n            shippingType: 'Via Flat Rate',\n            status: 'success',\n            amount: 99\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 194,\n            name: 'Simeon Harber',\n            email: 'simeon@example.com',\n            date: '27/04/2019',\n            address: 'Simeon Harber, 702 Kunde Plain Apt. 634 East Bridgetview, HI 13134-1862',\n            shippingType: 'Via Free Shipping',\n            status: 'hold',\n            amount: 129\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 195,\n            name: 'Lavon Haley',\n            email: 'lavon@example.com',\n            date: '27/04/2019',\n            address: 'Lavon Haley, 30998 Adonis Locks McGlynnside, ID 27241',\n            shippingType: 'Via Free Shipping',\n            status: 'pending',\n            amount: 70\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 196,\n            name: 'Ashley Kirlin',\n            email: 'ashley@example.com',\n            date: '26/04/2019',\n            address: 'Ashley Kirlin, 43304 Prosacco Shore South Dejuanfurt, MO 18623-0505',\n            shippingType: 'Via Link Road',\n            status: 'processing',\n            amount: 39\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 197,\n            name: 'Johnnie Considine',\n            email: 'johnnie@example.com',\n            date: '26/04/2019',\n            address: 'Johnnie Considine, 6008 Hermann Points Suite 294 Hansenville, TN 14210',\n            shippingType: 'Via Flat Rate',\n            status: 'pending',\n            amount: 70\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 198,\n            name: 'Trace Farrell',\n            email: 'trace@example.com',\n            date: '26/04/2019',\n            address: 'Trace Farrell, 431 Steuber Mews Apt. 252 Germanland, AK 25882',\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 70\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 199,\n            name: 'Estell Nienow',\n            email: 'nienow@example.com',\n            date: '26/04/2019',\n            address: 'Estell Nienow, 4167 Laverna Manor Marysemouth, NV 74590',\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 59\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 200,\n            name: 'Daisha Howe',\n            email: 'howe@example.com',\n            date: '25/04/2019',\n            address: 'Daisha Howe, 829 Lavonne Valley Apt. 074 Stehrfort, RI 77914-0379',\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 39\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 201,\n            name: 'Miles Haley',\n            email: 'haley@example.com',\n            date: '24/04/2019',\n            address: 'Miles Haley, 53150 Thad Squares Apt. 263 Archibaldfort, MO 00837',\n            shippingType: 'Via Flat Rate',\n            status: 'success',\n            amount: 55\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 202,\n            name: 'Brenda Watsica',\n            email: 'watsica@example.com',\n            date: '24/04/2019',\n            address: \"Brenda Watsica, 9198 O'Kon Harbors Morarborough, IA 75409-7383\",\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 89\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 203,\n            name: \"Ellie O'Reilly\",\n            email: 'ellie@example.com',\n            date: '24/04/2019',\n            address: \"Ellie O'Reilly, 1478 Kaitlin Haven Apt. 061 Lake Muhammadmouth, SC 35848\",\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 47\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 204,\n            name: 'Garry Brainstrow',\n            email: 'garry@example.com',\n            date: '23/04/2019',\n            address: 'Garry Brainstrow, 13572 Kurt Mews South Merritt, IA 52491',\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 139\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 205,\n            name: 'Estell Pollich',\n            email: 'estell@example.com',\n            date: '23/04/2019',\n            address: 'Estell Pollich, 13572 Kurt Mews South Merritt, IA 52491',\n            shippingType: 'Via Free Shipping',\n            status: 'hold',\n            amount: 49\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 206,\n            name: 'Ara Mueller',\n            email: 'ara@example.com',\n            date: '23/04/2019',\n            address: 'Ara Mueller, 91979 Kohler Place Waelchiborough, CT 41291',\n            shippingType: 'Via Flat Rate',\n            status: 'hold',\n            amount: 19\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 207,\n            name: 'Lucienne Blick',\n            email: 'blick@example.com',\n            date: '23/04/2019',\n            address: 'Lucienne Blick, 6757 Giuseppe Meadows Geraldinemouth, MO 48819-4970',\n            shippingType: 'Via Flat Rate',\n            status: 'hold',\n            amount: 59\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 208,\n            name: 'Laverne Haag',\n            email: 'haag@example.com',\n            date: '22/04/2019',\n            address: 'Laverne Haag, 2327 Kaylee Mill East Citlalli, AZ 89582-3143',\n            shippingType: 'Via Flat Rate',\n            status: 'hold',\n            amount: 49\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 209,\n            name: 'Brandon Bednar',\n            email: 'bednar@example.com',\n            date: '22/04/2019',\n            address: 'Brandon Bednar, 25156 Isaac Crossing Apt. 810 Lonborough, CO 83774-5999',\n            shippingType: 'Via Flat Rate',\n            status: 'hold',\n            amount: 39\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 210,\n            name: 'Dimitri Boehm',\n            email: 'dimitri@example.com',\n            date: '23/04/2019',\n            address: 'Dimitri Boehm, 71603 Wolff Plains Apt. 885 Johnstonton, MI 01581',\n            shippingType: 'Via Flat Rate',\n            status: 'hold',\n            amount: 111\n          }\n        ]);\n\n        setDetailedDataTableColumns([\n          {\n            dataField: 'id',\n            text: 'Space',\n            classes: 'py-2 align-middle',\n            formatter: orderFormatter,\n            sort: true\n          },\n          {\n            dataField: 'date',\n            text: 'Date',\n            classes: 'py-2 align-middle',\n            sort: true\n          },\n          {\n            dataField: 'address',\n            text: 'Description',\n            classes: 'py-2 align-middle',\n            formatter: shippingFormatter,\n            sort: true\n          },\n          {\n            dataField: 'status',\n            text: 'Status',\n            classes: 'py-2 align-middle',\n            formatter: badgeFormatter,\n            sort: true\n          },\n          {\n            dataField: '',\n            text: '',\n            classes: 'py-2 align-middle',\n            formatter: actionFormatter,\n            align: 'right'\n          }\n        ]);   \n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  \n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'storefault.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Fault Detection & Diagnostics')}</BreadcrumbItem><BreadcrumbItem active>{t('Store Faults Data')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"storeSelect\">\n                    {t('Store')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"storeSelect\" name=\"storeSelect\" onChange={({ target }) => setSelectedStore(target.value)}\n                  >\n                    {storeList.map((store, index) => (\n                      <option value={store.value} key={store.value}>\n                        {store.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <Card className=\"mb-3\">\n        <FalconCardHeader title={t('Fault List')} light={false}>\n          {isSelected ? (\n            <InputGroup size=\"sm\" className=\"input-group input-group-sm\">\n              <CustomInput type=\"select\" id=\"bulk-select\">\n                <option>Bulk actions</option>\n                <option value=\"Refund\">Refund</option>\n                <option value=\"Delete\">Delete</option>\n                <option value=\"Archive\">Archive</option>\n              </CustomInput>\n              <Button color=\"falcon-default\" size=\"sm\" className=\"ml-2\">\n                Apply\n                </Button>\n            </InputGroup>\n          ) : (\n              <Fragment>\n                \n              </Fragment>\n            )}\n        </FalconCardHeader>\n        <CardBody className=\"p-0\">\n          <PaginationProvider pagination={paginationFactory(options)}>\n            {({ paginationProps, paginationTableProps }) => {\n              const lastIndex = paginationProps.page * paginationProps.sizePerPage;\n\n              return (\n                <Fragment>\n                  <div className=\"table-responsive\">\n                    <BootstrapTable\n                      ref={table}\n                      bootstrap4\n                      keyField=\"id\"\n                      data={detailedDataTableData}\n                      columns={detailedDataTableColumns}\n                      selectRow={selectRow(onSelect)}\n                      bordered={false}\n                      classes=\"table-dashboard table-striped table-sm fs--1 border-bottom mb-0 table-dashboard-th-nowrap\"\n                      rowClasses=\"btn-reveal-trigger\"\n                      headerClasses=\"bg-200 text-900\"\n                      {...paginationTableProps}\n                    />\n                  </div>\n                  <Row noGutters className=\"px-1 py-3 flex-center\">\n                    <Col xs=\"auto\">\n                      <Button\n                        color=\"falcon-default\"\n                        size=\"sm\"\n                        onClick={handlePrevPage(paginationProps)}\n                        disabled={paginationProps.page === 1}\n                      >\n                        <FontAwesomeIcon icon=\"chevron-left\" />\n                      </Button>\n                      {getPaginationArray(paginationProps.totalSize, paginationProps.sizePerPage).map(pageNo => (\n                        <Button\n                          color={paginationProps.page === pageNo ? 'falcon-primary' : 'falcon-default'}\n                          size=\"sm\"\n                          className=\"ml-2\"\n                          onClick={() => paginationProps.onPageChange(pageNo)}\n                          key={pageNo}\n                        >\n                          {pageNo}\n                        </Button>\n                      ))}\n                      <Button\n                        color=\"falcon-default\"\n                        size=\"sm\"\n                        className=\"ml-2\"\n                        onClick={handleNextPage(paginationProps)}\n                        disabled={lastIndex >= paginationProps.totalSize}\n                      >\n                        <FontAwesomeIcon icon=\"chevron-right\" />\n                      </Button>\n                    </Col>\n                  </Row>\n                </Fragment>\n              );\n            }}\n          </PaginationProvider>\n        </CardBody>\n      </Card>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(StoreFault));\n","import React, { createRef, Fragment, useEffect, useState } from 'react';\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  InputGroup,\n  UncontrolledDropdown,\n  Spinner,\n} from 'reactstrap';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport Cascader from 'rc-cascader';\nimport { Link } from 'react-router-dom';\nimport Badge from 'reactstrap/es/Badge';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport FalconCardHeader from '../../common/FalconCardHeader';\nimport uuid from 'uuid/v1';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { getPaginationArray } from '../../../helpers/utils';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\n\n\nconst ShopfloorFault = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [shopfloorList, setShopfloorList] = useState([]);\n  const [selectedShopfloor, setSelectedShopfloor] = useState(undefined);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n  \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n  //Results\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n\n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Shopfloors by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/shopfloors', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setShopfloorList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedShopfloor(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedShopfloor(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Shopfloors by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n  const orderFormatter = (dataField, { id, name, email }) => (\n    <Fragment>\n      <Link to=\"/e-commerce/order-details\">\n        <strong>#{id}</strong>\n      </Link>{' '}\n      by <strong>{name}</strong>\n      <br />\n      <a href={`mailto:${email}`}>{email}</a>\n    </Fragment>\n  );\n\n  const shippingFormatter = (address, { shippingType }) => (\n    <Fragment>\n      {address}\n      <p className=\"mb-0 text-500\">{shippingType}</p>\n    </Fragment>\n  );\n\n  const badgeFormatter = status => {\n    let color = '';\n    let icon = '';\n    let text = '';\n    switch (status) {\n      case 'success':\n        color = 'success';\n        icon = 'check';\n        text = 'Completed';\n        break;\n      case 'hold':\n        color = 'secondary';\n        icon = 'ban';\n        text = 'On hold';\n        break;\n      case 'processing':\n        color = 'primary';\n        icon = 'redo';\n        text = 'Processing';\n        break;\n      case 'pending':\n        color = 'warning';\n        icon = 'stream';\n        text = 'Pending';\n        break;\n      default:\n        color = 'warning';\n        icon = 'stream';\n        text = 'Pending';\n    }\n\n    return (\n      <Badge color={`soft-${color}`} className=\"rounded-capsule fs--1 d-block\">\n        {text}\n        <FontAwesomeIcon icon={icon} transform=\"shrink-2\" className=\"ml-1\" />\n      </Badge>\n    );\n  };\n\n  const actionFormatter = (dataField, { id }) => (\n    // Control your row with this id\n    <UncontrolledDropdown>\n      <DropdownToggle color=\"link\" size=\"sm\" className=\"text-600 btn-reveal mr-3\">\n        <FontAwesomeIcon icon=\"ellipsis-h\" className=\"fs--1\" />\n      </DropdownToggle>\n      <DropdownMenu right className=\"border py-2\">\n        <DropdownItem onClick={() => console.log('Completed: ', id)}>Completed</DropdownItem>\n        <DropdownItem onClick={() => console.log('Processing: ', id)}>Processing</DropdownItem>\n        <DropdownItem onClick={() => console.log('On hold: ', id)}>On hold</DropdownItem>\n        <DropdownItem onClick={() => console.log('Pending: ', id)}>Pending</DropdownItem>\n        <DropdownItem divider />\n        <DropdownItem onClick={() => console.log('Delete: ', id)} className=\"text-danger\">\n          Delete\n        </DropdownItem>\n      </DropdownMenu>\n    </UncontrolledDropdown>\n  );\n  \n\n  const options = {\n    custom: true,\n    sizePerPage: 10,\n    totalSize: detailedDataTableData.length\n  };\n\n  const SelectRowInput = ({ indeterminate, rowIndex, ...rest }) => (\n    <div className=\"custom-control custom-checkbox\">\n      <input\n        className=\"custom-control-input\"\n        {...rest}\n        onChange={() => { }}\n        ref={input => {\n          if (input) input.indeterminate = indeterminate;\n        }}\n      />\n      <label className=\"custom-control-label\" />\n    </div>\n  );\n\n  const selectRow = onSelect => ({\n    mode: 'checkbox',\n    classes: 'py-2 align-middle',\n    clickToSelect: false,\n    selectionHeaderRenderer: ({ mode, ...rest }) => <SelectRowInput type=\"checkbox\" {...rest} />,\n    selectionRenderer: ({ mode, ...rest }) => <SelectRowInput type={mode} {...rest} />,\n    onSelect: onSelect,\n    onSelectAll: onSelect\n  });\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  // State\n  let table = createRef();\n\n  const [isSelected, setIsSelected] = useState(false);\n  const handleNextPage = ({ page, onPageChange }) => () => {\n    onPageChange(page + 1);\n  };\n\n  const handlePrevPage = ({ page, onPageChange }) => () => {\n    onPageChange(page - 1);\n  };\n\n  const onSelect = () => {\n    setImmediate(() => {\n      setIsSelected(!!table.current.selectionContext.selected.length);\n    });\n  };\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/shopfloors', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setShopfloorList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedShopfloor(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedShopfloor(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedShopfloor);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/fddshopfloorfault?' +\n      'shopfloorid' + selectedShopfloor +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n\n      // enable submit button\n      setSubmitButtonDisabled(false);\n      // hide spinner\n      setSpinnerHidden(true);\n      // show export buttion\n      setExportButtonHidden(false)\n\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json);\n\n        setDetailedDataTableData([\n          {\n            id: uuid().split('-')[0],\n            // id: 181,\n            name: 'Ricky Antony',\n            email: 'ricky@example.com',\n            date: '20/04/2019',\n            address: 'Ricky Antony, 2392 Main Avenue, Penasauka, New Jersey 02149',\n            shippingType: 'Via Flat Rate',\n            status: 'success',\n            amount: 99\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 182,\n            name: 'Kin Rossow',\n            email: 'kin@example.com',\n            date: '20/04/2019',\n            address: 'Kin Rossow, 1 Hollywood Blvd,Beverly Hills, California 90210',\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 120\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 183,\n            name: 'Merry Diana',\n            email: 'merry@example.com',\n            date: '30/04/2019',\n            address: 'Merry Diana, 1 Infinite Loop, Cupertino, California 90210',\n            shippingType: 'Via Link Road',\n            status: 'hold',\n            amount: 70\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 184,\n            name: 'Bucky Robert',\n            email: 'bucky@example.com',\n            date: '30/04/2019',\n            address: 'Bucky Robert, 1 Infinite Loop, Cupertino, California 90210',\n            shippingType: 'Via Free Shipping',\n            status: 'pending',\n            amount: 92\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 185,\n            name: 'Rocky Zampa',\n            email: 'rocky@example.com',\n            date: '30/04/2019',\n            address: 'Rocky Zampa, 1 Infinite Loop, Cupertino, California 90210',\n            shippingType: 'Via Free Road',\n            status: 'hold',\n            amount: 120\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 186,\n            name: 'Ricky John',\n            email: 'ricky@example.com',\n            date: '30/04/2019',\n            address: 'Ricky John, 1 Infinite Loop, Cupertino, California 90210',\n            shippingType: 'Via Free Shipping',\n            status: 'processing',\n            amount: 145\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 187,\n            name: 'Cristofer Henric',\n            email: 'cristofer@example.com',\n            date: '30/04/2019',\n            address: 'Cristofer Henric, 1 Infinite Loop, Cupertino, California 90210',\n            shippingType: 'Via Flat Rate',\n            status: 'success',\n            amount: 55\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 188,\n            name: 'Brate Lee',\n            email: 'lee@example.com',\n            date: '29/04/2019',\n            address: 'Brate Lee, 1 Infinite Loop, Cupertino, California 90210',\n            shippingType: 'Via Link Road',\n            status: 'hold',\n            amount: 90\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 189,\n            name: 'Thomas Stephenson',\n            email: 'Stephenson@example.com',\n            date: '29/04/2019',\n            address: 'Thomas Stephenson, 116 Ballifeary Road, Bamff',\n            shippingType: 'Via Flat Rate',\n            status: 'processing',\n            amount: 52\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 190,\n            name: 'Evie Singh',\n            email: 'eviewsing@example.com',\n            date: '29/04/2019',\n            address: 'Evie Singh, 54 Castledore Road, Tunstead',\n            shippingType: 'Via Flat Rate',\n            status: 'success',\n            amount: 90\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 191,\n            name: 'David Peters',\n            email: 'peter@example.com',\n            date: '29/04/2019',\n            address: 'David Peters, Rhyd Y Groes, Rhosgoch, LL66 0AT',\n            shippingType: 'Via Link Road',\n            status: 'success',\n            amount: 69\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 192,\n            name: 'Jennifer Johnson',\n            email: 'jennifer@example.com',\n            date: '28/04/2019',\n            address: 'Jennifer Johnson, Rhyd Y Groes, Rhosgoch, LL66 0AT',\n            shippingType: 'Via Flat Rate',\n            status: 'processing',\n            amount: 112\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 193,\n            name: ' Demarcus Okuneva',\n            email: 'okuneva@example.com',\n            date: '28/04/2019',\n            address: ' Demarcus Okuneva, 90555 Upton Drive Jeffreyview, UT 08771',\n            shippingType: 'Via Flat Rate',\n            status: 'success',\n            amount: 99\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 194,\n            name: 'Simeon Harber',\n            email: 'simeon@example.com',\n            date: '27/04/2019',\n            address: 'Simeon Harber, 702 Kunde Plain Apt. 634 East Bridgetview, HI 13134-1862',\n            shippingType: 'Via Free Shipping',\n            status: 'hold',\n            amount: 129\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 195,\n            name: 'Lavon Haley',\n            email: 'lavon@example.com',\n            date: '27/04/2019',\n            address: 'Lavon Haley, 30998 Adonis Locks McGlynnside, ID 27241',\n            shippingType: 'Via Free Shipping',\n            status: 'pending',\n            amount: 70\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 196,\n            name: 'Ashley Kirlin',\n            email: 'ashley@example.com',\n            date: '26/04/2019',\n            address: 'Ashley Kirlin, 43304 Prosacco Shore South Dejuanfurt, MO 18623-0505',\n            shippingType: 'Via Link Road',\n            status: 'processing',\n            amount: 39\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 197,\n            name: 'Johnnie Considine',\n            email: 'johnnie@example.com',\n            date: '26/04/2019',\n            address: 'Johnnie Considine, 6008 Hermann Points Suite 294 Hansenville, TN 14210',\n            shippingType: 'Via Flat Rate',\n            status: 'pending',\n            amount: 70\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 198,\n            name: 'Trace Farrell',\n            email: 'trace@example.com',\n            date: '26/04/2019',\n            address: 'Trace Farrell, 431 Steuber Mews Apt. 252 Germanland, AK 25882',\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 70\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 199,\n            name: 'Estell Nienow',\n            email: 'nienow@example.com',\n            date: '26/04/2019',\n            address: 'Estell Nienow, 4167 Laverna Manor Marysemouth, NV 74590',\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 59\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 200,\n            name: 'Daisha Howe',\n            email: 'howe@example.com',\n            date: '25/04/2019',\n            address: 'Daisha Howe, 829 Lavonne Valley Apt. 074 Stehrfort, RI 77914-0379',\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 39\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 201,\n            name: 'Miles Haley',\n            email: 'haley@example.com',\n            date: '24/04/2019',\n            address: 'Miles Haley, 53150 Thad Squares Apt. 263 Archibaldfort, MO 00837',\n            shippingType: 'Via Flat Rate',\n            status: 'success',\n            amount: 55\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 202,\n            name: 'Brenda Watsica',\n            email: 'watsica@example.com',\n            date: '24/04/2019',\n            address: \"Brenda Watsica, 9198 O'Kon Harbors Morarborough, IA 75409-7383\",\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 89\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 203,\n            name: \"Ellie O'Reilly\",\n            email: 'ellie@example.com',\n            date: '24/04/2019',\n            address: \"Ellie O'Reilly, 1478 Kaitlin Haven Apt. 061 Lake Muhammadmouth, SC 35848\",\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 47\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 204,\n            name: 'Garry Brainstrow',\n            email: 'garry@example.com',\n            date: '23/04/2019',\n            address: 'Garry Brainstrow, 13572 Kurt Mews South Merritt, IA 52491',\n            shippingType: 'Via Free Shipping',\n            status: 'success',\n            amount: 139\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 205,\n            name: 'Estell Pollich',\n            email: 'estell@example.com',\n            date: '23/04/2019',\n            address: 'Estell Pollich, 13572 Kurt Mews South Merritt, IA 52491',\n            shippingType: 'Via Free Shipping',\n            status: 'hold',\n            amount: 49\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 206,\n            name: 'Ara Mueller',\n            email: 'ara@example.com',\n            date: '23/04/2019',\n            address: 'Ara Mueller, 91979 Kohler Place Waelchiborough, CT 41291',\n            shippingType: 'Via Flat Rate',\n            status: 'hold',\n            amount: 19\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 207,\n            name: 'Lucienne Blick',\n            email: 'blick@example.com',\n            date: '23/04/2019',\n            address: 'Lucienne Blick, 6757 Giuseppe Meadows Geraldinemouth, MO 48819-4970',\n            shippingType: 'Via Flat Rate',\n            status: 'hold',\n            amount: 59\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 208,\n            name: 'Laverne Haag',\n            email: 'haag@example.com',\n            date: '22/04/2019',\n            address: 'Laverne Haag, 2327 Kaylee Mill East Citlalli, AZ 89582-3143',\n            shippingType: 'Via Flat Rate',\n            status: 'hold',\n            amount: 49\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 209,\n            name: 'Brandon Bednar',\n            email: 'bednar@example.com',\n            date: '22/04/2019',\n            address: 'Brandon Bednar, 25156 Isaac Crossing Apt. 810 Lonborough, CO 83774-5999',\n            shippingType: 'Via Flat Rate',\n            status: 'hold',\n            amount: 39\n          },\n          {\n            id: uuid().split('-')[0],\n            // id: 210,\n            name: 'Dimitri Boehm',\n            email: 'dimitri@example.com',\n            date: '23/04/2019',\n            address: 'Dimitri Boehm, 71603 Wolff Plains Apt. 885 Johnstonton, MI 01581',\n            shippingType: 'Via Flat Rate',\n            status: 'hold',\n            amount: 111\n          }\n        ]);\n\n        setDetailedDataTableColumns([\n          {\n            dataField: 'id',\n            text: 'Space',\n            classes: 'py-2 align-middle',\n            formatter: orderFormatter,\n            sort: true\n          },\n          {\n            dataField: 'date',\n            text: 'Date',\n            classes: 'py-2 align-middle',\n            sort: true\n          },\n          {\n            dataField: 'address',\n            text: 'Description',\n            classes: 'py-2 align-middle',\n            formatter: shippingFormatter,\n            sort: true\n          },\n          {\n            dataField: 'status',\n            text: 'Status',\n            classes: 'py-2 align-middle',\n            formatter: badgeFormatter,\n            sort: true\n          },\n          {\n            dataField: '',\n            text: '',\n            classes: 'py-2 align-middle',\n            formatter: actionFormatter,\n            align: 'right'\n          }\n        ]);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n       \n  };\n  \n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'shopfloorfault.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Fault Detection & Diagnostics')}</BreadcrumbItem><BreadcrumbItem active>{t('Shopfloor Faults Data')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"shopfloorSelect\">\n                    {t('Shopfloor')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"shopfloorSelect\" name=\"shopfloorSelect\" onChange={({ target }) => setSelectedShopfloor(target.value)}\n                  >\n                    {shopfloorList.map((shopfloor, index) => (\n                      <option value={shopfloor.value} key={shopfloor.value}>\n                        {shopfloor.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <Card className=\"mb-3\">\n        <FalconCardHeader title={t('Fault List')} light={false}>\n          {isSelected ? (\n            <InputGroup size=\"sm\" className=\"input-group input-group-sm\">\n              <CustomInput type=\"select\" id=\"bulk-select\">\n                <option>Bulk actions</option>\n                <option value=\"Refund\">Refund</option>\n                <option value=\"Delete\">Delete</option>\n                <option value=\"Archive\">Archive</option>\n              </CustomInput>\n              <Button color=\"falcon-default\" size=\"sm\" className=\"ml-2\">\n                Apply\n                </Button>\n            </InputGroup>\n          ) : (\n              <Fragment>\n                \n              </Fragment>\n            )}\n        </FalconCardHeader>\n        <CardBody className=\"p-0\">\n          <PaginationProvider pagination={paginationFactory(options)}>\n            {({ paginationProps, paginationTableProps }) => {\n              const lastIndex = paginationProps.page * paginationProps.sizePerPage;\n\n              return (\n                <Fragment>\n                  <div className=\"table-responsive\">\n                    <BootstrapTable\n                      ref={table}\n                      bootstrap4\n                      keyField=\"id\"\n                      data={detailedDataTableData}\n                      columns={detailedDataTableColumns}\n                      selectRow={selectRow(onSelect)}\n                      bordered={false}\n                      classes=\"table-dashboard table-striped table-sm fs--1 border-bottom mb-0 table-dashboard-th-nowrap\"\n                      rowClasses=\"btn-reveal-trigger\"\n                      headerClasses=\"bg-200 text-900\"\n                      {...paginationTableProps}\n                    />\n                  </div>\n                  <Row noGutters className=\"px-1 py-3 flex-center\">\n                    <Col xs=\"auto\">\n                      <Button\n                        color=\"falcon-default\"\n                        size=\"sm\"\n                        onClick={handlePrevPage(paginationProps)}\n                        disabled={paginationProps.page === 1}\n                      >\n                        <FontAwesomeIcon icon=\"chevron-left\" />\n                      </Button>\n                      {getPaginationArray(paginationProps.totalSize, paginationProps.sizePerPage).map(pageNo => (\n                        <Button\n                          color={paginationProps.page === pageNo ? 'falcon-primary' : 'falcon-default'}\n                          size=\"sm\"\n                          className=\"ml-2\"\n                          onClick={() => paginationProps.onPageChange(pageNo)}\n                          key={pageNo}\n                        >\n                          {pageNo}\n                        </Button>\n                      ))}\n                      <Button\n                        color=\"falcon-default\"\n                        size=\"sm\"\n                        className=\"ml-2\"\n                        onClick={handleNextPage(paginationProps)}\n                        disabled={lastIndex >= paginationProps.totalSize}\n                      >\n                        <FontAwesomeIcon icon=\"chevron-right\" />\n                      </Button>\n                    </Col>\n                  </Row>\n                </Fragment>\n              );\n            }}\n          </PaginationProvider>\n        </CardBody>\n      </Card>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(ShopfloorFault));\n","module.exports = __webpack_public_path__ + \"static/media/1.c8ae1c7f.png\";","module.exports = __webpack_public_path__ + \"static/media/2.1ac00024.png\";","module.exports = __webpack_public_path__ + \"static/media/4.e4d22cc3.png\";","module.exports = __webpack_public_path__ + \"static/media/3.49b82d25.png\";","module.exports = __webpack_public_path__ + \"static/media/8.830c0eca.png\";","module.exports = __webpack_public_path__ + \"static/media/6.b1f9653a.png\";","module.exports = __webpack_public_path__ + \"static/media/7.55ce5c6d.png\";","module.exports = __webpack_public_path__ + \"static/media/5.49dbf8dd.png\";","module.exports = __webpack_public_path__ + \"static/media/9.f2d3bbaf.png\";","import React, { createRef, Fragment, useEffect, useState } from 'react';\nimport paginationFactory, { PaginationProvider } from 'react-bootstrap-table2-paginator';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport { toast } from 'react-toastify';\nimport {\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  CustomInput,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  InputGroup,\n  UncontrolledDropdown,\n  Spinner,\n} from 'reactstrap';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { Link } from 'react-router-dom';\nimport Badge from 'reactstrap/es/Badge';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport FalconCardHeader from '../../common/FalconCardHeader';\nimport uuid from 'uuid/v1';\nimport { getPaginationArray } from '../../../helpers/utils';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport moment from 'moment';\nimport { APIBaseURL } from '../../../config';\n\n\n\n\nconst Notification = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  const [startDatetime, setStartDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [endDatetime, setEndDatetime] = useState(current_moment);\n  \n  const [fetchSuccess, setFetchSuccess] = useState(false);\n  //Results\n  const [notifications, setNotifications] = useState([]);\n\n  const [spinnerHidden, setSpinnerHidden] = useState(false);\n\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n\n      let isResponseOK = false;\n      if (!fetchSuccess) { \n        fetch(APIBaseURL + '/notifications?' + \n        'startdatetime=' + startDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n        '&enddatetime=' + endDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            console.log(json);\n            setFetchSuccess(true);\n\n            let notificationList = []\n\n            if (json.length > 0) {\n              json.forEach((currentValue, index) => {\n                let notification = {}\n                notification['id'] = json[index]['id'];\n                notification['subject'] = json[index]['subject'];\n                notification['created_datetime'] = json[index]['created_datetime']; \n                notification['message'] = json[index]['message'];\n                notification['status'] = json[index]['status'];\n                notification['url'] = json[index]['url'];\n\n                notificationList.push(notification);\n              });\n            }\n          \n            setNotifications(notificationList);\n            setSpinnerHidden(true);\n          }\n        });\n      }\n    }\n  }, );\n  // State\n  let table = createRef();\n\n  const [isSelected, setIsSelected] = useState(false);\n  const handleNextPage = ({ page, onPageChange }) => () => {\n    onPageChange(page + 1);\n  };\n\n  const handlePrevPage = ({ page, onPageChange }) => () => {\n    onPageChange(page - 1);\n  };\n\n  const onSelect = () => {\n    setImmediate(() => {\n      setIsSelected(!!table.current.selectionContext.selected.length);\n    });\n  };\n\n\n  const subjectFormatter = (dataField, { url }) => (\n    <Fragment>\n      <a href={`${url}`}>{dataField}</a>\n    </Fragment>\n  );\n\n  const messageFormatter = (dataField,) => (\n    <Fragment>\n      {dataField}\n    </Fragment>\n  );\n\n  const statusFormatter = status => {\n    let color = '';\n    let icon = '';\n    let text = '';\n    switch (status) {\n      case 'read':\n        color = 'success';\n        icon = 'envelope-open';\n        text = t('Notification Read');\n        break;\n      case 'unread':\n        color = 'primary';\n        icon = 'envelope';\n        text = t('Notification Unread');\n        break;\n      default:\n        color = 'primary';\n        icon = 'envelope';\n        text = t('Notification Unread');\n    }\n\n    return (\n      <Badge color={`soft-${color}`} className=\"rounded-capsule fs--1 d-block\">\n        {text}\n        <FontAwesomeIcon icon={icon} transform=\"shrink-2\" className=\"ml-1\" />\n      </Badge>\n    );\n  };\n\n  const actionFormatter = (dataField, { id }) => (\n    // Control your row with this id\n    <UncontrolledDropdown>\n      <DropdownToggle color=\"link\" size=\"sm\" className=\"text-600 btn-reveal mr-3\">\n        <FontAwesomeIcon icon=\"ellipsis-h\" className=\"fs--1\" />\n      </DropdownToggle>\n      <DropdownMenu right className=\"border py-2\">\n        <DropdownItem onClick={() => handleRead(id)}>{t('Notification Mark As Read')}</DropdownItem>\n        <DropdownItem onClick={() => console.log('Archive: ', id)}>{t('Notification Archive')}</DropdownItem>\n        <DropdownItem divider />\n        <DropdownItem onClick={() => console.log('Delete: ', id)} className=\"text-danger\">{t('Notification Delete')}</DropdownItem>\n      </DropdownMenu>\n    </UncontrolledDropdown>\n  );\n  const columns = [\n    {\n      dataField: 'subject',\n      text: t('Notification Subject'),\n      classes: 'py-2 align-middle',\n      formatter: subjectFormatter,\n      sort: true\n    },\n    {\n      dataField: 'created_datetime',\n      text: t('Notification Created Datetime'),\n      classes: 'py-2 align-middle',\n      sort: true\n    },\n    {\n      dataField: 'message',\n      text: t('Notification Message'),\n      classes: 'py-2 align-middle',\n      formatter: messageFormatter,\n      sort: true\n    },\n    {\n      dataField: 'status',\n      text: t('Notification Status'),\n      classes: 'py-2 align-middle',\n      formatter: statusFormatter,\n      sort: true\n    },\n    {\n      dataField: '',\n      text: '',\n      classes: 'py-2 align-middle',\n      formatter: actionFormatter,\n      align: 'right'\n    }\n  ];\n\n  const options = {\n    custom: true,\n    sizePerPage: 10,\n    totalSize: notifications.length\n  };\n\n  const SelectRowInput = ({ indeterminate, rowIndex, ...rest }) => (\n    <div className=\"custom-control custom-checkbox\">\n      <input\n        className=\"custom-control-input\"\n        {...rest}\n        onChange={() => { }}\n        ref={input => {\n          if (input) input.indeterminate = indeterminate;\n        }}\n      />\n      <label className=\"custom-control-label\" />\n    </div>\n  );\n\n  const selectRow = onSelect => ({\n    mode: 'checkbox',\n    classes: 'py-2 align-middle',\n    clickToSelect: false,\n    selectionHeaderRenderer: ({ mode, ...rest }) => <SelectRowInput type=\"checkbox\" {...rest} />,\n    selectionRenderer: ({ mode, ...rest }) => <SelectRowInput type={mode} {...rest} />,\n    onSelect: onSelect,\n    onSelectAll: onSelect\n  });\n\n  const handleRead = (id, ) => {\n    console.log('Mark As Read: ', id)\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/notifications/' + id, {\n      method: 'PUT',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: JSON.stringify({\n        \"data\": {\n          \"status\": 'read'\n        }\n      }),\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n        return null;\n      } else {\n        return response.json();\n      }\n    }).then(json => {\n      console.log(isResponseOK);\n      if (isResponseOK) {\n        \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n\n  return (\n    <Fragment>\n      <Card className=\"mb-3\">\n        <Spinner color=\"primary\" hidden={spinnerHidden}  />\n        <FalconCardHeader title={t('Notification List')} light={false}>\n          {isSelected ? (\n            <InputGroup size=\"sm\" className=\"input-group input-group-sm\">\n              <CustomInput type=\"select\" id=\"bulk-select\">\n                <option>{t('Bulk actions')}</option>\n                <option value=\"MarkAsRead\">{t('Notification Mark As Read')}</option>\n                <option value=\"Archive\">{t('Notification Archive')}</option>\n                <option value=\"Delete\">{t('Notification Delete')}</option>\n              </CustomInput>\n              <Button color=\"falcon-default\" size=\"sm\" className=\"ml-2\">\n              {t('Notification Apply')}\n                </Button>\n            </InputGroup>\n          ) : (\n              <Fragment>\n                \n              </Fragment>\n            )}\n        </FalconCardHeader>\n        <CardBody className=\"p-0\">\n          <PaginationProvider pagination={paginationFactory(options)}>\n            {({ paginationProps, paginationTableProps }) => {\n              const lastIndex = paginationProps.page * paginationProps.sizePerPage;\n\n              return (\n                <Fragment>\n                  <div className=\"table-responsive\">\n                    <BootstrapTable\n                      ref={table}\n                      bootstrap4\n                      keyField=\"id\"\n                      data={notifications}\n                      columns={columns}\n                      selectRow={selectRow(onSelect)}\n                      bordered={false}\n                      classes=\"table-dashboard table-striped table-sm fs--1 border-bottom mb-0 table-dashboard-th-nowrap\"\n                      rowClasses=\"btn-reveal-trigger\"\n                      headerClasses=\"bg-200 text-900\"\n                      {...paginationTableProps}\n                    />\n                  </div>\n                  <Row noGutters className=\"px-1 py-3 flex-center\">\n                    <Col xs=\"auto\">\n                      <Button\n                        color=\"falcon-default\"\n                        size=\"sm\"\n                        onClick={handlePrevPage(paginationProps)}\n                        disabled={paginationProps.page === 1}\n                      >\n                        <FontAwesomeIcon icon=\"chevron-left\" />\n                      </Button>\n                      {getPaginationArray(paginationProps.totalSize, paginationProps.sizePerPage).map(pageNo => (\n                        <Button\n                          color={paginationProps.page === pageNo ? 'falcon-primary' : 'falcon-default'}\n                          size=\"sm\"\n                          className=\"ml-2\"\n                          onClick={() => paginationProps.onPageChange(pageNo)}\n                          key={pageNo}\n                        >\n                          {pageNo}\n                        </Button>\n                      ))}\n                      <Button\n                        color=\"falcon-default\"\n                        size=\"sm\"\n                        className=\"ml-2\"\n                        onClick={handleNextPage(paginationProps)}\n                        disabled={lastIndex >= paginationProps.totalSize}\n                      >\n                        <FontAwesomeIcon icon=\"chevron-right\" />\n                      </Button>\n                    </Col>\n                  </Row>\n                </Fragment>\n              );\n            }}\n          </PaginationProvider>\n        </CardBody>\n      </Card>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(Notification));\n","export const periodTypeOptions = [\n    { value: 'yearly', label: 'Yearly' },\n    { value: 'monthly', label: 'Monthly' },\n    { value: 'daily', label: 'Daily' },\n    { value: 'hourly', label: 'Hourly' }];","export const comparisonTypeOptions = [\n    { value: 'year-over-year', label: 'Year-Over-Year' },\n    { value: 'month-on-month', label: 'Month-On-Month' },\n    { value: 'free-comparison', label: 'Free Comparison' },\n    { value: 'none-comparison', label: 'None Comparison' }];","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport SharePie from '../common/SharePie';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\n\n\nconst ChildSpacesTable = loadable(() => import('../common/ChildSpacesTable'));\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\n\nconst SpaceEnergyCategory = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n\n\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n  \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n  \n  //Results\n  const [timeOfUseShareData, setTimeOfUseShareData] = useState([]);\n  const [TCEShareData, setTCEShareData] = useState([]);\n  const [TCO2EShareData, setTCO2EShareData] = useState([]);\n\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [totalInTCE, setTotalInTCE] = useState({});\n  const [totalInTCO2E, setTotalInTCO2E] = useState({});\n  const [childSpaceProportionList, setChildSpaceProportionList] = useState([]);\n\n  const [spaceLineChartLabels, setSpaceLineChartLabels] = useState([]);\n  const [spaceLineChartData, setSpaceLineChartData] = useState({});\n  const [spaceLineChartOptions, setSpaceLineChartOptions] = useState([]);\n  \n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n  \n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  \n  const [childSpacesTableData, setChildSpacesTableData] = useState([]);\n  const [childSpacesTableColumns, setChildSpacesTableColumns] = useState([{dataField: 'name', text: t('Child Spaces'), sort: true }]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n\n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response)\n      if (response.ok) {\n        isResponseOK = true;\n        // enable submit button\n        setSubmitButtonDisabled(false);\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json)\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label))\n        setSelectedSpaceID([json[0]].map(o => o.value));\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n  \n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    console.log(value, selectedOptions);\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'))\n    setSelectedSpaceID(value[value.length - 1]);\n  }\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n  \n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(comparisonType);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    \n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    setChildSpacesTableData([]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/spaceenergycategory?' +\n      'spaceid=' + selectedSpaceID +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json);\n\n        let cardSummaryArray = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals'][index];\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['subtotal_per_unit_area'] = json['reporting_period']['subtotals_per_unit_area'][index];\n          cardSummaryArray.push(cardSummaryItem);\n        });\n        setCardSummaryList(cardSummaryArray);\n        \n        let timeOfUseArray = [];\n        json['reporting_period']['energy_category_ids'].forEach((currentValue, index) => {\n          if(currentValue == 1) {\n            // energy_category_id 1 electricity\n            let timeOfUseItem = {}\n            timeOfUseItem['id'] = 1;\n            timeOfUseItem['name'] =  t('Top-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['toppeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n            \n            timeOfUseItem = {}\n            timeOfUseItem['id'] = 2;\n            timeOfUseItem['name'] =  t('On-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['onpeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n\n            timeOfUseItem = {}\n            timeOfUseItem['id'] = 3;\n            timeOfUseItem['name'] =  t('Mid-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['midpeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n\n            timeOfUseItem = {}\n            timeOfUseItem['id'] = 4;\n            timeOfUseItem['name'] =  t('Off-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['offpeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n          }\n        });\n        setTimeOfUseShareData(timeOfUseArray);\n\n        \n        let totalInTCE = {}; \n        totalInTCE['value'] = json['reporting_period']['total_in_kgce'] / 1000; // convert from kg to t\n        totalInTCE['increment_rate'] = parseFloat(json['reporting_period']['increment_rate_in_kgce'] * 100).toFixed(2) + \"%\";\n        totalInTCE['value_per_unit_area'] = json['reporting_period']['total_in_kgce_per_unit_area'] / 1000; // convert from kg to t\n        setTotalInTCE(totalInTCE);\n\n        let totalInTCO2E = {}; \n        totalInTCO2E['value'] = json['reporting_period']['total_in_kgco2e'] / 1000; // convert from kg to t\n        totalInTCO2E['increment_rate'] = parseFloat(json['reporting_period']['increment_rate_in_kgco2e'] * 100).toFixed(2) + \"%\";\n        totalInTCO2E['value_per_unit_area'] = json['reporting_period']['total_in_kgco2e_per_unit_area'] / 1000; // convert from kg to t\n        setTotalInTCO2E(totalInTCO2E);\n\n        let TCEDataArray = [];\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let TCEDataItem = {}\n          TCEDataItem['id'] = index;\n          TCEDataItem['name'] = currentValue;\n          TCEDataItem['value'] = json['reporting_period']['subtotals_in_kgce'][index] / 1000; // convert from kg to t\n          TCEDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          TCEDataArray.push(TCEDataItem);\n        });\n        setTCEShareData(TCEDataArray);\n\n        let TCO2EDataArray = [];\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let TCO2EDataItem = {}\n          TCO2EDataItem['id'] = index;\n          TCO2EDataItem['name'] = currentValue;\n          TCO2EDataItem['value'] = json['reporting_period']['subtotals_in_kgco2e'][index] / 1000; // convert from kg to t\n          TCO2EDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          TCO2EDataArray.push(TCO2EDataItem);\n        });\n        setTCO2EShareData(TCO2EDataArray);\n\n        let childSpaceProportionArray = [];\n        json['child_space']['energy_category_names'].forEach((currentValue, energyCategoryIndex) => {\n          if (json['child_space']['child_space_names_array'][energyCategoryIndex].length > 0) {\n            let childSpaceProportionItem = {}\n            childSpaceProportionItem['data'] = []\n            json['child_space']['child_space_names_array'][energyCategoryIndex].forEach((currentSpaceName, spaceIndex) => {\n              let childSpaceProportionItemDataItem = {}\n              childSpaceProportionItemDataItem['id'] = spaceIndex;\n              childSpaceProportionItemDataItem['name'] = currentSpaceName;\n              childSpaceProportionItemDataItem['value'] = json['child_space']['subtotals_array'][energyCategoryIndex][spaceIndex];\n              childSpaceProportionItemDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n              childSpaceProportionItem['data'].push(childSpaceProportionItemDataItem);\n            });\n\n            childSpaceProportionItem['name'] = json['child_space']['energy_category_names'][energyCategoryIndex];\n            childSpaceProportionItem['unit'] = json['child_space']['units'][energyCategoryIndex]; \n            childSpaceProportionArray.push(childSpaceProportionItem);\n          };\n        });\n        setChildSpaceProportionList(childSpaceProportionArray);\n          \n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setSpaceLineChartLabels(timestamps);\n        \n        let values = {}\n        json['reporting_period']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setSpaceLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setSpaceLineChartOptions(names);\n       \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n        \n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values'][energyCategoryIndex][timestampIndex].toFixed(2);\n            });\n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\n            detailed_value['a' + index] = currentValue.toFixed(2);\n          });\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        })\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          })\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n\n        let child_space_value_list = [];\n        if (json['child_space']['child_space_names_array'].length > 0) {\n          json['child_space']['child_space_names_array'][0].forEach((currentSpaceName, spaceIndex) => {\n            let child_space_value = {};\n            child_space_value['id'] = spaceIndex;\n            child_space_value['name'] = currentSpaceName;\n            json['child_space']['energy_category_names'].forEach((currentValue, energyCategoryIndex) => {\n              child_space_value['a' + energyCategoryIndex] = json['child_space']['subtotals_array'][energyCategoryIndex][spaceIndex].toFixed(2);\n            });\n            child_space_value_list.push(child_space_value);\n          });\n        };\n\n        setChildSpacesTableData(child_space_value_list);\n\n        let child_space_column_list = [];\n        child_space_column_list.push({\n          dataField: 'name',\n          text: t('Child Spaces'),\n          sort: true\n        });\n        json['child_space']['energy_category_names'].forEach((currentValue, index) => {\n          let unit = json['child_space']['units'][index];\n          child_space_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          });\n        });\n\n        setChildSpacesTableColumns(child_space_column_list);\n\n        setExcelBytesBase64(json['excel_bytes_base64']);\n      \n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false)\n      \n        \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'spaceenergycategory.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Space Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Energy Category Data')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"card-deck\">\n        {cardSummaryList.map(cardSummaryItem => (\n          <CardSummary key={cardSummaryItem['name']}\n            rate={cardSummaryItem['increment_rate']}\n            title={t('Reporting Period Consumption CATEGORY UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['subtotal_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        ))}\n       \n        <CardSummary \n          rate={totalInTCE['increment_rate'] || ''} \n          title={t('Reporting Period Consumption CATEGORY UNIT', { 'CATEGORY': t('Ton of Standard Coal'), 'UNIT': '(TCE)' })}\n          color=\"warning\" \n          footnote={t('Per Unit Area')} \n          footvalue={totalInTCE['value_per_unit_area']} \n          footunit=\"(TCE/M²)\">\n          {totalInTCE['value'] && <CountUp end={totalInTCE['value']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n        </CardSummary>\n        <CardSummary \n          rate={totalInTCO2E['increment_rate'] || ''} \n          title={t('Reporting Period Consumption CATEGORY UNIT', { 'CATEGORY': t('Ton of Carbon Dioxide Emissions'), 'UNIT': '(TCO2E)' })}\n          color=\"warning\" \n          footnote={t('Per Unit Area')} \n          footvalue={totalInTCO2E['value_per_unit_area']} \n          footunit=\"(TCO2E/M²)\">\n          {totalInTCO2E['value'] && <CountUp end={totalInTCO2E['value']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n        </CardSummary>\n      </div>\n      <Row noGutters>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={timeOfUseShareData} title={t('Electricity Consumption by Time-Of-Use')} />\n        </Col>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={TCEShareData} title={t('Ton of Standard Coal by Energy Category')} />\n        </Col>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={TCO2EShareData} title={t('Ton of Carbon Dioxide Emissions by Energy Category')} />\n        </Col>\n        {childSpaceProportionList.map(childSpaceProportionItem => (\n          <Col className=\"mb-3 pr-lg-2 mb-3\">\n            <SharePie \n              data={childSpaceProportionItem['data']} \n              title={t('Child Space Proportion CATEGORY UNIT', \n                      {'CATEGORY': childSpaceProportionItem['name'], \n                       'UNIT': '(' + childSpaceProportionItem['unit'] + ')' \n                      })} \n            />\n          </Col>\n        ))}\n      </Row>\n      <LineChart reportingTitle={t('Reporting Period Consumption CATEGORY VALUE UNIT', { 'CATEGORY': null, 'VALUE': null, 'UNIT': null })}\n         baseTitle=''\n        labels={spaceLineChartLabels}\n        data={spaceLineChartData}\n        options={spaceLineChartOptions}>\n      </LineChart>\n\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n      <br />\n      <ChildSpacesTable data={childSpacesTableData} title={t('Child Spaces Data')} columns={childSpacesTableColumns}>\n      </ChildSpacesTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(SpaceEnergyCategory));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport SharePie from '../common/SharePie';\nimport LineChart from '../common/LineChart';\nimport loadable from '@loadable/component';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst ChildSpacesTable = loadable(() => import('../common/ChildSpacesTable'));\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\nconst SpaceEnergyItem = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n  \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n  //Results\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [sharePieList, setSharePieList] = useState([]);\n  const [spaceLineChartLabels, setSpaceLineChartLabels] = useState([]);\n  const [spaceLineChartData, setSpaceLineChartData] = useState({});\n  const [spaceLineChartOptions, setSpaceLineChartOptions] = useState([]);\n  \n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n  \n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  \n  const [childSpacesTableData, setChildSpacesTableData] = useState([]);\n  const [childSpacesTableColumns, setChildSpacesTableColumns] = useState([{dataField: 'name', text: t('Child Spaces'), sort: true }]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n\n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n        // enable submit button\n        setSubmitButtonDisabled(false);\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    console.log(value, selectedOptions);\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(comparisonType);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    \n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n    \n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    setChildSpacesTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/spaceenergyitem?' +\n      'spaceid=' + selectedSpaceID +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n        let cardSummaryArray = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['energy_category_name'] = json['reporting_period']['energy_category_names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals'][index];\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['subtotal_per_unit_area'] = json['reporting_period']['subtotals_per_unit_area'][index];\n          cardSummaryArray.push(cardSummaryItem);\n        });\n        setCardSummaryList(cardSummaryArray);\n        \n        let sharePieDict = {};\n        let energyCategoryDict = {};\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let sharePieSubItem = {}\n          sharePieSubItem['id'] = index;\n          sharePieSubItem['name'] = json['reporting_period']['names'][index];\n          sharePieSubItem['value'] = json['reporting_period']['subtotals'][index];\n          sharePieSubItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          \n          let current_energy_category_id = json['reporting_period']['energy_category_ids'][index]\n          if (current_energy_category_id in sharePieDict) {\n            sharePieDict[current_energy_category_id].push(sharePieSubItem);\n          } else {\n            sharePieDict[current_energy_category_id] = [];\n            sharePieDict[current_energy_category_id].push(sharePieSubItem);\n          }\n          \n          if (!(current_energy_category_id in energyCategoryDict)) {\n            energyCategoryDict[current_energy_category_id] = \n            {'name': json['reporting_period']['energy_category_names'][index],\n             'unit': json['reporting_period']['units'][index],\n            }\n          }\n        });\n        let sharePieArray = [];\n        for (let current_energy_category_id in sharePieDict) {\n          let sharePieItem = {}\n          sharePieItem['data'] = sharePieDict[current_energy_category_id];\n          sharePieItem['energy_category_name'] = energyCategoryDict[current_energy_category_id]['name'];\n          sharePieItem['unit'] = energyCategoryDict[current_energy_category_id]['unit'];\n          sharePieArray.push(sharePieItem);\n        }\n\n        setSharePieList(sharePieArray);\n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setSpaceLineChartLabels(timestamps);\n        \n        let values = {}\n        json['reporting_period']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setSpaceLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setSpaceLineChartOptions(names);\n       \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n      \n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values'][energyCategoryIndex][timestampIndex].toFixed(2);\n            });\n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\n            detailed_value['a' + index] = currentValue.toFixed(2);\n          });\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        })\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          })\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n\n        let child_space_value_list = [];\n        if (json['child_space']['child_space_names_array'].length > 0) {\n          json['child_space']['child_space_names_array'][0].forEach((currentSpaceName, spaceIndex) => {\n            let child_space_value = {};\n            child_space_value['id'] = spaceIndex;\n            child_space_value['name'] = currentSpaceName;\n            json['child_space']['energy_item_names'].forEach((currentValue, energyItemIndex) => {\n              child_space_value['a' + energyItemIndex] = json['child_space']['subtotals_array'][energyItemIndex][spaceIndex].toFixed(2);\n            });\n            child_space_value_list.push(child_space_value);\n          });\n        };\n\n        setChildSpacesTableData(child_space_value_list);\n\n        let child_space_column_list = [];\n        child_space_column_list.push({\n          dataField: 'name',\n          text: t('Child Spaces'),\n          sort: true\n        });\n        json['child_space']['energy_item_names'].forEach((currentValue, index) => {\n          let unit = json['child_space']['units'][index];\n          child_space_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          });\n        });\n\n        setChildSpacesTableColumns(child_space_column_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n      \n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false)\n  \n      \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'spaceenergyitem.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Space Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Energy Item Data')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"card-deck\">\n        {cardSummaryList.map(cardSummaryItem => (\n          <CardSummary key={cardSummaryItem['name']}\n            rate={cardSummaryItem['increment_rate']}\n            title={t('Reporting Period Consumption ITEM CATEGORY UNIT', { 'ITEM': cardSummaryItem['name'], 'CATEGORY': cardSummaryItem['energy_category_name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['subtotal_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        ))}\n      </div>\n      <Row noGutters>\n        {sharePieList.map(sharePieItem => (\n          <Col key={sharePieItem['energy_category_name']} className=\"mb-3 pr-lg-2 mb-3\">\n            <SharePie key={sharePieItem['energy_category_name']}\n              data={sharePieItem['data']} \n              title={t('CATEGORY UNIT Consumption by Energy Items', { 'CATEGORY': sharePieItem['energy_category_name'], 'UNIT': '(' + sharePieItem['unit'] + ')' })} />\n          </Col>\n        ))}\n      </Row>\n      <LineChart reportingTitle={t('Reporting Period Consumption ITEM CATEGORY VALUE UNIT', { 'ITEM': null, 'CATEGORY': null, 'VALUE': null, 'UNIT': null })}\n        baseTitle=''\n        labels={spaceLineChartLabels}\n        data={spaceLineChartData}\n        options={spaceLineChartOptions}>\n      </LineChart>\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n      <br />\n      <ChildSpacesTable data={childSpacesTableData} title={t('Child Spaces Data')} columns={childSpacesTableColumns}>\n      </ChildSpacesTable>\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(SpaceEnergyItem));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport SharePie from '../common/SharePie';\nimport loadable from '@loadable/component';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst ChildSpacesTable = loadable(() => import('../common/ChildSpacesTable'));\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\nconst SpaceCost = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n  \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n  \n  //Results\n  const [timeOfUseShareData, setTimeOfUseShareData] = useState([]);\n  const [costShareData, setCostShareData] = useState([]);\n\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [spaceLineChartLabels, setSpaceLineChartLabels] = useState([]);\n  const [spaceLineChartData, setSpaceLineChartData] = useState({});\n  const [spaceLineChartOptions, setSpaceLineChartOptions] = useState([]);\n  \n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n  \n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  \n  const [childSpacesTableData, setChildSpacesTableData] = useState([]);\n  const [childSpacesTableColumns, setChildSpacesTableColumns] = useState([{dataField: 'name', text: t('Child Spaces'), sort: true }]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n\n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n        // enable submit button\n        setSubmitButtonDisabled(false);\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    console.log(value, selectedOptions);\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(comparisonType);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    \n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    setChildSpacesTableData([]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/spacecost?' +\n      'spaceid=' + selectedSpaceID +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n\n        let cardSummaryList = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals'][index];\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['subtotal_per_unit_area'] = json['reporting_period']['subtotals_per_unit_area'][index];\n          cardSummaryList.push(cardSummaryItem);\n        });\n        let cardSummaryItem = {}\n        cardSummaryItem['name'] = t('Total');\n        cardSummaryItem['unit'] = json['reporting_period']['total_unit'];\n        cardSummaryItem['subtotal'] = json['reporting_period']['total'];\n        cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['total_increment_rate'] * 100).toFixed(2) + \"%\";\n        cardSummaryItem['subtotal_per_unit_area'] = json['reporting_period']['total_per_unit_area'];\n        cardSummaryList.push(cardSummaryItem);\n        setCardSummaryList(cardSummaryList);\n\n        let timeOfUseArray = [];\n        json['reporting_period']['energy_category_ids'].forEach((currentValue, index) => {\n          if(currentValue == 1) {\n            // energy_category_id 1 electricity\n            let timeOfUseItem = {}\n            timeOfUseItem['id'] = 1;\n            timeOfUseItem['name'] =  t('Top-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['toppeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n            \n            timeOfUseItem = {}\n            timeOfUseItem['id'] = 2;\n            timeOfUseItem['name'] =  t('On-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['onpeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n\n            timeOfUseItem = {}\n            timeOfUseItem['id'] = 3;\n            timeOfUseItem['name'] =  t('Mid-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['midpeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n\n            timeOfUseItem = {}\n            timeOfUseItem['id'] = 4;\n            timeOfUseItem['name'] =  t('Off-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['offpeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n          }\n        });\n        setTimeOfUseShareData(timeOfUseArray);\n\n        let costDataArray = [];\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let costDataItem = {}\n          costDataItem['id'] = index;\n          costDataItem['name'] = currentValue;\n          costDataItem['value'] = json['reporting_period']['subtotals'][index];\n          costDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          costDataArray.push(costDataItem);\n        });\n        setCostShareData(costDataArray);\n        \n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setSpaceLineChartLabels(timestamps);\n\n        let values = {}\n        json['reporting_period']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setSpaceLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setSpaceLineChartOptions(names);\n\n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n\n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            let total_current_timstamp = 0.0;\n            json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values'][energyCategoryIndex][timestampIndex].toFixed(2);\n              total_current_timstamp += json['reporting_period']['values'][energyCategoryIndex][timestampIndex];\n            });\n            detailed_value['total'] = total_current_timstamp.toFixed(2);\n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        let total_of_subtotals = 0.0;\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\n            detailed_value['a' + index] = currentValue.toFixed(2);\n            total_of_subtotals += currentValue\n          });\n        detailed_value['total'] = total_of_subtotals.toFixed(2);\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        });\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          });\n        });\n        detailed_column_list.push({\n          dataField: 'total',\n          text: t('Total') + ' (' + json['reporting_period']['total_unit'] + ')',\n          sort: true\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n\n        let child_space_value_list = [];\n        if (json['child_space']['child_space_names_array'].length > 0) {\n          json['child_space']['child_space_names_array'][0].forEach((currentSpaceName, spaceIndex) => {\n            let child_space_value = {};\n            child_space_value['id'] = spaceIndex;\n            child_space_value['name'] = currentSpaceName;\n            let total = 0.0;\n            json['child_space']['energy_category_names'].forEach((currentValue, energyCategoryIndex) => {\n              child_space_value['a' + energyCategoryIndex] = json['child_space']['subtotals_array'][energyCategoryIndex][spaceIndex].toFixed(2);\n              total += json['child_space']['subtotals_array'][energyCategoryIndex][spaceIndex]\n            });\n            child_space_value['total'] = total.toFixed(2);\n            child_space_value_list.push(child_space_value);\n          });\n        };\n\n        setChildSpacesTableData(child_space_value_list);\n\n        let child_space_column_list = [];\n        child_space_column_list.push({\n          dataField: 'name',\n          text: t('Child Spaces'),\n          sort: true\n        });\n        json['child_space']['energy_category_names'].forEach((currentValue, index) => {\n          let unit = json['child_space']['units'][index];\n          child_space_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          });\n        });\n        child_space_column_list.push({\n          dataField: 'total',\n          text: t('Total') + ' (' + json['child_space']['total_unit'] + ')',\n          sort: true\n        });\n\n        setChildSpacesTableColumns(child_space_column_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false) \n\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'spacecost.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Space Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Cost')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"card-deck\">\n        {cardSummaryList.map(cardSummaryItem => (\n          <CardSummary key={cardSummaryItem['name']}\n            rate={cardSummaryItem['increment_rate']}\n            title={t('Reporting Period Costs CATEGORY UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['subtotal_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        ))}\n      </div>\n      <Row noGutters>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={timeOfUseShareData} title={t('Electricity Cost by Time-Of-Use')} />\n        </Col>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={costShareData} title={t('Costs by Energy Category')} />\n        </Col>\n      </Row>\n      <LineChart reportingTitle={t('Reporting Period Costs CATEGORY VALUE UNIT', { 'CATEGORY': null, 'VALUE': null, 'UNIT': null })}\n         baseTitle=''\n        labels={spaceLineChartLabels}\n        data={spaceLineChartData}\n        options={spaceLineChartOptions}>\n      </LineChart>\n\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n      <br />\n      <ChildSpacesTable data={childSpacesTableData} title={t('Child Spaces Data')} columns={childSpacesTableColumns}>\n      </ChildSpacesTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(SpaceCost));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst ChildSpacesTable = loadable(() => import('../common/ChildSpacesTable'));\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\nconst SpaceOutput = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n  \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n  \n  //Results\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [spaceLineChartLabels, setSpaceLineChartLabels] = useState([]);\n  const [spaceLineChartData, setSpaceLineChartData] = useState({});\n  const [spaceLineChartOptions, setSpaceLineChartOptions] = useState([]);\n  \n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n  \n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  \n  const [childSpacesTableData, setChildSpacesTableData] = useState([]);\n  const [childSpacesTableColumns, setChildSpacesTableColumns] = useState([{dataField: 'name', text: t('Child Spaces'), sort: true }]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);  \n\n\n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n        // enable submit button\n        setSubmitButtonDisabled(false);\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n  \n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n  \n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    console.log(value, selectedOptions);\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(comparisonType);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    \n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n    \n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    setChildSpacesTableData([]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/spaceoutput?' +\n      'spaceid=' + selectedSpaceID +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n        let cardSummaryArray = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals'][index];\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['subtotal_per_unit_area'] = json['reporting_period']['subtotals_per_unit_area'][index];\n          cardSummaryArray.push(cardSummaryItem);\n        });\n        setCardSummaryList(cardSummaryArray);\n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setSpaceLineChartLabels(timestamps);\n        \n        let values = {}\n        json['reporting_period']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setSpaceLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setSpaceLineChartOptions(names);\n       \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n      \n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values'][energyCategoryIndex][timestampIndex].toFixed(2);\n            });\n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\n            detailed_value['a' + index] = currentValue.toFixed(2);\n          });\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        })\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          })\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n        \n        let child_space_value_list = [];\n        if (json['child_space']['child_space_names_array'].length > 0) {\n          json['child_space']['child_space_names_array'][0].forEach((currentSpaceName, spaceIndex) => {\n            let child_space_value = {};\n            child_space_value['id'] = spaceIndex;\n            child_space_value['name'] = currentSpaceName;\n            json['child_space']['energy_category_names'].forEach((currentValue, energyCategoryIndex) => {\n              child_space_value['a' + energyCategoryIndex] = json['child_space']['subtotals_array'][energyCategoryIndex][spaceIndex].toFixed(2);\n            });\n            child_space_value_list.push(child_space_value);\n          });\n        };\n\n        setChildSpacesTableData(child_space_value_list);\n\n        let child_space_column_list = [];\n        child_space_column_list.push({\n          dataField: 'name',\n          text: t('Child Spaces'),\n          sort: true\n        });\n        json['child_space']['energy_category_names'].forEach((currentValue, index) => {\n          let unit = json['child_space']['units'][index];\n          child_space_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          });\n        });\n\n        setChildSpacesTableColumns(child_space_column_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n      \n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false)\n      \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'spaceoutput.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Space Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Output')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"card-deck\">\n        {cardSummaryList.map(cardSummaryItem => (\n          <CardSummary key={cardSummaryItem['name']}\n            rate={cardSummaryItem['increment_rate']}\n            title={t('Reporting Period Output CATEGORY UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['subtotal_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        ))}\n      </div>\n      <LineChart reportingTitle={t('Reporting Period Output CATEGORY VALUE UNIT', { 'CATEGORY': null, 'VALUE': null, 'UNIT': null })}\n         baseTitle=''\n        labels={spaceLineChartLabels}\n        data={spaceLineChartData}\n        options={spaceLineChartOptions}>\n      </LineChart>\n\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n      <br />\n      <ChildSpacesTable data={childSpacesTableData} title={t('Child Spaces Data')} columns={childSpacesTableColumns}>\n      </ChildSpacesTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(SpaceOutput));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport SharePie from '../common/SharePie';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst ChildSpacesTable = loadable(() => import('../common/ChildSpacesTable'));\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\nconst SpaceIncome = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n  \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n  //Results\n  const [incomeShareData, setIncomeShareData] = useState([]);\n\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [spaceLineChartLabels, setSpaceLineChartLabels] = useState([]);\n  const [spaceLineChartData, setSpaceLineChartData] = useState({});\n  const [spaceLineChartOptions, setSpaceLineChartOptions] = useState([]);\n  \n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n  \n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  \n  const [childSpacesTableData, setChildSpacesTableData] = useState([]);\n  const [childSpacesTableColumns, setChildSpacesTableColumns] = useState([{dataField: 'name', text: t('Child Spaces'), sort: true }]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n\n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n        // enable submit button\n        setSubmitButtonDisabled(false);\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n  \n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    console.log(value, selectedOptions);\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(comparisonType);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    \n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n    \n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    setChildSpacesTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/spaceincome?' +\n      'spaceid=' + selectedSpaceID +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n             \n        let cardSummaryArray = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals'][index];\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['subtotal_per_unit_area'] = json['reporting_period']['subtotals_per_unit_area'][index];\n          cardSummaryArray.push(cardSummaryItem);\n        });\n        let cardSummaryItem = {}\n        cardSummaryItem['name'] = t('Total');\n        cardSummaryItem['unit'] = json['reporting_period']['total_unit'];\n        cardSummaryItem['subtotal'] = json['reporting_period']['total'];\n        cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['total_increment_rate'] * 100).toFixed(2) + \"%\";\n        cardSummaryItem['subtotal_per_unit_area'] = json['reporting_period']['total_per_unit_area'];\n        cardSummaryArray.push(cardSummaryItem);\n        setCardSummaryList(cardSummaryArray);\n        \n        let incomeDataArray = [];\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let incomeDataItem = {}\n          incomeDataItem['id'] = index;\n          incomeDataItem['name'] = currentValue;\n          incomeDataItem['value'] = json['reporting_period']['subtotals'][index];\n          incomeDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          incomeDataArray.push(incomeDataItem);\n        });\n        setIncomeShareData(incomeDataArray);\n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setSpaceLineChartLabels(timestamps);\n\n        let values = {}\n        json['reporting_period']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setSpaceLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setSpaceLineChartOptions(names);\n\n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n      \n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            let total_current_timstamp = 0.0;\n            json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values'][energyCategoryIndex][timestampIndex].toFixed(2);\n              total_current_timstamp += json['reporting_period']['values'][energyCategoryIndex][timestampIndex];\n            });\n            detailed_value['total'] = total_current_timstamp.toFixed(2);\n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        let total_of_subtotals = 0.0;\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\n            detailed_value['a' + index] = currentValue.toFixed(2);\n            total_of_subtotals += currentValue\n          });\n        detailed_value['total'] = total_of_subtotals.toFixed(2);\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        });\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          });\n        });\n        detailed_column_list.push({\n          dataField: 'total',\n          text: t('Total') + ' (' + json['reporting_period']['total_unit'] + ')',\n          sort: true\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n\n        let child_space_value_list = [];\n        if (json['child_space']['child_space_names_array'].length > 0) {\n          json['child_space']['child_space_names_array'][0].forEach((currentSpaceName, spaceIndex) => {\n            let child_space_value = {};\n            child_space_value['id'] = spaceIndex;\n            child_space_value['name'] = currentSpaceName;\n            let total = 0.0;\n            json['child_space']['energy_category_names'].forEach((currentValue, energyCategoryIndex) => {\n              child_space_value['a' + energyCategoryIndex] = json['child_space']['subtotals_array'][energyCategoryIndex][spaceIndex].toFixed(2);\n              total += json['child_space']['subtotals_array'][energyCategoryIndex][spaceIndex]\n            });\n            child_space_value['total'] = total.toFixed(2);\n            child_space_value_list.push(child_space_value);\n          });\n        };\n\n        setChildSpacesTableData(child_space_value_list);\n\n        let child_space_column_list = [];\n        child_space_column_list.push({\n          dataField: 'name',\n          text: t('Child Spaces'),\n          sort: true\n        });\n        json['child_space']['energy_category_names'].forEach((currentValue, index) => {\n          let unit = json['child_space']['units'][index];\n          child_space_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          });\n        });\n        child_space_column_list.push({\n          dataField: 'total',\n          text: t('Total') + ' (' + json['child_space']['total_unit'] + ')',\n          sort: true\n        });\n\n        setChildSpacesTableColumns(child_space_column_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n      \n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false)\n        \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'spaceincome.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Space Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Income')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"card-deck\">\n        {cardSummaryList.map(cardSummaryItem => (\n          <CardSummary key={cardSummaryItem['name']}\n            rate={cardSummaryItem['increment_rate']}\n            title={t('Reporting Period Income CATEGORY UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['subtotal_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        ))}\n      </div>\n      <Row noGutters>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={incomeShareData} title={t('Incomes by Energy Category')} />\n        </Col>\n      </Row>\n      <LineChart reportingTitle={t('Reporting Period Income CATEGORY VALUE UNIT', { 'CATEGORY': null, 'VALUE': null, 'UNIT': null })}\n         baseTitle=''\n        labels={spaceLineChartLabels}\n        data={spaceLineChartData}\n        options={spaceLineChartOptions}>\n      </LineChart>\n\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n      <br />\n      <ChildSpacesTable data={childSpacesTableData} title={t('Child Spaces Data')} columns={childSpacesTableColumns}>\n      </ChildSpacesTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(SpaceIncome));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\nconst SpaceEfficiency = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n  \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n  \n  //Results\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [spaceLineChartLabels, setSpaceLineChartLabels] = useState([]);\n  const [spaceLineChartData, setSpaceLineChartData] = useState({});\n  const [spaceLineChartOptions, setSpaceLineChartOptions] = useState([]);\n  \n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n  \n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n\n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n        // enable submit button\n        setSubmitButtonDisabled(false);\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n  \n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    console.log(value, selectedOptions);\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(comparisonType);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n        \n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/spaceefficiency?' +\n      'spaceid=' + selectedSpaceID +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n        let cardSummaryArray = []\n        json['reporting_period_efficiency']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period_efficiency']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period_efficiency']['units'][index];\n          cardSummaryItem['cumulation'] = json['reporting_period_efficiency']['cumulations'][index];\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period_efficiency']['increment_rates'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryArray.push(cardSummaryItem);\n        });\n        setCardSummaryList(cardSummaryArray);\n      \n        let timestamps = {}\n        json['reporting_period_efficiency']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setSpaceLineChartLabels(timestamps);\n        \n        let values = {}\n        json['reporting_period_efficiency']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setSpaceLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period_efficiency']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period_efficiency']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setSpaceLineChartOptions(names);\n       \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n      \n        let detailed_value_list = [];\n        if (json['reporting_period_efficiency']['timestamps'].length > 0) {\n          json['reporting_period_efficiency']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            json['reporting_period_efficiency']['values'].forEach((currentValue, energyCategoryIndex) => {\n              if (json['reporting_period_efficiency']['values'][energyCategoryIndex][timestampIndex] != null) {\n                detailed_value['a' + energyCategoryIndex] = json['reporting_period_efficiency']['values'][energyCategoryIndex][timestampIndex].toFixed(2);\n              } else {\n                detailed_value['a' + energyCategoryIndex] = '';\n              };\n            });\n            \n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        json['reporting_period_efficiency']['cumulations'].forEach((currentValue, index) => {\n            if (currentValue != null) {\n              detailed_value['a' + index] = currentValue.toFixed(2);\n            }else {\n              detailed_value['a' + index] = '';\n            }\n          });\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        })\n        json['reporting_period_efficiency']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period_efficiency']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          })\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false)\n\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    }); \n  \n  };\n\n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'spaceefficiency.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Space Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Efficiency')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              \n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"card-deck\">\n        {cardSummaryList.map(cardSummaryItem => (\n          <CardSummary key={cardSummaryItem['name']}\n            rate={cardSummaryItem['increment_rate']}\n            title={t('Reporting Period Cumulative Efficiency NAME UNIT', { 'NAME': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            >\n            {cardSummaryItem['cumulation'] && <CountUp end={cardSummaryItem['cumulation']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        ))}\n      </div>\n      <LineChart reportingTitle={t('Reporting Period Cumulative Efficiency VALUE UNIT', { 'VALUE': null, 'UNIT': null })}\n        baseTitle=''\n        labels={spaceLineChartLabels}\n        data={spaceLineChartData}\n        options={spaceLineChartOptions}>\n      </LineChart>\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n      <br />\n      \n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(SpaceEfficiency));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\n\nconst SpaceLoad = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n  \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n  //Results\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [spaceLineChartLabels, setSpaceLineChartLabels] = useState([]);\n  const [spaceLineChartData, setSpaceLineChartData] = useState({});\n  const [spaceLineChartOptions, setSpaceLineChartOptions] = useState([]);\n  \n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n  \n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n        // enable submit button\n        setSubmitButtonDisabled(false);\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n  \n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    console.log(value, selectedOptions);\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(comparisonType);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    \n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n    \n    // Reinitialize tables\n    setDetailedDataTableData([]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/spaceload?' +\n      'spaceid=' + selectedSpaceID +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n        \n        let cardSummaryArray = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['average'] = json['reporting_period']['averages'][index];\n          cardSummaryItem['average_increment_rate'] = parseFloat(json['reporting_period']['averages_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['average_per_unit_area'] = json['reporting_period']['averages_per_unit_area'][index];\n          cardSummaryItem['maximum'] = json['reporting_period']['maximums'][index];\n          cardSummaryItem['maximum_increment_rate'] = parseFloat(json['reporting_period']['maximums_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['maximum_per_unit_area'] = json['reporting_period']['maximums_per_unit_area'][index];\n          cardSummaryItem['factor'] = json['reporting_period']['factors'][index];\n          cardSummaryItem['factor_increment_rate'] = parseFloat(json['reporting_period']['factors_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryArray.push(cardSummaryItem);\n        });\n        setCardSummaryList(cardSummaryArray);\n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setSpaceLineChartLabels(timestamps);\n        \n        let values = {}\n        json['reporting_period']['sub_maximums'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setSpaceLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + '/H)'});\n        });\n        setSpaceLineChartOptions(names);\n      \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n      \n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            json['reporting_period']['sub_averages'].forEach((currentValue, energyCategoryIndex) => {\n              if (json['reporting_period']['sub_averages'][energyCategoryIndex][timestampIndex] != null) {\n                detailed_value['a' + 2 * energyCategoryIndex] = json['reporting_period']['sub_averages'][energyCategoryIndex][timestampIndex].toFixed(2);\n              } else {\n                detailed_value['a' + 2 * energyCategoryIndex] = '';\n              };  \n            \n              if (json['reporting_period']['sub_maximums'][energyCategoryIndex][timestampIndex] != null) {\n                detailed_value['a' + (2 * energyCategoryIndex + 1)] = json['reporting_period']['sub_maximums'][energyCategoryIndex][timestampIndex].toFixed(2);\n              } else {\n                detailed_value['a' + (2 * energyCategoryIndex + 1)] = '';\n              };            \n            });\n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        })\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + 2 * index,\n            text: currentValue + ' ' + t('Average Load') + ' (' + unit + '/H)',\n            sort: true\n          });\n          detailed_column_list.push({\n            dataField: 'a' + (2 * index + 1),\n            text: currentValue + ' ' + t('Maximum Load') + ' (' + unit + '/H)',\n            sort: true\n          });\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n      \n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false)\n        \n      \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'spaceload.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Space Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Load')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      {cardSummaryList.map(cardSummaryItem => (\n        <div className=\"card-deck\" key={cardSummaryItem['name']}>\n          <CardSummary key={cardSummaryItem['name'] + 'average'}\n            rate={cardSummaryItem['average_increment_rate']}\n            title={t('Reporting Period CATEGORY Average Load UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + '/H)' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['average_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/H/M²)\"} >\n            {cardSummaryItem['average'] && <CountUp end={cardSummaryItem['average']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'maximum'}\n            rate={cardSummaryItem['maximum_increment_rate']}\n            title={t('Reporting Period CATEGORY Maximum Load UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + '/H)' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['maximum_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/H/M²)\"} >\n            {cardSummaryItem['maximum'] && <CountUp end={cardSummaryItem['maximum']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'factor'}\n            rate={cardSummaryItem['factor_increment_rate']}\n            title={t('Reporting Period CATEGORY Load Factor', { 'CATEGORY': cardSummaryItem['name'] })}\n            color=\"success\" \n            footnote={t('Ratio of Average Load to Maximum Load')} >\n            {cardSummaryItem['factor'] && <CountUp end={cardSummaryItem['factor']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        </div>\n      ))}\n   \n      <LineChart reportingTitle={t('Reporting Period CATEGORY Maximum Load UNIT', { 'CATEGORY': null, 'UNIT': null })}\n        baseTitle=''\n        labels={spaceLineChartLabels}\n        data={spaceLineChartData}\n        options={spaceLineChartOptions}>\n      </LineChart>\n\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n      <br />\n      \n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(SpaceLoad));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\n\nconst SpaceStatistics = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n  \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n  //Results\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [spaceLineChartLabels, setSpaceLineChartLabels] = useState([]);\n  const [spaceLineChartData, setSpaceLineChartData] = useState({});\n  const [spaceLineChartOptions, setSpaceLineChartOptions] = useState([]);\n  \n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n  \n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n        // enable submit button\n        setSubmitButtonDisabled(false);\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n  \n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    console.log(value, selectedOptions);\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(comparisonType);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    \n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n    \n    // Reinitialize tables\n    setDetailedDataTableData([]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/spacestatistics?' +\n      'spaceid=' + selectedSpaceID +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n        let cardSummaryArray = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['mean'] = json['reporting_period']['means'][index];\n          cardSummaryItem['mean_increment_rate'] = parseFloat(json['reporting_period']['means_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['mean_per_unit_area'] = json['reporting_period']['means_per_unit_area'][index];\n          cardSummaryItem['median'] = json['reporting_period']['medians'][index];\n          cardSummaryItem['median_increment_rate'] = parseFloat(json['reporting_period']['medians_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['median_per_unit_area'] = json['reporting_period']['medians_per_unit_area'][index];\n          cardSummaryItem['minimum'] = json['reporting_period']['minimums'][index];\n          cardSummaryItem['minimum_increment_rate'] = parseFloat(json['reporting_period']['minimums_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['minimum_per_unit_area'] = json['reporting_period']['minimums_per_unit_area'][index];\n          cardSummaryItem['maximum'] = json['reporting_period']['maximums'][index];\n          cardSummaryItem['maximum_increment_rate'] = parseFloat(json['reporting_period']['maximums_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['maximum_per_unit_area'] = json['reporting_period']['maximums_per_unit_area'][index];\n          cardSummaryItem['stdev'] = json['reporting_period']['stdevs'][index];\n          cardSummaryItem['stdev_increment_rate'] = parseFloat(json['reporting_period']['stdevs_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['stdev_per_unit_area'] = json['reporting_period']['stdevs_per_unit_area'][index];\n          cardSummaryItem['variance'] = json['reporting_period']['variances'][index];\n          cardSummaryItem['variance_increment_rate'] = parseFloat(json['reporting_period']['variances_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['variance_per_unit_area'] = json['reporting_period']['variances_per_unit_area'][index];          \n          cardSummaryArray.push(cardSummaryItem);\n        });\n        setCardSummaryList(cardSummaryArray);\n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setSpaceLineChartLabels(timestamps);\n        \n        let values = {}\n        json['reporting_period']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setSpaceLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setSpaceLineChartOptions(names);\n      \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n      \n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values'][energyCategoryIndex][timestampIndex].toFixed(2);\n            });\n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\n            detailed_value['a' + index] = currentValue.toFixed(2);\n          });\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        })\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          })\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n      \n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false)\n      \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'spacestatistics.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Space Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Statistics')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      {cardSummaryList.map(cardSummaryItem => (\n        <div className=\"card-deck\" key={cardSummaryItem['name']}>\n          <CardSummary key={cardSummaryItem['name'] + 'mean'}\n            rate={cardSummaryItem['mean_increment_rate']}\n            title={t('Reporting Period CATEGORY Mean UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['mean_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['mean'] && <CountUp end={cardSummaryItem['mean']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'median'}\n            rate={cardSummaryItem['median_increment_rate']}\n            title={t('Reporting Period CATEGORY Median UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['median_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['median'] && <CountUp end={cardSummaryItem['median']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'minimum'}\n            rate={cardSummaryItem['minimum_increment_rate']}\n            title={t('Reporting Period CATEGORY Minimum UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['minimum_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['minimum'] && <CountUp end={cardSummaryItem['minimum']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'maximum'}\n            rate={cardSummaryItem['maximum_increment_rate']}\n            title={t('Reporting Period CATEGORY Maximum UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['maximum_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['maximum'] && <CountUp end={cardSummaryItem['maximum']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'stdev'}\n            rate={cardSummaryItem['stdev_increment_rate']}\n            title={t('Reporting Period CATEGORY Stdev UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['stdev_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['stdev'] && <CountUp end={cardSummaryItem['stdev']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'variance'}\n            rate={cardSummaryItem['variance_increment_rate']}\n            title={t('Reporting Period CATEGORY Variance UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\"\n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['variance_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['variance'] && <CountUp end={cardSummaryItem['variance']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        </div>\n      ))}\n      <LineChart reportingTitle={t('Reporting Period Consumption CATEGORY VALUE UNIT', { 'CATEGORY': null, 'VALUE': null, 'UNIT': null })}\n         baseTitle=''\n        labels={spaceLineChartLabels}\n        data={spaceLineChartData}\n        options={spaceLineChartOptions}>\n      </LineChart>\n\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n      <br />\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(SpaceStatistics));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport SharePie from '../common/SharePie';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst ChildSpacesTable = loadable(() => import('../common/ChildSpacesTable'));\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\n\nconst SpaceSaving = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n  \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n  \n  //Results\n  const [TCEShareData, setTCEShareData] = useState([]);\n  const [TCO2EShareData, setTCO2EShareData] = useState([]);\n  \n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [totalInTCE, setTotalInTCE] = useState({});\n  const [totalInTCO2E, setTotalInTCO2E] = useState({});\n  const [spaceLineChartLabels, setSpaceLineChartLabels] = useState([]);\n  const [spaceLineChartData, setSpaceLineChartData] = useState({});\n  const [spaceLineChartOptions, setSpaceLineChartOptions] = useState([]);\n  \n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n  \n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  \n  const [childSpacesTableData, setChildSpacesTableData] = useState([]);\n  const [childSpacesTableColumns, setChildSpacesTableColumns] = useState([{dataField: 'name', text: t('Child Spaces'), sort: true }]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n\n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n        // enable submit button\n        setSubmitButtonDisabled(false);\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n  \n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    console.log(value, selectedOptions);\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(comparisonType);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    \n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n    \n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    setChildSpacesTableData([]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/spacesaving?' +\n      'spaceid=' + selectedSpaceID +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n        let cardSummaryArray = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals_saving'][index];\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates_saving'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['subtotal_per_unit_area'] = json['reporting_period']['subtotals_per_unit_area_saving'][index];\n          cardSummaryArray.push(cardSummaryItem);\n        });\n        setCardSummaryList(cardSummaryArray);\n\n        let totalInTCE = {}; \n        totalInTCE['value'] = json['reporting_period']['total_in_kgce_saving'] / 1000; // convert from kg to t\n        totalInTCE['increment_rate'] = parseFloat(json['reporting_period']['increment_rate_in_kgce_saving'] * 100).toFixed(2) + \"%\";\n        totalInTCE['value_per_unit_area'] = json['reporting_period']['total_in_kgce_per_unit_area_saving'] / 1000; // convert from kg to t\n        setTotalInTCE(totalInTCE);\n\n        let totalInTCO2E = {}; \n        totalInTCO2E['value'] = json['reporting_period']['total_in_kgco2e_saving'] / 1000; // convert from kg to t\n        totalInTCO2E['increment_rate'] = parseFloat(json['reporting_period']['increment_rate_in_kgco2e_saving'] * 100).toFixed(2) + \"%\";\n        totalInTCO2E['value_per_unit_area'] = json['reporting_period']['total_in_kgco2e_per_unit_area_saving'] / 1000; // convert from kg to t\n        setTotalInTCO2E(totalInTCO2E);\n\n        let TCEDataArray = [];\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let TCEDataItem = {}\n          TCEDataItem['id'] = index;\n          TCEDataItem['name'] = currentValue;\n          TCEDataItem['value'] = json['reporting_period']['subtotals_in_kgce_saving'][index] / 1000; // convert from kg to t\n          TCEDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          TCEDataArray.push(TCEDataItem);\n        });\n        setTCEShareData(TCEDataArray);\n\n        let TCO2EDataArray = [];\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let TCO2EDataItem = {}\n          TCO2EDataItem['id'] = index;\n          TCO2EDataItem['name'] = currentValue;\n          TCO2EDataItem['value'] = json['reporting_period']['subtotals_in_kgco2e_saving'][index] / 1000; // convert from kg to t\n          TCO2EDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          TCO2EDataArray.push(TCO2EDataItem);\n        });\n        setTCO2EShareData(TCO2EDataArray);\n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setSpaceLineChartLabels(timestamps);\n        \n        let values = {}\n        json['reporting_period']['values_saving'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setSpaceLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setSpaceLineChartOptions(names);\n       \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n        \n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            json['reporting_period']['values_saving'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values_saving'][energyCategoryIndex][timestampIndex].toFixed(2);\n            });\n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        json['reporting_period']['subtotals_saving'].forEach((currentValue, index) => {\n            detailed_value['a' + index] = currentValue.toFixed(2);\n          });\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        })\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          })\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n\n        let child_space_value_list = [];\n        if (json['child_space']['child_space_names_array'].length > 0) {\n          json['child_space']['child_space_names_array'][0].forEach((currentSpaceName, spaceIndex) => {\n            let child_space_value = {};\n            child_space_value['id'] = spaceIndex;\n            child_space_value['name'] = currentSpaceName;\n            json['child_space']['energy_category_names'].forEach((currentValue, energyCategoryIndex) => {\n              child_space_value['a' + energyCategoryIndex] = json['child_space']['subtotals_saving_array'][energyCategoryIndex][spaceIndex].toFixed(2);\n            });\n            child_space_value_list.push(child_space_value);\n          });\n        };\n\n        setChildSpacesTableData(child_space_value_list);\n\n        let child_space_column_list = [];\n        child_space_column_list.push({\n          dataField: 'name',\n          text: t('Child Spaces'),\n          sort: true\n        });\n        json['child_space']['energy_category_names'].forEach((currentValue, index) => {\n          let unit = json['child_space']['units'][index];\n          child_space_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          });\n        });\n\n        setChildSpacesTableColumns(child_space_column_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n      \n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false)\n        \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'spacesaving.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Space Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Saving')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"card-deck\">\n        {cardSummaryList.map(cardSummaryItem => (\n          <CardSummary key={cardSummaryItem['name']}\n            rate={cardSummaryItem['increment_rate']}\n            title={t('Reporting Period Savings CATEGORY (Baseline - Actual) UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['subtotal_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        ))}\n       \n        <CardSummary \n          rate={totalInTCE['increment_rate'] || ''} \n          title={t('Reporting Period Savings CATEGORY (Baseline - Actual) UNIT', { 'CATEGORY': t('Ton of Standard Coal'), 'UNIT': '(TCE)' })}\n          color=\"warning\" \n          footnote={t('Per Unit Area')} \n          footvalue={totalInTCE['value_per_unit_area']} \n          footunit=\"(TCE/M²)\">\n          {totalInTCE['value'] && <CountUp end={totalInTCE['value']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n        </CardSummary>\n        <CardSummary \n          rate={totalInTCO2E['increment_rate'] || ''} \n          title={t('Reporting Period Decreased CATEGORY (Baseline - Actual) UNIT', { 'CATEGORY': t('Ton of Carbon Dioxide Emissions'), 'UNIT': '(TCO2E)' })}\n          color=\"warning\" \n          footnote={t('Per Unit Area')} \n          footvalue={totalInTCO2E['value_per_unit_area']} \n          footunit=\"(TCO2E/M²)\">\n          {totalInTCO2E['value'] && <CountUp end={totalInTCO2E['value']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n        </CardSummary>\n      </div>\n      <Row noGutters>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={TCEShareData} title={t('Ton of Standard Coal by Energy Category')} />\n        </Col>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={TCO2EShareData} title={t('Ton of Carbon Dioxide Emissions by Energy Category')} />\n        </Col>\n      </Row>\n      <LineChart reportingTitle={t('Reporting Period Savings CATEGORY VALUE UNIT', { 'CATEGORY': null, 'VALUE': null, 'UNIT': null })}\n        baseTitle=''\n        labels={spaceLineChartLabels}\n        data={spaceLineChartData}\n        options={spaceLineChartOptions}>\n      </LineChart>\n\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n      <br />\n      <ChildSpacesTable data={childSpacesTableData} title={t('Child Spaces Data')} columns={childSpacesTableColumns}>\n      </ChildSpacesTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(SpaceSaving));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\n\nconst EquipmentBatch = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [equipmentList, setEquipmentList] = useState([]);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n      \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(false);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n  //Results\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState(\n    [{dataField: 'name', text: t('Name'), sort: true}, {dataField: 'space', text: t('Space'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        // set the default selected space\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n\n        setSubmitButtonDisabled(false);\n        setSpinnerHidden(true);\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n    setEquipmentList([]);\n    setExportButtonHidden(true);\n    setSubmitButtonDisabled(false);\n  }\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n \n    // Reinitialize tables\n    setEquipmentList([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/equipmentbatch?' +\n      'spaceid=' + selectedSpaceID +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n        let equipments = [];\n        if (json['equipments'].length > 0) {\n          json['equipments'].forEach((currentEquipment, index) => {\n            let detailed_value = {};\n            detailed_value['id'] = currentEquipment['id'];\n            detailed_value['name'] = currentEquipment['equipment_name'];\n            detailed_value['space'] = currentEquipment['space_name'];\n            detailed_value['costcenter'] = currentEquipment['cost_center_name'];\n            currentEquipment['values'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = currentValue.toFixed(2);\n            });\n            equipments.push(detailed_value);\n          });\n        };\n\n        setEquipmentList(equipments);\n\n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'name',\n          text: t('Name'),\n          sort: true\n        });\n        detailed_column_list.push({\n          dataField: 'space',\n          text: t('Space'),\n          sort: true\n        });\n        json['energycategories'].forEach((currentValue, index) => {\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue['name'] + ' (' + currentValue['unit_of_measure'] + ')',\n            sort: true\n          })\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n\n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);\n          \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'equipmentbatch.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Equipment Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Batch Analysis')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              \n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <DetailedDataTable data={equipmentList} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(EquipmentBatch));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport SharePie from '../common/SharePie';\nimport loadable from '@loadable/component';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\nconst EquipmentCost = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [equipmentList, setEquipmentList] = useState([]);\n  const [selectedEquipment, setSelectedEquipment] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n  \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n  //Results\n  const [timeOfUseShareData, setTimeOfUseShareData] = useState([]);\n  const [costShareData, setCostShareData] = useState([]);\n\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [equipmentLineChartLabels, setEquipmentLineChartLabels] = useState([]);\n  const [equipmentLineChartData, setEquipmentLineChartData] = useState({});\n  const [equipmentLineChartOptions, setEquipmentLineChartOptions] = useState([]);\n\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json)\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Equipments by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/equipments', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setEquipmentList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedEquipment(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedEquipment(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Equipments by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/equipments', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setEquipmentList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedEquipment(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedEquipment(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedEquipment);\n    console.log(comparisonType);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    \n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n    \n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/equipmentcost?' +\n      'equipmentid=' + selectedEquipment +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n\n        let cardSummaryList = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals'][index];\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryList.push(cardSummaryItem);\n        });\n        let cardSummaryItem = {}\n        cardSummaryItem['name'] = t('Total');\n        cardSummaryItem['unit'] = json['reporting_period']['total_unit'];\n        cardSummaryItem['subtotal'] = json['reporting_period']['total'];\n        cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['total_increment_rate'] * 100).toFixed(2) + \"%\";\n        cardSummaryList.push(cardSummaryItem);\n        setCardSummaryList(cardSummaryList);\n\n        let timeOfUseArray = [];\n        json['reporting_period']['energy_category_ids'].forEach((currentValue, index) => {\n          if(currentValue == 1) {\n            // energy_category_id 1 electricity\n            let timeOfUseItem = {}\n            timeOfUseItem['id'] = 1;\n            timeOfUseItem['name'] =  t('Top-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['toppeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n            \n            timeOfUseItem = {}\n            timeOfUseItem['id'] = 2;\n            timeOfUseItem['name'] =  t('On-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['onpeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n\n            timeOfUseItem = {}\n            timeOfUseItem['id'] = 3;\n            timeOfUseItem['name'] =  t('Mid-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['midpeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n\n            timeOfUseItem = {}\n            timeOfUseItem['id'] = 4;\n            timeOfUseItem['name'] =  t('Off-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['offpeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n          }\n        });\n        setTimeOfUseShareData(timeOfUseArray);\n\n        let costDataArray = [];\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let costDataItem = {}\n          costDataItem['id'] = index;\n          costDataItem['name'] = currentValue;\n          costDataItem['value'] = json['reporting_period']['subtotals'][index];\n          costDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          costDataArray.push(costDataItem);\n        });\n        setCostShareData(costDataArray);\n        \n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setEquipmentLineChartLabels(timestamps);\n\n        let values = {}\n        json['reporting_period']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setEquipmentLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setEquipmentLineChartOptions(names);\n\n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n\n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            let total_current_timstamp = 0.0;\n            json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values'][energyCategoryIndex][timestampIndex].toFixed(2);\n              total_current_timstamp += json['reporting_period']['values'][energyCategoryIndex][timestampIndex];\n            });\n            detailed_value['total'] = total_current_timstamp.toFixed(2);\n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        let total_of_subtotals = 0.0;\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\n            detailed_value['a' + index] = currentValue.toFixed(2);\n            total_of_subtotals += currentValue\n          });\n        detailed_value['total'] = total_of_subtotals.toFixed(2);\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        });\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          });\n        });\n        detailed_column_list.push({\n          dataField: 'total',\n          text: t('Total') + ' (' + json['reporting_period']['total_unit'] + ')',\n          sort: true\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);\n        \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  \n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'equipmentcost.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Equipment Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Cost')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"equipmentSelect\">\n                    {t('Equipment')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"equipmentSelect\" name=\"equipmentSelect\" onChange={({ target }) => setSelectedEquipment(target.value)}\n                  >\n                    {equipmentList.map((equipment, index) => (\n                      <option value={equipment.value} key={equipment.value}>\n                        {equipment.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"card-deck\">\n        {cardSummaryList.map(cardSummaryItem => (\n          <CardSummary key={cardSummaryItem['name']}\n            rate={cardSummaryItem['increment_rate']}\n            title={t('Reporting Period Costs CATEGORY UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" >\n            {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        ))}\n      </div>\n      <Row noGutters>\n      <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={timeOfUseShareData} title={t('Electricity Cost by Time-Of-Use')} />\n        </Col>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={costShareData} title={t('Costs by Energy Category')} />\n        </Col>\n      </Row>\n      <LineChart reportingTitle={t('Reporting Period Costs CATEGORY VALUE UNIT', { 'CATEGORY': null, 'VALUE': null, 'UNIT': null })}\n        baseTitle=''\n        labels={equipmentLineChartLabels}\n        data={equipmentLineChartData}\n        options={equipmentLineChartOptions}>\n      </LineChart>\n\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(EquipmentCost));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\nconst EquipmentEfficiency = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [equipmentList, setEquipmentList] = useState([]);\n  const [selectedEquipment, setSelectedEquipment] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n\n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n  //Results\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [equipmentLineChartLabels, setEquipmentLineChartLabels] = useState([]);\n  const [equipmentLineChartData, setEquipmentLineChartData] = useState({});\n  const [equipmentLineChartOptions, setEquipmentLineChartOptions] = useState([]);\n\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n\n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response)\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json)\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Equipments by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/equipments', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setEquipmentList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedEquipment(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedEquipment(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Equipments by root Space ID\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n  \n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    console.log(value, selectedOptions);\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/equipments', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setEquipmentList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedEquipment(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedEquipment(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n\n        // hide export buttion\n        setExportButtonHidden(true)\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedEquipment);\n    console.log(comparisonType);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    \n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/equipmentefficiency?' +\n      'equipmentid=' + selectedEquipment +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n        \n        let cardSummaryArray = []\n        json['reporting_period_efficiency']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period_efficiency']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period_efficiency']['units'][index];\n          cardSummaryItem['cumulation'] = json['reporting_period_efficiency']['cumulations'][index];\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period_efficiency']['increment_rates'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryArray.push(cardSummaryItem);\n        });\n        setCardSummaryList(cardSummaryArray);\n      \n        let timestamps = {}\n        json['reporting_period_efficiency']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setEquipmentLineChartLabels(timestamps);\n        \n        let values = {}\n        json['reporting_period_efficiency']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setEquipmentLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period_efficiency']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period_efficiency']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setEquipmentLineChartOptions(names);\n       \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n      \n        let detailed_value_list = [];\n        if (json['reporting_period_efficiency']['timestamps'].length > 0) {\n          json['reporting_period_efficiency']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            json['reporting_period_efficiency']['values'].forEach((currentValue, parameterIndex) => {\n              if (json['reporting_period_efficiency']['values'][parameterIndex][timestampIndex] != null) {\n                detailed_value['a' + parameterIndex] = json['reporting_period_efficiency']['values'][parameterIndex][timestampIndex].toFixed(2);\n              } else {\n                detailed_value['a' + parameterIndex] = '';\n              };\n            });\n            \n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        json['reporting_period_efficiency']['cumulations'].forEach((currentValue, index) => {\n            detailed_value['a' + index] = currentValue.toFixed(2);\n          });\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        })\n        json['reporting_period_efficiency']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period_efficiency']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          })\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n      \n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);\n\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });      \n  };\n  \n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'equipmentefficiency.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Equipment Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Efficiency')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"equipmentSelect\">\n                    {t('Equipment')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"equipmentSelect\" name=\"equipmentSelect\" onChange={({ target }) => setSelectedEquipment(target.value)}\n                  >\n                    {equipmentList.map((equipment, index) => (\n                      <option value={equipment.value} key={equipment.value}>\n                        {equipment.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"card-deck\">\n        {cardSummaryList.map(cardSummaryItem => (\n          <CardSummary key={cardSummaryItem['name']}\n            rate={cardSummaryItem['increment_rate']}\n            title={t('Reporting Period Cumulative Efficiency NAME UNIT', { 'NAME': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            >\n            {cardSummaryItem['cumulation'] && <CountUp end={cardSummaryItem['cumulation']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        ))}\n      </div>\n      <LineChart reportingTitle={t('Reporting Period Cumulative Efficiency VALUE UNIT', { 'VALUE': null, 'UNIT': null })}\n        baseTitle=''\n        labels={equipmentLineChartLabels}\n        data={equipmentLineChartData}\n        options={equipmentLineChartOptions}>\n      </LineChart>\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(EquipmentEfficiency));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport SharePie from '../common/SharePie';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\nconst EquipmentEnergyCategory = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [equipmentList, setEquipmentList] = useState([]);\n  const [selectedEquipment, setSelectedEquipment] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n\n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n  \n  //Results\n  const [timeOfUseShareData, setTimeOfUseShareData] = useState([]);\n  const [TCEShareData, setTCEShareData] = useState([]);\n  const [TCO2EShareData, setTCO2EShareData] = useState([]);\n\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [totalInTCE, setTotalInTCE] = useState({});\n  const [totalInTCO2E, setTotalInTCO2E] = useState({});\n  const [equipmentLineChartLabels, setEquipmentLineChartLabels] = useState([]);\n  const [equipmentLineChartData, setEquipmentLineChartData] = useState({});\n  const [equipmentLineChartOptions, setEquipmentLineChartOptions] = useState([]);\n\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Equipments by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/equipments', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setEquipmentList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedEquipment(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedEquipment(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Equipments by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n  \n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  \n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/equipments', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setEquipmentList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedEquipment(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedEquipment(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedEquipment);\n    console.log(comparisonType);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    \n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/equipmentenergycategory?' +\n      'equipmentid=' + selectedEquipment +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n  \n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n        let cardSummaryArray = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals'][index];\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryArray.push(cardSummaryItem);\n        });\n        setCardSummaryList(cardSummaryArray);\n        \n        let timeOfUseArray = [];\n        json['reporting_period']['energy_category_ids'].forEach((currentValue, index) => {\n          if(currentValue == 1) {\n            // energy_category_id 1 electricity\n            let timeOfUseItem = {}\n            timeOfUseItem['id'] = 1;\n            timeOfUseItem['name'] =  t('Top-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['toppeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n            \n            timeOfUseItem = {}\n            timeOfUseItem['id'] = 2;\n            timeOfUseItem['name'] =  t('On-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['onpeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n\n            timeOfUseItem = {}\n            timeOfUseItem['id'] = 3;\n            timeOfUseItem['name'] =  t('Mid-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['midpeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n\n            timeOfUseItem = {}\n            timeOfUseItem['id'] = 4;\n            timeOfUseItem['name'] =  t('Off-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['offpeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n          }\n        });\n        setTimeOfUseShareData(timeOfUseArray);\n\n        \n        let totalInTCE = {}; \n        totalInTCE['value'] = json['reporting_period']['total_in_kgce'] / 1000; // convert from kg to t\n        totalInTCE['increment_rate'] = parseFloat(json['reporting_period']['increment_rate_in_kgce'] * 100).toFixed(2) + \"%\";\n        setTotalInTCE(totalInTCE);\n\n        let totalInTCO2E = {}; \n        totalInTCO2E['value'] = json['reporting_period']['total_in_kgco2e'] / 1000; // convert from kg to t\n        totalInTCO2E['increment_rate'] = parseFloat(json['reporting_period']['increment_rate_in_kgco2e'] * 100).toFixed(2) + \"%\";\n        setTotalInTCO2E(totalInTCO2E);\n\n        let TCEDataArray = [];\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let TCEDataItem = {}\n          TCEDataItem['id'] = index;\n          TCEDataItem['name'] = currentValue;\n          TCEDataItem['value'] = json['reporting_period']['subtotals_in_kgce'][index] / 1000; // convert from kg to t\n          TCEDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          TCEDataArray.push(TCEDataItem);\n        });\n        setTCEShareData(TCEDataArray);\n\n        let TCO2EDataArray = [];\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let TCO2EDataItem = {}\n          TCO2EDataItem['id'] = index;\n          TCO2EDataItem['name'] = currentValue;\n          TCO2EDataItem['value'] = json['reporting_period']['subtotals_in_kgco2e'][index] / 1000; // convert from kg to t\n          TCO2EDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          TCO2EDataArray.push(TCO2EDataItem);\n        });\n        setTCO2EShareData(TCO2EDataArray);\n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setEquipmentLineChartLabels(timestamps);\n        \n        let values = {}\n        json['reporting_period']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setEquipmentLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setEquipmentLineChartOptions(names);\n       \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n        \n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values'][energyCategoryIndex][timestampIndex].toFixed(2);\n            });\n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\n            detailed_value['a' + index] = currentValue.toFixed(2);\n          });\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        })\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          })\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n      \n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);\n        \n        } else {\n          toast.error(json.description)\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n  };\n  \n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'equipmentenergycategory.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Equipment Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Energy Category Data')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"equipmentSelect\">\n                    {t('Equipment')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"equipmentSelect\" name=\"equipmentSelect\" onChange={({ target }) => setSelectedEquipment(target.value)}\n                  >\n                    {equipmentList.map((equipment, index) => (\n                      <option value={equipment.value} key={equipment.value}>\n                        {equipment.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"card-deck\">\n        {cardSummaryList.map(cardSummaryItem => (\n          <CardSummary key={cardSummaryItem['name']}\n            rate={cardSummaryItem['increment_rate']}\n            title={t('Reporting Period Consumption CATEGORY UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" >\n            {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        ))}\n       \n        <CardSummary \n          rate={totalInTCE['increment_rate'] || ''} \n          title={t('Reporting Period Consumption CATEGORY UNIT', { 'CATEGORY': t('Ton of Standard Coal'), 'UNIT': '(TCE)' })}\n          color=\"warning\" >\n          {totalInTCE['value'] && <CountUp end={totalInTCE['value']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n        </CardSummary>\n        <CardSummary \n          rate={totalInTCO2E['increment_rate'] || ''} \n          title={t('Reporting Period Consumption CATEGORY UNIT', { 'CATEGORY': t('Ton of Carbon Dioxide Emissions'), 'UNIT': '(TCO2E)' })}\n          color=\"warning\" >\n          {totalInTCO2E['value'] && <CountUp end={totalInTCO2E['value']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n        </CardSummary>\n      </div>\n\n      <Row noGutters>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={timeOfUseShareData} title={t('Electricity Consumption by Time-Of-Use')} />\n        </Col>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={TCEShareData} title={t('Ton of Standard Coal by Energy Category')} />\n        </Col>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={TCO2EShareData} title={t('Ton of Carbon Dioxide Emissions by Energy Category')} />\n        </Col>\n      </Row>\n      <LineChart reportingTitle={t('Reporting Period Consumption CATEGORY VALUE UNIT', { 'CATEGORY': null, 'VALUE': null, 'UNIT': null })}\n        baseTitle=''\n        labels={equipmentLineChartLabels}\n        data={equipmentLineChartData}\n        options={equipmentLineChartOptions}>\n      </LineChart>\n\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(EquipmentEnergyCategory));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport SharePie from '../common/SharePie';\nimport LineChart from '../common/LineChart';\nimport loadable from '@loadable/component';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\nconst EquipmentEnergyItem = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [equipmentList, setEquipmentList] = useState([]);\n  const [selectedEquipment, setSelectedEquipment] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n\n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n  \n  //Results\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [sharePieList, setSharePieList] = useState([]);\n  const [equipmentLineChartLabels, setEquipmentLineChartLabels] = useState([]);\n  const [equipmentLineChartData, setEquipmentLineChartData] = useState({});\n  const [equipmentLineChartOptions, setEquipmentLineChartOptions] = useState([]);\n\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Equipments by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/equipments', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setEquipmentList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedEquipment(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedEquipment(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Equipments by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/equipments', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setEquipmentList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedEquipment(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedEquipment(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedEquipment);\n    console.log(comparisonType);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    \n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/equipmentenergyitem?' +\n      'equipmentid=' + selectedEquipment +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n        let cardSummaryArray = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['energy_category_name'] = json['reporting_period']['energy_category_names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals'][index];\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryArray.push(cardSummaryItem);\n        });\n        setCardSummaryList(cardSummaryArray);\n        \n        let sharePieDict = {}\n        let energyCategoryDict = {};\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let sharePieSubItem = {}\n          sharePieSubItem['id'] = index;\n          sharePieSubItem['name'] = json['reporting_period']['names'][index];\n          sharePieSubItem['value'] = json['reporting_period']['subtotals'][index];\n          sharePieSubItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          \n          let current_energy_category_id = json['reporting_period']['energy_category_ids'][index]\n          if (current_energy_category_id in sharePieDict) {\n            sharePieDict[current_energy_category_id].push(sharePieSubItem);\n          } else {\n            sharePieDict[current_energy_category_id] = [];\n            sharePieDict[current_energy_category_id].push(sharePieSubItem);\n          }\n\n          if (!(current_energy_category_id in energyCategoryDict)) {\n            energyCategoryDict[current_energy_category_id] = \n            {'name': json['reporting_period']['energy_category_names'][index],\n             'unit': json['reporting_period']['units'][index],\n            }\n          }\n        });\n        let sharePieArray = [];\n        for (let current_energy_category_id in sharePieDict) {\n          let sharePieItem = {}\n          sharePieItem['data'] = sharePieDict[current_energy_category_id];\n          sharePieItem['energy_category_name'] = energyCategoryDict[current_energy_category_id]['name'];\n          sharePieItem['unit'] = energyCategoryDict[current_energy_category_id]['unit'];\n          sharePieArray.push(sharePieItem);\n        }\n\n        setSharePieList(sharePieArray);\n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setEquipmentLineChartLabels(timestamps);\n        \n        let values = {}\n        json['reporting_period']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setEquipmentLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setEquipmentLineChartOptions(names);\n       \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n      \n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values'][energyCategoryIndex][timestampIndex].toFixed(2);\n            });\n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\n            detailed_value['a' + index] = currentValue.toFixed(2);\n          });\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        })\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          })\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n      \n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);\n        \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  \n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'equipmentenergyitem.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Equipment Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Energy Item Data')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"equipmentSelect\">\n                    {t('Equipment')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"equipmentSelect\" name=\"equipmentSelect\" onChange={({ target }) => setSelectedEquipment(target.value)}\n                  >\n                    {equipmentList.map((equipment, index) => (\n                      <option value={equipment.value} key={equipment.value}>\n                        {equipment.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"card-deck\">\n        {cardSummaryList.map(cardSummaryItem => (\n          <CardSummary key={cardSummaryItem['name']}\n            rate={cardSummaryItem['increment_rate']}\n            title={t('Reporting Period Consumption ITEM CATEGORY UNIT', { 'ITEM': cardSummaryItem['name'], 'CATEGORY': cardSummaryItem['energy_category_name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" >\n            {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        ))}\n      </div>\n      <Row noGutters>\n        {sharePieList.map(sharePieItem => (\n          <Col key={sharePieItem['energy_category_name']} className=\"mb-3 pr-lg-2 mb-3\">\n            <SharePie key={sharePieItem['energy_category_name']}\n              data={sharePieItem['data']} \n              title={t('CATEGORY UNIT Consumption by Energy Items', { 'CATEGORY': sharePieItem['energy_category_name'], 'UNIT': '(' + sharePieItem['unit'] + ')' })} />\n          </Col>\n        ))}\n      </Row>\n      <LineChart reportingTitle={t('Reporting Period Consumption ITEM CATEGORY VALUE UNIT', { 'ITEM': null, 'CATEGORY': null, 'VALUE': null, 'UNIT': null })}\n        baseTitle=''\n        labels={equipmentLineChartLabels}\n        data={equipmentLineChartData}\n        options={equipmentLineChartOptions}>\n      </LineChart>\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(EquipmentEnergyItem));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport SharePie from '../common/SharePie';\nimport LineChart from '../common/LineChart';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\nconst EquipmentIncome = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [equipmentList, setEquipmentList] = useState([]);\n  const [selectedEquipment, setSelectedEquipment] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n\n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n  \n  //Results\n  const [incomeShareData, setIncomeShareData] = useState([]);\n\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [equipmentLineChartLabels, setEquipmentLineChartLabels] = useState([]);\n  const [equipmentLineChartData, setEquipmentLineChartData] = useState({});\n  const [equipmentLineChartOptions, setEquipmentLineChartOptions] = useState([]);\n\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Equipments by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/equipments', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setEquipmentList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedEquipment(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedEquipment(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Equipments by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n  \n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/equipments', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setEquipmentList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedEquipment(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedEquipment(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedEquipment);\n    console.log(comparisonType);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/equipmentincome?' +\n      'equipmentid=' + selectedEquipment +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n\n        let cardSummaryArray = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals'][index];\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryArray.push(cardSummaryItem);\n        });\n        let cardSummaryItem = {}\n        cardSummaryItem['name'] = t('Total');\n        cardSummaryItem['unit'] = json['reporting_period']['total_unit'];\n        cardSummaryItem['subtotal'] = json['reporting_period']['total'];\n        cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['total_increment_rate'] * 100).toFixed(2) + \"%\";\n        cardSummaryArray.push(cardSummaryItem);\n        setCardSummaryList(cardSummaryArray);\n        \n        let incomeDataArray = [];\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let incomeDataItem = {}\n          incomeDataItem['id'] = index;\n          incomeDataItem['name'] = currentValue;\n          incomeDataItem['value'] = json['reporting_period']['subtotals'][index];\n          incomeDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          incomeDataArray.push(incomeDataItem);\n        });\n        setIncomeShareData(incomeDataArray);\n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setEquipmentLineChartLabels(timestamps);\n\n        let values = {}\n        json['reporting_period']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setEquipmentLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setEquipmentLineChartOptions(names);\n\n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n      \n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            let total_current_timstamp = 0.0;\n            json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values'][energyCategoryIndex][timestampIndex].toFixed(2);\n              total_current_timstamp += json['reporting_period']['values'][energyCategoryIndex][timestampIndex];\n            });\n            detailed_value['total'] = total_current_timstamp.toFixed(2);\n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        let total_of_subtotals = 0.0;\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\n            detailed_value['a' + index] = currentValue.toFixed(2);\n            total_of_subtotals += currentValue\n          });\n        detailed_value['total'] = total_of_subtotals.toFixed(2);\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        });\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          });\n        });\n        detailed_column_list.push({\n          dataField: 'total',\n          text: t('Total') + ' (' + json['reporting_period']['total_unit'] + ')',\n          sort: true\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);\n          \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  \n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'equipmentincome.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Equipment Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Income')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"equipmentSelect\">\n                    {t('Equipment')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"equipmentSelect\" name=\"equipmentSelect\" onChange={({ target }) => setSelectedEquipment(target.value)}\n                  >\n                    {equipmentList.map((equipment, index) => (\n                      <option value={equipment.value} key={equipment.value}>\n                        {equipment.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"card-deck\">\n        {cardSummaryList.map(cardSummaryItem => (\n          <CardSummary key={cardSummaryItem['name']}\n            rate={cardSummaryItem['increment_rate']}\n            title={t('Reporting Period Income CATEGORY UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" >\n            {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        ))}\n      </div>\n      <Row noGutters>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={incomeShareData} title={t('Incomes by Energy Category')} />\n        </Col>\n      </Row>\n      <LineChart reportingTitle={t('Reporting Period Income CATEGORY VALUE UNIT', { 'CATEGORY': null, 'VALUE': null, 'UNIT': null })}\n        baseTitle=''\n        labels={equipmentLineChartLabels}\n        data={equipmentLineChartData}\n        options={equipmentLineChartOptions}>\n      </LineChart>\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(EquipmentIncome));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\nconst EquipmentLoad = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [equipmentList, setEquipmentList] = useState([]);\n  const [selectedEquipment, setSelectedEquipment] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n  \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n  \n  //Results\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [equipmentLineChartLabels, setEquipmentLineChartLabels] = useState([]);\n  const [equipmentLineChartData, setEquipmentLineChartData] = useState({});\n  const [equipmentLineChartOptions, setEquipmentLineChartOptions] = useState([]);\n\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Equipments by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/equipments', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setEquipmentList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedEquipment(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedEquipment(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Equipments by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n  \n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/equipments', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setEquipmentList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedEquipment(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedEquipment(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedEquipment);\n    console.log(comparisonType);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/equipmentload?' +\n      'equipmentid=' + selectedEquipment +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n\n        let cardSummaryArray = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['average'] = json['reporting_period']['averages'][index];\n          cardSummaryItem['average_increment_rate'] = parseFloat(json['reporting_period']['averages_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['maximum'] = json['reporting_period']['maximums'][index];\n          cardSummaryItem['maximum_increment_rate'] = parseFloat(json['reporting_period']['maximums_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['factor'] = json['reporting_period']['factors'][index];\n          cardSummaryItem['factor_increment_rate'] = parseFloat(json['reporting_period']['factors_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryArray.push(cardSummaryItem);\n        });\n        setCardSummaryList(cardSummaryArray);\n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setEquipmentLineChartLabels(timestamps);\n        \n        let values = {}\n        json['reporting_period']['sub_maximums'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setEquipmentLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + '/H)'});\n        });\n        setEquipmentLineChartOptions(names);\n      \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n      \n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            json['reporting_period']['sub_averages'].forEach((currentValue, energyCategoryIndex) => {\n              if (json['reporting_period']['sub_averages'][energyCategoryIndex][timestampIndex] != null) {\n                detailed_value['a' + 2 * energyCategoryIndex] = json['reporting_period']['sub_averages'][energyCategoryIndex][timestampIndex].toFixed(2);\n              } else {\n                detailed_value['a' + 2 * energyCategoryIndex] = '';\n              };  \n            \n              if (json['reporting_period']['sub_maximums'][energyCategoryIndex][timestampIndex] != null) {\n                detailed_value['a' + (2 * energyCategoryIndex + 1)] = json['reporting_period']['sub_maximums'][energyCategoryIndex][timestampIndex].toFixed(2);\n              } else {\n                detailed_value['a' + (2 * energyCategoryIndex + 1)] = '';\n              };            \n            });\n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        })\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + 2 * index,\n            text: currentValue + ' ' + t('Average Load') + ' (' + unit + '/H)',\n            sort: true\n          });\n          detailed_column_list.push({\n            dataField: 'a' + (2 * index + 1),\n            text: currentValue + ' ' + t('Maximum Load') + ' (' + unit + '/H)',\n            sort: true\n          });\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);\n          \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  \n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'equipmentload.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Equipment Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Load')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"equipmentSelect\">\n                    {t('Equipment')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"equipmentSelect\" name=\"equipmentSelect\" onChange={({ target }) => setSelectedEquipment(target.value)}\n                  >\n                    {equipmentList.map((equipment, index) => (\n                      <option value={equipment.value} key={equipment.value}>\n                        {equipment.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      {cardSummaryList.map(cardSummaryItem => (\n        <div className=\"card-deck\" key={cardSummaryItem['name']}>\n          <CardSummary key={cardSummaryItem['name'] + 'average'}\n            rate={cardSummaryItem['average_increment_rate']}\n            title={t('Reporting Period CATEGORY Average Load UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + '/H)' })}\n            color=\"success\" >\n            {cardSummaryItem['average'] && <CountUp end={cardSummaryItem['average']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'maximum'}\n            rate={cardSummaryItem['maximum_increment_rate']}\n            title={t('Reporting Period CATEGORY Maximum Load UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + '/H)' })}\n            color=\"success\" >\n            {cardSummaryItem['maximum'] && <CountUp end={cardSummaryItem['maximum']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'factor'}\n            rate={cardSummaryItem['factor_increment_rate']}\n            title={t('Reporting Period CATEGORY Load Factor', { 'CATEGORY': cardSummaryItem['name'] })}\n            color=\"success\" \n            footnote={t('Ratio of Average Load to Maximum Load')} >\n            {cardSummaryItem['factor'] && <CountUp end={cardSummaryItem['factor']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        </div>\n      ))}\n      <LineChart reportingTitle={t('Reporting Period CATEGORY Maximum Load UNIT', { 'CATEGORY': null, 'UNIT': null })}\n        baseTitle=''\n        labels={equipmentLineChartLabels}\n        data={equipmentLineChartData}\n        options={equipmentLineChartOptions}>\n      </LineChart>\n\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(EquipmentLoad));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\nconst EquipmentOutput = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [equipmentList, setEquipmentList] = useState([]);\n  const [selectedEquipment, setSelectedEquipment] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n  \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n  \n  //Results\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [equipmentLineChartLabels, setEquipmentLineChartLabels] = useState([]);\n  const [equipmentLineChartData, setEquipmentLineChartData] = useState({});\n  const [equipmentLineChartOptions, setEquipmentLineChartOptions] = useState([]);\n\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Equipments by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/equipments', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setEquipmentList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedEquipment(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedEquipment(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Equipments by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/equipments', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setEquipmentList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedEquipment(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedEquipment(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedEquipment);\n    console.log(comparisonType);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/equipmentoutput?' +\n      'equipmentid=' + selectedEquipment +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n        let cardSummaryArray = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals'][index];\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryArray.push(cardSummaryItem);\n        });\n        setCardSummaryList(cardSummaryArray);\n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setEquipmentLineChartLabels(timestamps);\n        \n        let values = {}\n        json['reporting_period']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setEquipmentLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setEquipmentLineChartOptions(names);\n       \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n      \n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values'][energyCategoryIndex][timestampIndex].toFixed(2);\n            });\n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\n            detailed_value['a' + index] = currentValue.toFixed(2);\n          });\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        })\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          })\n        });\n        setDetailedDataTableColumns(detailed_column_list);  \n        \n        setExcelBytesBase64(json['excel_bytes_base64']);   \n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);    \n\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  \n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'equipmentoutput.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Equipment Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Output')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"equipmentSelect\">\n                    {t('Equipment')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"equipmentSelect\" name=\"equipmentSelect\" onChange={({ target }) => setSelectedEquipment(target.value)}\n                  >\n                    {equipmentList.map((equipment, index) => (\n                      <option value={equipment.value} key={equipment.value}>\n                        {equipment.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"card-deck\">\n        {cardSummaryList.map(cardSummaryItem => (\n          <CardSummary key={cardSummaryItem['name']}\n            rate={cardSummaryItem['increment_rate']}\n            title={t('Reporting Period Output CATEGORY UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" >\n            {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        ))}\n      </div>\n      <LineChart reportingTitle={t('Reporting Period Output CATEGORY VALUE UNIT', { 'CATEGORY': null, 'VALUE': null, 'UNIT': null })}\n        baseTitle=''\n        labels={equipmentLineChartLabels}\n        data={equipmentLineChartData}\n        options={equipmentLineChartOptions}>\n      </LineChart>\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(EquipmentOutput));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport SharePie from '../common/SharePie';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\nconst EquipmentSaving = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [equipmentList, setEquipmentList] = useState([]);\n  const [selectedEquipment, setSelectedEquipment] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n\n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n  \n  //Results\n  const [TCEShareData, setTCEShareData] = useState([]);\n  const [TCO2EShareData, setTCO2EShareData] = useState([]);\n  \n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [totalInTCE, setTotalInTCE] = useState({});\n  const [totalInTCO2E, setTotalInTCO2E] = useState({});\n  const [equipmentLineChartLabels, setEquipmentLineChartLabels] = useState([]);\n  const [equipmentLineChartData, setEquipmentLineChartData] = useState({});\n  const [equipmentLineChartOptions, setEquipmentLineChartOptions] = useState([]);\n\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Equipments by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/equipments', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setEquipmentList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedEquipment(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedEquipment(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Equipments by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n  \n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  \n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/equipments', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setEquipmentList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedEquipment(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedEquipment(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedEquipment);\n    console.log(comparisonType);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/equipmentsaving?' +\n      'equipmentid=' + selectedEquipment +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n        \n        let cardSummaryArray = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals_saving'][index];\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates_saving'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryArray.push(cardSummaryItem);\n        });\n        setCardSummaryList(cardSummaryArray);\n\n        let totalInTCE = {}; \n        totalInTCE['value'] = json['reporting_period']['total_in_kgce_saving'] / 1000; // convert from kg to t\n        totalInTCE['increment_rate'] = parseFloat(json['reporting_period']['increment_rate_in_kgce_saving'] * 100).toFixed(2) + \"%\";\n        setTotalInTCE(totalInTCE);\n\n        let totalInTCO2E = {}; \n        totalInTCO2E['value'] = json['reporting_period']['total_in_kgco2e_saving'] / 1000; // convert from kg to t\n        totalInTCO2E['increment_rate'] = parseFloat(json['reporting_period']['increment_rate_in_kgco2e_saving'] * 100).toFixed(2) + \"%\";\n        setTotalInTCO2E(totalInTCO2E);\n\n        let TCEDataArray = [];\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let TCEDataItem = {}\n          TCEDataItem['id'] = index;\n          TCEDataItem['name'] = currentValue;\n          TCEDataItem['value'] = json['reporting_period']['subtotals_in_kgce_saving'][index] / 1000; // convert from kg to t\n          TCEDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          TCEDataArray.push(TCEDataItem);\n        });\n        setTCEShareData(TCEDataArray);\n\n        let TCO2EDataArray = [];\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let TCO2EDataItem = {}\n          TCO2EDataItem['id'] = index;\n          TCO2EDataItem['name'] = currentValue;\n          TCO2EDataItem['value'] = json['reporting_period']['subtotals_in_kgco2e_saving'][index] / 1000; // convert from kg to t\n          TCO2EDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          TCO2EDataArray.push(TCO2EDataItem);\n        });\n        setTCO2EShareData(TCO2EDataArray);\n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setEquipmentLineChartLabels(timestamps);\n        \n        let values = {}\n        json['reporting_period']['values_saving'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setEquipmentLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setEquipmentLineChartOptions(names);\n       \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n        \n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            json['reporting_period']['values_saving'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values_saving'][energyCategoryIndex][timestampIndex].toFixed(2);\n            });\n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        json['reporting_period']['subtotals_saving'].forEach((currentValue, index) => {\n            detailed_value['a' + index] = currentValue.toFixed(2);\n          });\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        });\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          });\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);\n        \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  \n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'equipmentsaving.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Equipment Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Saving')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"equipmentSelect\">\n                    {t('Equipment')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"equipmentSelect\" name=\"equipmentSelect\" onChange={({ target }) => setSelectedEquipment(target.value)}\n                  >\n                    {equipmentList.map((equipment, index) => (\n                      <option value={equipment.value} key={equipment.value}>\n                        {equipment.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"card-deck\">\n        {cardSummaryList.map(cardSummaryItem => (\n          <CardSummary key={cardSummaryItem['name']}\n            rate={cardSummaryItem['increment_rate']}\n            title={t('Reporting Period Savings CATEGORY (Baseline - Actual) UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" >\n            {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        ))}\n       \n        <CardSummary \n          rate={totalInTCE['increment_rate'] || ''} \n          title={t('Reporting Period Savings CATEGORY (Baseline - Actual) UNIT', { 'CATEGORY': t('Ton of Standard Coal'), 'UNIT': '(TCE)' })}\n          color=\"warning\" >\n          {totalInTCE['value'] && <CountUp end={totalInTCE['value']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n        </CardSummary>\n        <CardSummary \n          rate={totalInTCO2E['increment_rate'] || ''} \n          title={t('Reporting Period Decreased CATEGORY (Baseline - Actual) UNIT', { 'CATEGORY': t('Ton of Carbon Dioxide Emissions'), 'UNIT': '(TCO2E)' })}\n          color=\"warning\" >\n          {totalInTCO2E['value'] && <CountUp end={totalInTCO2E['value']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n        </CardSummary>\n      </div>\n      <Row noGutters>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={TCEShareData} title={t('Ton of Standard Coal by Energy Category')} />\n        </Col>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={TCO2EShareData} title={t('Ton of Carbon Dioxide Emissions by Energy Category')} />\n        </Col>\n      </Row>\n      <LineChart reportingTitle={t('Reporting Period Savings CATEGORY VALUE UNIT', { 'CATEGORY': null, 'VALUE': null, 'UNIT': null })}\n        baseTitle=''\n        labels={equipmentLineChartLabels}\n        data={equipmentLineChartData}\n        options={equipmentLineChartOptions}>\n      </LineChart>\n\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(EquipmentSaving));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\nconst EquipmentStatistics = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  \n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [equipmentList, setEquipmentList] = useState([]);\n  const [selectedEquipment, setSelectedEquipment] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n\n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n  //Results\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [equipmentLineChartLabels, setEquipmentLineChartLabels] = useState([]);\n  const [equipmentLineChartData, setEquipmentLineChartData] = useState({});\n  const [equipmentLineChartOptions, setEquipmentLineChartOptions] = useState([]);\n\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Equipments by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/equipments', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setEquipmentList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedEquipment(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedEquipment(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Equipments by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n  \n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  \n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/equipments', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setEquipmentList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedEquipment(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedEquipment(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedEquipment);\n    console.log(comparisonType);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/equipmentstatistics?' +\n      'equipmentid=' + selectedEquipment +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n        \n        let cardSummaryArray = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['mean'] = json['reporting_period']['means'][index];\n          cardSummaryItem['mean_increment_rate'] = parseFloat(json['reporting_period']['means_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['median'] = json['reporting_period']['medians'][index];\n          cardSummaryItem['median_increment_rate'] = parseFloat(json['reporting_period']['medians_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['minimum'] = json['reporting_period']['minimums'][index];\n          cardSummaryItem['minimum_increment_rate'] = parseFloat(json['reporting_period']['minimums_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['maximum'] = json['reporting_period']['maximums'][index];\n          cardSummaryItem['maximum_increment_rate'] = parseFloat(json['reporting_period']['maximums_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['stdev'] = json['reporting_period']['stdevs'][index];\n          cardSummaryItem['stdev_increment_rate'] = parseFloat(json['reporting_period']['stdevs_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['variance'] = json['reporting_period']['variances'][index];\n          cardSummaryItem['variance_increment_rate'] = parseFloat(json['reporting_period']['variances_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryArray.push(cardSummaryItem);\n        });\n        setCardSummaryList(cardSummaryArray);\n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setEquipmentLineChartLabels(timestamps);\n        \n        let values = {}\n        json['reporting_period']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setEquipmentLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setEquipmentLineChartOptions(names);\n      \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n      \n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values'][energyCategoryIndex][timestampIndex].toFixed(2);\n            });\n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\n            detailed_value['a' + index] = currentValue.toFixed(2);\n          });\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        })\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          })\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);\n          \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  \n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'equipmentstatistics.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Equipment Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Statistics')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"equipmentSelect\">\n                    {t('Equipment')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"equipmentSelect\" name=\"equipmentSelect\" onChange={({ target }) => setSelectedEquipment(target.value)}\n                  >\n                    {equipmentList.map((equipment, index) => (\n                      <option value={equipment.value} key={equipment.value}>\n                        {equipment.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      {cardSummaryList.map(cardSummaryItem => (\n        <div className=\"card-deck\" key={cardSummaryItem['name']}>\n          <CardSummary key={cardSummaryItem['name'] + 'mean'}\n            rate={cardSummaryItem['mean_increment_rate']}\n            title={t('Reporting Period CATEGORY Mean UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" >\n            {cardSummaryItem['mean'] && <CountUp end={cardSummaryItem['mean']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'median'}\n            rate={cardSummaryItem['median_increment_rate']}\n            title={t('Reporting Period CATEGORY Median UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" >\n            {cardSummaryItem['median'] && <CountUp end={cardSummaryItem['median']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'minimum'}\n            rate={cardSummaryItem['minimum_increment_rate']}\n            title={t('Reporting Period CATEGORY Minimum UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" >\n            {cardSummaryItem['minimum'] && <CountUp end={cardSummaryItem['minimum']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'maximum'}\n            rate={cardSummaryItem['maximum_increment_rate']}\n            title={t('Reporting Period CATEGORY Maximum UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" >\n            {cardSummaryItem['maximum'] && <CountUp end={cardSummaryItem['maximum']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'stdev'}\n            rate={cardSummaryItem['stdev_increment_rate']}\n            title={t('Reporting Period CATEGORY Stdev UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" >\n            {cardSummaryItem['stdev'] && <CountUp end={cardSummaryItem['stdev']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'variance'}\n            rate={cardSummaryItem['variance_increment_rate']}\n            title={t('Reporting Period CATEGORY Variance UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" >\n            {cardSummaryItem['variance'] && <CountUp end={cardSummaryItem['variance']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        </div>\n      ))}\n      <LineChart reportingTitle={t('Reporting Period Consumption CATEGORY VALUE UNIT', { 'CATEGORY': null, 'VALUE': null, 'UNIT': null })}\n        baseTitle=''\n        labels={equipmentLineChartLabels}\n        data={equipmentLineChartData}\n        options={equipmentLineChartOptions}>\n      </LineChart>\n\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(EquipmentStatistics));\n","import React, { createRef, Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Card,\n  CardBody,\n  Col,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Media,\n  Row,\n  UncontrolledDropdown,\n  Spinner,\n} from 'reactstrap';\nimport uuid from 'uuid/v1';\nimport Cascader from 'rc-cascader';\nimport loadable from '@loadable/component';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\nimport Flex from '../../common/Flex';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\n\n\nconst EquipmentTracking = ({ setRedirect, setRedirectUrl, t }) => {\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  let table = createRef();\n \n  // State\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n  const [equipmentList, setEquipmentList] = useState([]);\n  const [spinnerHidden, setSpinnerHidden] = useState(false);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json)\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        let selectedSpaceID  = [json[0]].map(o => o.value);\n        // begin of getting equipment list\n        let isSecondResponseOK = false;\n        fetch(APIBaseURL + '/reports/equipmenttracking?' +\n          'spaceid=' + selectedSpaceID, {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isSecondResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isSecondResponseOK) {\n            let json_equipments = JSON.parse(JSON.stringify([json['equipments']]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json)\n            let equipments = [];\n            json_equipments[0].forEach((currentValue, index) => {\n              equipments.push({\n                'key': index,\n                'id': currentValue['id'],\n                'name': currentValue['equipment_name'],\n                'space': currentValue['space_name'],\n                'costcenter': currentValue['cost_center_name'],\n                'description': currentValue['description']});\n            });\n            setEquipmentList(equipments);\n\n            setExcelBytesBase64(json['excel_bytes_base64']);\n            \n            // hide spinner\n            setSpinnerHidden(true);\n            // show export buttion\n            setExportButtonHidden(false);\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of getting equipment list\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n  const DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\n  const nameFormatter = (dataField, { name }) => (\n    <Link to=\"#\">\n      <Media tag={Flex} align=\"center\">\n        <Media body className=\"ml-2\">\n          <h5 className=\"mb-0 fs--1\">{name}</h5>\n        </Media>\n      </Media>\n    </Link>\n  );\n\n  const actionFormatter = (dataField, { id }) => (\n    // Control your row with this id\n    <UncontrolledDropdown>\n      <DropdownToggle color=\"link\" size=\"sm\" className=\"text-600 btn-reveal mr-3\">\n        <FontAwesomeIcon icon=\"ellipsis-h\" className=\"fs--1\" />\n      </DropdownToggle>\n      <DropdownMenu right className=\"border py-2\">\n      <DropdownItem onClick={() => console.log('Edit: ', id)}>{t('Edit Equipment')}</DropdownItem>\n      </DropdownMenu>\n    </UncontrolledDropdown>\n  );\n\n  const columns = [\n    {\n      key: \"a0\",\n      dataField: 'equipmentname',\n      headerClasses: 'border-0',\n      text: t('Name'),\n      classes: 'border-0 py-2 align-middle',\n      formatter: nameFormatter,\n      sort: true\n    },\n    {\n      key: \"a1\",\n      dataField: 'space',\n      headerClasses: 'border-0',\n      text: t('Space'),\n      classes: 'border-0 py-2 align-middle',\n      sort: true\n    },\n    {\n      key: \"a2\",\n      dataField: 'costcenter',\n      headerClasses: 'border-0',\n      text: t('Cost Center'),\n      classes: 'border-0 py-2 align-middle',\n      sort: true\n    },\n    {\n      key: \"a3\",\n      dataField: 'description',\n      headerClasses: 'border-0',\n      text: t('Description'),\n      classes: 'border-0 py-2 align-middle',\n      sort: true\n    },\n    {\n      key: \"a4\",\n      dataField: '',\n      headerClasses: 'border-0',\n      text: '',\n      classes: 'border-0 py-2 align-middle',\n      formatter: actionFormatter,\n      align: 'right'\n    }\n  ];\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    let selectedSpaceID = value[value.length - 1];\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true) \n    // begin of getting equipment list\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/equipmenttracking?' +\n      'spaceid=' + selectedSpaceID, {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        let json_equipments = JSON.parse(JSON.stringify([json['equipments']]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        let equipments = [];\n        json_equipments[0].forEach((currentValue, index) => {\n          equipments.push({\n            'key': index,\n            'id': currentValue['id'],\n            'name': currentValue['equipment_name'],\n            'space': currentValue['space_name'],\n            'costcenter': currentValue['cost_center_name'],\n            'description': currentValue['description']});\n        });\n        setEquipmentList(equipments);\n\n        setExcelBytesBase64(json['excel_bytes_base64']);\n        \n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n    // end of getting equipment list\n  }\n\n\n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'equipmenttracking.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Equipment Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Equipment Tracking')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form >\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <DetailedDataTable data={equipmentList} title={t('Equipment List')} columns={columns} pagesize={10} >\n      </DetailedDataTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(EquipmentTracking));\n","import React from 'react';\nimport { Col, Row, Spinner } from 'reactstrap';\n\nconst Loader = props => (\n  <Row className=\"flex-center py-5\">\n    <Col xs=\"auto\">\n      <Spinner {...props} />\n    </Col>\n  </Row>\n);\n\nLoader.propTypes = { ...Spinner.propTypes };\n\nLoader.defaultProps = {\n  type: 'grow',\n  size: 'lg',\n  color: 'primary'\n};\n\nexport default Loader;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Loader from '../../common/Loader';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\nconst MeterEnergy = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n\n  // State\n  //Query From\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [meterList, setMeterList] = useState([]);\n  const [filteredMeterList, setFilteredMeterList] = useState([]);\n  const [selectedMeter, setSelectedMeter] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n\n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n  const [loading, setLoading] = useState(false);\n  //Results\n  const [meterEnergyCategory, setMeterEnergyCategory] = useState({ 'name': '', 'unit': '' });\n  const [reportingPeriodEnergyConsumptionInCategory, setReportingPeriodEnergyConsumptionInCategory] = useState(0);\n  const [reportingPeriodEnergyConsumptionRate, setReportingPeriodEnergyConsumptionRate] = useState('');\n  const [reportingPeriodEnergyConsumptionInTCE, setReportingPeriodEnergyConsumptionInTCE] = useState(0);\n  const [reportingPeriodEnergyConsumptionInCO2, setReportingPeriodEnergyConsumptionInCO2] = useState(0);\n  const [basePeriodEnergyConsumptionInCategory, setBasePeriodEnergyConsumptionInCategory] = useState(0);\n  const [meterLineChartOptions, setMeterLineChartOptions] = useState([]);\n  const [meterLineChartData, setMeterLineChartData] = useState({});\n  const [meterLineChartLabels, setMeterLineChartLabels] = useState([]);\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n\n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Meters by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/meters', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setMeterList(json[0]);\n            setFilteredMeterList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedMeter(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedMeter(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Meters by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, [t,]);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/meters', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setMeterList(json[0]);\n        setFilteredMeterList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedMeter(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedMeter(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  };\n\n  const onSearchMeter = ({ target }) => {\n    const keyword = target.value.toLowerCase();\n    const filteredResult = meterList.filter(\n      meter => meter.label.toLowerCase().includes(keyword)\n    );\n    setFilteredMeterList(keyword.length ? filteredResult : meterList);\n    if (filteredResult.length > 0) {\n      setSelectedMeter(filteredResult[0].value);\n      // enable submit button\n      setSubmitButtonDisabled(false);\n    } else {\n      setSelectedMeter(undefined);\n      // disable submit button\n      setSubmitButtonDisabled(true);\n    };\n  };\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  };\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  };\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  };\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  };\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  };\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  };\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  };\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  };\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedMeter);\n    console.log(comparisonType);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);  \n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/meterenergy?' +\n      'meterid=' + selectedMeter +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n        setMeterEnergyCategory({\n          'name': json['meter']['energy_category_name'],\n          'unit': json['meter']['unit_of_measure']\n        });\n        setReportingPeriodEnergyConsumptionRate(parseFloat(json['reporting_period']['increment_rate'] * 100).toFixed(2) + \"%\");\n        setReportingPeriodEnergyConsumptionInCategory(json['reporting_period']['total_in_category']);\n        setReportingPeriodEnergyConsumptionInTCE(json['reporting_period']['total_in_kgce'] / 1000);\n        setReportingPeriodEnergyConsumptionInCO2(json['reporting_period']['total_in_kgco2e'] / 1000);\n        setBasePeriodEnergyConsumptionInCategory(json['base_period']['total_in_category']);\n\n        let names = Array();\n        names.push({ 'value': 'a0', 'label': json['meter']['energy_category_name'] });\n        setMeterLineChartOptions(names);\n        \n        let timestamps = {}\n        timestamps['a0'] = json['reporting_period']['timestamps'];\n        setMeterLineChartLabels(timestamps);\n\n        let values = {'a0':[]}\n        json['reporting_period']['values'].forEach((currentValue, index) => {\n          values['a0'][index] = currentValue.toFixed(2);\n        });\n        setMeterLineChartData(values)\n\n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n        \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n\n        setDetailedDataTableColumns([{\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        }, {\n          dataField: 'a0',\n          text: json['meter']['energy_category_name'] + ' (' + json['meter']['unit_of_measure'] + ')',\n          sort: true\n        }]);\n\n        let detailed_value_list = [];\n        json['reporting_period']['timestamps'].forEach((currentTimestamp, timestampIndex) => {\n          let detailed_value = {};\n          detailed_value['id'] = timestampIndex;\n          detailed_value['startdatetime'] = currentTimestamp;\n          detailed_value['a0'] = json['reporting_period']['values'][timestampIndex].toFixed(2);\n          detailed_value_list.push(detailed_value);\n        });\n        \n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Total');\n        detailed_value['a0'] = json['reporting_period']['total_in_category'].toFixed(2);\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);\n        \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'meterenergy.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Meter Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Meter Energy')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form >\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"meterSelect\">\n                    {t('Meter')}\n                  </Label>\n                  \n                  <Form inline>\n                      <Input placeholder={t('Search')} onChange={onSearchMeter} />\n                      <CustomInput type=\"select\" id=\"meterSelect\" name=\"meterSelect\" onChange={({ target }) => setSelectedMeter(target.value)}\n                      >\n                        {filteredMeterList.map((meter, index) => (\n                          <option value={meter.value} key={meter.value}>\n                            {meter.label}\n                          </option>\n                        ))}\n                      </CustomInput>\n                  </Form>\n                  \n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <Fragment>\n\n        <div className=\"card-deck\">\n\n          <CardSummary rate={reportingPeriodEnergyConsumptionRate} title={t('Reporting Period Consumption CATEGORY UNIT', { 'CATEGORY': meterEnergyCategory['name'], 'UNIT': '(' + meterEnergyCategory['unit'] + ')' })}\n            color=\"success\"  >\n            <CountUp end={reportingPeriodEnergyConsumptionInCategory} duration={2} prefix=\"\" separator=\",\" decimals={2} decimal=\".\" />\n          </CardSummary>\n\n          <CardSummary rate={reportingPeriodEnergyConsumptionRate} title={t('Reporting Period Consumption CATEGORY UNIT', { 'CATEGORY': t('Ton of Standard Coal'), 'UNIT': '(TCE)' })}\n            color=\"warning\" >\n            <CountUp end={reportingPeriodEnergyConsumptionInTCE} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />\n          </CardSummary>\n          <CardSummary rate={reportingPeriodEnergyConsumptionRate} title={t('Reporting Period Consumption CATEGORY UNIT', { 'CATEGORY': t('Ton of Carbon Dioxide Emissions'), 'UNIT': '(T)' })}\n            color=\"warning\" >\n            <CountUp end={reportingPeriodEnergyConsumptionInCO2} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />\n          </CardSummary>\n\n        </div>\n\n        <LineChart reportingTitle={t('Reporting Period Consumption CATEGORY VALUE UNIT', { 'CATEGORY': meterEnergyCategory['name'], 'VALUE': reportingPeriodEnergyConsumptionInCategory.toFixed(2), 'UNIT': '(' + meterEnergyCategory['unit'] + ')' })}\n          baseTitle={t('Base Period Consumption CATEGORY VALUE UNIT', { 'CATEGORY': meterEnergyCategory['name'], 'VALUE': basePeriodEnergyConsumptionInCategory.toFixed(2), 'UNIT': '(' + meterEnergyCategory['unit'] + ')' })}\n          labels={meterLineChartLabels}\n          data={meterLineChartData}\n          options={meterLineChartOptions}>\n        </LineChart>\n\n        <LineChart reportingTitle={t('Related Parameters')}\n          baseTitle=''\n          labels={parameterLineChartLabels}\n          data={parameterLineChartData}\n          options={parameterLineChartOptions}>\n        </LineChart>\n        <br />\n        <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n        </DetailedDataTable>\n\n      </Fragment>\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(MeterEnergy));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\nconst MeterCost = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n\n  // State\n  //Query From\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [meterList, setMeterList] = useState([]);\n  const [filteredMeterList, setFilteredMeterList] = useState([]);\n  const [selectedMeter, setSelectedMeter] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n\n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n  \n  //Results\n  const [meterEnergyCategory, setMeterEnergyCategory] = useState({ 'name': '', 'unit': '' });\n  const [reportingPeriodEnergyCostInCategory, setReportingPeriodEnergyCostInCategory] = useState(0);\n  const [reportingPeriodEnergyCostRate, setReportingPeriodEnergyCostRate] = useState('');\n  const [reportingPeriodEnergyConsumptionInTCE, setReportingPeriodEnergyConsumptionInTCE] = useState(0);\n  const [reportingPeriodEnergyConsumptionInCO2, setReportingPeriodEnergyConsumptionInCO2] = useState(0);\n  const [basePeriodEnergyCostInCategory, setBasePeriodEnergyCostInCategory] = useState(0);\n  const [meterLineChartOptions, setMeterLineChartOptions] = useState([]);\n  const [meterLineChartData, setMeterLineChartData] = useState({});\n  const [meterLineChartLabels, setMeterLineChartLabels] = useState([]);\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n\n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Meters by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/meters', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setMeterList(json[0]);\n            setFilteredMeterList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedMeter(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedMeter(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Meters by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [t, ]);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/meters', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setMeterList(json[0]);\n        setFilteredMeterList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedMeter(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedMeter(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const onSearchMeter = ({ target }) => {\n    const keyword = target.value.toLowerCase();\n    const filteredResult = meterList.filter(\n      meter => meter.label.toLowerCase().includes(keyword)\n    );\n    setFilteredMeterList(keyword.length ? filteredResult : meterList);\n    if (filteredResult.length > 0) {\n      setSelectedMeter(filteredResult[0].value);\n      // enable submit button\n      setSubmitButtonDisabled(false);\n    } else {\n      setSelectedMeter(undefined);\n      // disable submit button\n      setSubmitButtonDisabled(true);\n    };\n  };\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  };\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  };\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  };\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  };\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  };\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  };\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  };\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  };\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  };\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedMeter);\n    console.log(comparisonType);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);  \n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/metercost?' +\n      'meterid=' + selectedMeter +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n        setMeterEnergyCategory({\n          'name': json['meter']['energy_category_name'],\n          'unit': json['meter']['unit_of_measure']\n        });\n        setReportingPeriodEnergyCostRate(parseFloat(json['reporting_period']['increment_rate']*100).toFixed(2) + \"%\");\n        setReportingPeriodEnergyCostInCategory(json['reporting_period']['total_in_category']);\n        setReportingPeriodEnergyConsumptionInTCE(json['reporting_period']['total_in_kgce'] / 1000);\n        setReportingPeriodEnergyConsumptionInCO2(json['reporting_period']['total_in_kgco2e'] / 1000);\n        setBasePeriodEnergyCostInCategory(json['base_period']['total_in_category']);\n\n        let names = Array();\n        names.push({ 'value': 'a0', 'label': json['meter']['energy_category_name'] });\n        setMeterLineChartOptions(names);\n\n        let timestamps =  { 'a0': [] }\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a0'][index] = currentValue;\n        });\n        setMeterLineChartLabels(timestamps);\n\n        let values = {'a0':[]}\n        json['reporting_period']['values'].forEach((currentValue, index) => {\n          values['a0'][index] = currentValue.toFixed(2);\n        });\n        setMeterLineChartData(values)\n\n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n\n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n\n        setDetailedDataTableColumns([{\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        }, {\n          dataField: 'a0',\n          text: json['meter']['energy_category_name'] + ' (' + json['meter']['unit_of_measure'] + ')',\n          sort: true\n        }]);\n\n        let detailed_value_list = [];\n        json['reporting_period']['timestamps'].forEach((currentTimestamp, timestampIndex) => {\n          let detailed_value = {};\n          detailed_value['id'] = timestampIndex;\n          detailed_value['startdatetime'] = currentTimestamp;\n          detailed_value['a0'] = json['reporting_period']['values'][timestampIndex].toFixed(2);\n          detailed_value_list.push(detailed_value);\n        });\n        \n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Total');\n        detailed_value['a0'] = json['reporting_period']['total_in_category'].toFixed(2);\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);\n          \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  \n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'metercost.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Meter Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Meter Cost')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form >\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"meterSelect\">\n                    {t('Meter')}\n                  </Label>\n                  <Form inline>\n                      <Input placeholder={t('Search')} onChange={onSearchMeter} />\n                      <CustomInput type=\"select\" id=\"meterSelect\" name=\"meterSelect\" onChange={({ target }) => setSelectedMeter(target.value)}\n                      >\n                        {filteredMeterList.map((meter, index) => (\n                          <option value={meter.value} key={meter.value}>\n                            {meter.label}\n                          </option>\n                        ))}\n                      </CustomInput>\n                  </Form>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"card-deck\">\n        <CardSummary rate={reportingPeriodEnergyCostRate} title={t('Reporting Period Costs CATEGORY UNIT', { 'CATEGORY': meterEnergyCategory['name'], 'UNIT': '(' + meterEnergyCategory['unit'] + ')' })}\n          color=\"success\"  >\n          <CountUp end={reportingPeriodEnergyCostInCategory} duration={2} prefix=\"\" separator=\",\" decimals={2} decimal=\".\" />\n        </CardSummary>\n        <CardSummary rate={reportingPeriodEnergyCostRate} title={t('Reporting Period Consumption CATEGORY UNIT', { 'CATEGORY': t('Ton of Standard Coal'), 'UNIT': '(TCE)' })}\n          color=\"warning\" >\n          <CountUp end={reportingPeriodEnergyConsumptionInTCE} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />\n        </CardSummary>\n        <CardSummary rate={reportingPeriodEnergyCostRate} title={t('Reporting Period Consumption CATEGORY UNIT', { 'CATEGORY': t('Ton of Carbon Dioxide Emissions'), 'UNIT': '(T)' })}\n          color=\"warning\" >\n          <CountUp end={reportingPeriodEnergyConsumptionInCO2} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />\n        </CardSummary>\n      </div>\n\n      <LineChart reportingTitle={t('Reporting Period Costs CATEGORY VALUE UNIT', { 'CATEGORY': meterEnergyCategory['name'], 'VALUE': reportingPeriodEnergyCostInCategory.toFixed(2), 'UNIT': '(' + meterEnergyCategory['unit'] + ')' })}\n        baseTitle={t('Base Period Costs CATEGORY VALUE UNIT', { 'CATEGORY': meterEnergyCategory['name'], 'VALUE': basePeriodEnergyCostInCategory.toFixed(2), 'UNIT': '(' + meterEnergyCategory['unit'] + ')' })}\n        labels={meterLineChartLabels}\n        data={meterLineChartData}\n        options={meterLineChartOptions}>\n      </LineChart>\n\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(MeterCost));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport LineChart from '../common/LineChart';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\nconst MeterTrend = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n\n  // State\n  //Query From\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [meterList, setMeterList] = useState([]);\n  const [filteredMeterList, setFilteredMeterList] = useState([]);\n  const [selectedMeter, setSelectedMeter] = useState(undefined);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('day'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n\n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n  //Results\n  const [meterLineChartOptions, setMeterLineChartOptions] = useState([]);\n  const [meterLineChartData, setMeterLineChartData] = useState({});\n  const [meterLineChartLabels, setMeterLineChartLabels] = useState([]);\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n\n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Meters by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/meters', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setMeterList(json[0]);\n            setFilteredMeterList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedMeter(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedMeter(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Meters by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/meters', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setMeterList(json[0]);\n        setFilteredMeterList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedMeter(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedMeter(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  \n  const onSearchMeter = ({ target }) => {\n    const keyword = target.value.toLowerCase();\n    const filteredResult = meterList.filter(\n      meter => meter.label.toLowerCase().includes(keyword)\n    );\n    setFilteredMeterList(keyword.length ? filteredResult : meterList);\n    if (filteredResult.length > 0) {\n      setSelectedMeter(filteredResult[0].value);\n      // enable submit button\n      setSubmitButtonDisabled(false);\n    } else {\n      setSelectedMeter(undefined);\n      // disable submit button\n      setSubmitButtonDisabled(true);\n    };\n  };\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n  };\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n  };\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedMeter);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true); \n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true) \n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/metertrend?' +\n      'meterid=' + selectedMeter +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setMeterLineChartOptions(names);\n\n        let timestamps =  {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setMeterLineChartLabels(timestamps);\n\n        let values = {};\n        json['reporting_period']['values'].forEach((currentValue, index) => {\n          values['a'+index] = currentValue\n        });\n        setMeterLineChartData(values)\n\n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n        \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n\n        let columns = [{\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        }];\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let column = {};\n          column['dataField'] = 'a' + index;\n          column['text'] = currentValue;\n          column['sort'] = true;\n          columns.push(column);\n        });\n        setDetailedDataTableColumns(columns);\n\n        let detial_value_list = [];\n        // choose the first point's timestamps for all points\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentValue, index) => {\n            let detial_value = {};\n            detial_value['id'] = index;\n            detial_value['startdatetime'] = currentValue;\n            json['reporting_period']['names'].forEach((currentValue1, index1) => {\n              detial_value['a' + index1] = json['reporting_period']['values'][index1][index];\n            });\n            detial_value_list.push(detial_value);\n          });\n        };\n        setDetailedDataTableData(detial_value_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);\n          \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  \n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'metertrend.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Meter Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Meter Trend')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form >\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"meterSelect\">\n                    {t('Meter')}\n                  </Label>\n                  <Form inline>\n                      <Input placeholder={t('Search')} onChange={onSearchMeter} />\n                      <CustomInput type=\"select\" id=\"meterSelect\" name=\"meterSelect\" onChange={({ target }) => setSelectedMeter(target.value)}\n                      >\n                        {filteredMeterList.map((meter, index) => (\n                          <option value={meter.value} key={meter.value}>\n                            {meter.label}\n                          </option>\n                        ))}\n                      </CustomInput>\n                  </Form>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n\n      <LineChart reportingTitle={t('Trend Values')}\n        baseTitle\n        labels={meterLineChartLabels}\n        data={meterLineChartData}\n        options={meterLineChartOptions}>\n      </LineChart>\n\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(MeterTrend));\n","import React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport range from 'lodash/range';\nimport { Card, CardHeader, CardBody, ListGroup, ListGroupItem } from 'reactstrap';\nimport { rgbaColor } from '../../../helpers/utils';\nimport { withTranslation } from 'react-i18next';\nimport uuid from 'uuid/v1';\nimport { APIBaseURL } from '../../../config';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport { toast } from 'react-toastify';\n\n\nconst dividerBorder = '1px solid rgba(255, 255, 255, 0.15)';\nconst listItemBorderColor = 'rgba(255, 255, 255, 0.05)';\n\nconst chartOptions = {\n  legend: { display: false },\n  scales: {\n    yAxes: [\n      {\n        display: true,\n        stacked: false\n      }\n    ],\n    xAxes: [\n      {\n        stacked: false,\n        ticks: { display: false },\n        categoryPercentage: 1.0,\n        gridLines: {\n          color: rgbaColor('#fff', 0.1),\n          display: true\n        }\n      }\n    ]\n  }\n};\n\nclass RealtimeChart extends Component {\n  _isMounted = false;\n  refreshInterval;\n  refreshTimeout;\n  state = {\n    trendLog: [],\n    currentEnergyValue: undefined,\n    chartData: {\n      labels: range(1, 60),\n      datasets: [\n        {\n          label: '',\n          backgroundColor: rgbaColor('#fff', 0.3),\n        }\n      ]\n    },\n    pointList: [],\n  };\n\n  componentWillUnmount() {\n    this._isMounted = false;\n    clearInterval(this.refreshInterval);\n    clearTimeout(this.refreshTimeout);\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    // fetch meter realtime data at the first time\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/meterrealtime?meterid=' + this.props.meterId, {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json);\n        let trendLog = json['energy_value']['values'];\n        let currentEnergyValue = undefined;\n        let pointList = [];\n        if (trendLog.length > 0) {\n          currentEnergyValue = trendLog[trendLog.length - 1];\n        }\n        json['parameters']['names'].forEach((currentName, index) => {\n          let pointItem = {}\n          pointItem['name'] = currentName;\n          pointItem['value'] = undefined;\n          let currentValues = json['parameters']['values'][index];\n          if (currentValues.length > 0) {\n            pointItem['value'] = currentValues[currentValues.length - 1];\n          }\n          pointList.push(pointItem);\n        });\n        if (this._isMounted) {\n          this.setState({ \n            trendLog: trendLog, \n            currentEnergyValue: currentEnergyValue,\n            pointList: pointList,\n          });\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n    //fetch meter realtime data at regular intervals\n    this.refreshInterval = setInterval(() => {\n      let isResponseOK = false;\n      fetch(APIBaseURL + '/reports/meterrealtime?meterid=' + this.props.meterId, {\n        method: 'GET',\n        headers: {\n          \"Content-type\": \"application/json\",\n          \"User-UUID\": getCookieValue('user_uuid'),\n          \"Token\": getCookieValue('token')\n        },\n        body: null,\n\n      }).then(response => {\n        if (response.ok) {\n          isResponseOK = true;\n        }\n        return response.json();\n      }).then(json => {\n        if (isResponseOK) {\n          console.log(json);\n          let trendLog = json['energy_value']['values'];\n          let currentEnergyValue = undefined;\n          let pointList = [];\n          if (trendLog.length > 0) {\n            currentEnergyValue = trendLog[trendLog.length - 1];\n          }\n          json['parameters']['names'].forEach((currentName, index) => {\n            let pointItem = {}\n            pointItem['name'] = currentName;\n            pointItem['value'] = undefined;\n            let currentValues = json['parameters']['values'][index];\n            if (currentValues.length > 0) {\n              pointItem['value'] = currentValues[currentValues.length - 1];\n            }\n            pointList.push(pointItem);\n          });\n          if (this._isMounted) {\n            this.setState({ \n              trendLog: trendLog, \n              currentEnergyValue: currentEnergyValue,\n              pointList: pointList,\n            });\n          }\n        } else {\n          toast.error(json.description)\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }, (60 + Math.floor(Math.random() * Math.floor(10))) * 1000); // use random interval to avoid paralels requests \n  }\n\n  render() {\n    const { t } = this.props;\n    const chartData = {\n      ...this.state.chartData,\n      datasets: [\n        {\n          ...this.state.chartData.datasets[0],\n          data: this.state.trendLog\n        }\n      ]\n    };\n\n    return (\n      <Card className=\"h-100 bg-gradient\">\n        <CardHeader className=\"bg-transparent\">\n          <h5 className=\"text-white\">{this.props.meterName}</h5>\n          <div className=\"real-time-user display-4 font-weight-normal text-white\">{this.state.currentEnergyValue}</div>\n        </CardHeader>\n        <CardBody className=\"text-white fs--1\">\n          <p className=\"pb-2\" style={{ borderBottom: dividerBorder }}>\n          {t('Trend in the last hour of Energy Value Point (UNIT)', {'UNIT': 'kWh'})}\n          </p>\n          <Line data={chartData} options={chartOptions} width={10} height={4} />\n          <ListGroup flush className=\"mt-4\">\n          \n            <ListGroupItem\n              className=\"bg-transparent d-flex justify-content-between px-0 py-1 font-weight-semi-bold border-top-0\"\n              style={{ borderColor: listItemBorderColor }}\n            >\n              <p className=\"mb-0\">{t('Related Parameters')}</p>\n              <p className=\"mb-0\">{t('Realtime Value')}</p>\n            </ListGroupItem>\n            {this.state.pointList.map(pointItem => (\n              <ListGroupItem key={uuid()}\n                className=\"bg-transparent d-flex justify-content-between px-0 py-1\"\n                style={{ borderColor: listItemBorderColor }}\n              >\n                <p className=\"mb-0\">{pointItem['name']}</p>\n                <p className=\"mb-0\">{pointItem['value']}</p>\n              </ListGroupItem>\n            ))}\n          </ListGroup>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default  withTranslation()(RealtimeChart);\n","import React, { createRef, Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  ButtonGroup,\n  Card,\n  CardBody,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Spinner,\n  Pagination,\n  PaginationItem,\n  PaginationLink\n} from 'reactstrap';\nimport Cascader from 'rc-cascader';\nimport RealtimeChart from './RealtimeChart';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport uuid from 'uuid/v1';\nimport { toast } from 'react-toastify';\nimport { APIBaseURL } from '../../../config';\n\nconst MeterRealtime = ({ setRedirect, setRedirectUrl, t }) => {\n  const [cursor, setCursor] = useState(0);\n  const [maxCursor, setMaxCursor] = useState(0);\n  const [selectMeterList, setSelectMeterList] = useState([]);\n  const len = 8;\n\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  let table = createRef();\n  // State\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n  const [meterList, setMeterList] = useState([]);\n  const [spinnerHidden, setSpinnerHidden] = useState(false);\n\n  useEffect(() => {\n    //begin of getting space tree\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        'User-UUID': getCookieValue('user_uuid'),\n        Token: getCookieValue('token')\n      },\n      body: null\n    })\n      .then(response => {\n        console.log(response);\n        if (response.ok) {\n          isResponseOK = true;\n        }\n        return response.json();\n      })\n      .then(json => {\n        console.log(json);\n        if (isResponseOK) {\n          // rename keys\n          json = JSON.parse(\n            JSON.stringify([json])\n              .split('\"id\":')\n              .join('\"value\":')\n              .split('\"name\":')\n              .join('\"label\":')\n          );\n          setCascaderOptions(json);\n          // set the default space\n          setSelectedSpaceName([json[0]].map(o => o.label));\n          let selectedSpaceID = [json[0]].map(o => o.value);\n          //begin of getting meters of the default space\n          let isSecondResponseOK = false;\n          fetch(APIBaseURL + '/spaces/' + selectedSpaceID + '/meters', {\n            method: 'GET',\n            headers: {\n              'Content-type': 'application/json',\n              'User-UUID': getCookieValue('user_uuid'),\n              Token: getCookieValue('token')\n            },\n            body: null\n          })\n            .then(response => {\n              if (response.ok) {\n                isSecondResponseOK = true;\n              }\n              return response.json();\n            })\n            .then(json => {\n              if (isSecondResponseOK) {\n                json = JSON.parse(JSON.stringify([json]));\n                console.log(json);\n                setMeterList(json[0]);\n                setSpinnerHidden(true);\n              } else {\n                toast.error(json.description);\n              }\n            })\n            .catch(err => {\n              console.log(err);\n            });\n          //end of getting meters of the default space\n        } else {\n          toast.error(json.description);\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    //end of getting space tree\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    let selectedSpaceID = value[value.length - 1];\n    setSpinnerHidden(false);\n    //begin of getting meters of the selected space\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + selectedSpaceID + '/meters', {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        'User-UUID': getCookieValue('user_uuid'),\n        Token: getCookieValue('token')\n      },\n      body: null\n    })\n      .then(response => {\n        if (response.ok) {\n          isResponseOK = true;\n        }\n        return response.json();\n      })\n      .then(json => {\n        if (isResponseOK) {\n          json = JSON.parse(JSON.stringify([json]));\n          console.log(json);\n          setMeterList(json[0]);\n\n          setSpinnerHidden(true);\n        } else {\n          toast.error(json.description);\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    //end of getting meters of the selected space\n  };\n\n  useEffect(() => {\n    const meterLen = meterList.length;\n    const maxCursor = Math.ceil(meterLen / len);\n    setCursor(1);\n    setMaxCursor(maxCursor);\n  }, [meterList]);\n\n  useEffect(() => {\n    setSelectMeterList(meterList.slice(cursor * len - 8, cursor * len));\n  }, [cursor, meterList]);\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Meter Data')}</BreadcrumbItem>\n          <BreadcrumbItem active>{t('Meter Realtime')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader\n                    options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\"\n                  >\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br />\n                  <Spinner color=\"primary\" hidden={spinnerHidden} />\n                </FormGroup>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <Row noGutters>\n        {selectMeterList.map(meter => (\n          <Col lg=\"3\" className=\"pr-lg-2\" key={uuid()}>\n            <RealtimeChart meterId={meter['id']} meterName={meter['name']} />\n          </Col>\n        ))}\n      </Row>\n      <Pagination>\n        <PaginationItem>\n          <PaginationLink first href=\"#\" onClick={() => setCursor(1)} />\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink previous href=\"#\" onClick={() => (cursor - 1 >= 1 ? setCursor(cursor - 1) : null)} />\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink href=\"#\">{cursor}</PaginationLink>\n        </PaginationItem>\n        \n        <PaginationItem>\n          <PaginationLink next href=\"#\" onClick={() => (cursor + 1 <= maxCursor ? setCursor(cursor + 1) : null)} />\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink last href=\"#\" onClick={() => setCursor(maxCursor)} />\n        </PaginationItem>\n      </Pagination>\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(MeterRealtime));","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Loader from '../../common/Loader';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\nconst MeterSubmetersBalance = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n\n  // State\n  //Query From\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [meterList, setMeterList] = useState([]);\n  const [filteredMeterList, setFilteredMeterList] = useState([]);\n  const [selectedMeter, setSelectedMeter] = useState(undefined);\n  const [periodType, setPeriodType] = useState('daily');\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n\n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n  const [loading, setLoading] = useState(false);\n  //Results\n  const [meterEnergyCategory, setMeterEnergyCategory] = useState({ 'name': '', 'unit': '' });\n  const [reportingPeriodMasterMeterConsumptionInCategory, setReportingPeriodMasterMeterConsumptionInCategory] = useState(0);\n  const [reportingPeriodSubmetersConsumptionInCategory, setReportingPeriodSubmetersConsumptionInCategory] = useState(0);\n  const [reportingPeriodDifferenceInCategory, setReportingPeriodDifferenceInCategory] = useState(0);\n  const [reportingPeriodPercentageDifference, setReportingPeriodPercentageDifference] = useState(0);\n  const [meterLineChartOptions, setMeterLineChartOptions] = useState([]);\n  const [meterLineChartData, setMeterLineChartData] = useState({});\n  const [meterLineChartLabels, setMeterLineChartLabels] = useState([]);\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n\n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Meters by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/meters', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setMeterList(json[0]);\n            setFilteredMeterList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedMeter(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedMeter(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Meters by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, [t,]);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/meters', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setMeterList(json[0]);\n        setFilteredMeterList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedMeter(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedMeter(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  \n  const onSearchMeter = ({ target }) => {\n    const keyword = target.value.toLowerCase();\n    const filteredResult = meterList.filter(\n      meter => meter.label.toLowerCase().includes(keyword)\n    );\n    setFilteredMeterList(keyword.length ? filteredResult : meterList);\n    if (filteredResult.length > 0) {\n      setSelectedMeter(filteredResult[0].value);\n      // enable submit button\n      setSubmitButtonDisabled(false);\n    } else {\n      setSelectedMeter(undefined);\n      // disable submit button\n      setSubmitButtonDisabled(true);\n    };\n  };\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n  };\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n  };\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedMeter);\n    console.log(periodType);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);  \n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/metersubmetersbalance?' +\n      'meterid=' + selectedMeter +\n      '&periodtype=' + periodType +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n        setMeterEnergyCategory({\n          'name': json['meter']['energy_category_name'],\n          'unit': json['meter']['unit_of_measure']\n        });\n        \n        setReportingPeriodMasterMeterConsumptionInCategory(json['reporting_period']['master_meter_consumption_in_category']);\n        setReportingPeriodSubmetersConsumptionInCategory(json['reporting_period']['submeters_consumption_in_category']);\n        setReportingPeriodDifferenceInCategory(json['reporting_period']['difference_in_category']);\n        setReportingPeriodPercentageDifference(parseFloat((json['reporting_period']['percentage_difference'] * 100).toFixed(2)));\n\n        let names = Array();\n        names.push({ 'value': 'a0', 'label': json['meter']['energy_category_name'] });\n        setMeterLineChartOptions(names);\n        \n        let timestamps = {}\n        timestamps['a0'] = json['reporting_period']['timestamps'];\n        setMeterLineChartLabels(timestamps);\n\n        let values = {'a0':[]}\n        json['reporting_period']['difference_values'].forEach((currentValue, index) => {\n          values['a0'][index] = currentValue.toFixed(2);\n        });\n        setMeterLineChartData(values)\n\n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n        \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n\n        setDetailedDataTableColumns([{\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        }, {\n          dataField: 'a0',\n          text: json['meter']['energy_category_name'] + ' (' + json['meter']['unit_of_measure'] + ')',\n          sort: true\n        }]);\n\n        let detailed_value_list = [];\n        json['reporting_period']['timestamps'].forEach((currentTimestamp, timestampIndex) => {\n          let detailed_value = {};\n          detailed_value['id'] = timestampIndex;\n          detailed_value['startdatetime'] = currentTimestamp;\n          detailed_value['a0'] = json['reporting_period']['difference_values'][timestampIndex].toFixed(2);\n          detailed_value_list.push(detailed_value);\n        });\n        \n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Total');\n        detailed_value['a0'] = json['reporting_period']['difference_in_category'].toFixed(2);\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);\n        \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  \n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'metersubmetersbalance.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Meter Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Master Meter Submeters Balance')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form >\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"meterSelect\">\n                    {t('Meter')}\n                  </Label>\n                  <Form inline>\n                      <Input placeholder={t('Search')} onChange={onSearchMeter} />\n                      <CustomInput type=\"select\" id=\"meterSelect\" name=\"meterSelect\" onChange={({ target }) => setSelectedMeter(target.value)}\n                      >\n                        {filteredMeterList.map((meter, index) => (\n                          <option value={meter.value} key={meter.value}>\n                            {meter.label}\n                          </option>\n                        ))}\n                      </CustomInput>\n                  </Form>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <Fragment>\n\n        <div className=\"card-deck\">\n\n          <CardSummary title={t('Reporting Period Master Meter Consumption CATEGORY UNIT', { 'CATEGORY': meterEnergyCategory['name'], 'UNIT': '(' + meterEnergyCategory['unit'] + ')' })}\n            color=\"success\"  >\n            <CountUp end={reportingPeriodMasterMeterConsumptionInCategory} duration={2} prefix=\"\" separator=\",\" decimals={2} decimal=\".\" />\n          </CardSummary>\n          <CardSummary title={t('Reporting Period Submeters Consumption CATEGORY UNIT', { 'CATEGORY': meterEnergyCategory['name'], 'UNIT': '(' + meterEnergyCategory['unit'] + ')' })}\n            color=\"warning\" >\n            <CountUp end={reportingPeriodSubmetersConsumptionInCategory} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />\n          </CardSummary>\n          <CardSummary title={t('Reporting Period Difference CATEGORY UNIT', { 'CATEGORY': meterEnergyCategory['name'], 'UNIT': '(' + meterEnergyCategory['unit'] + ')' })}\n            color=\"warning\" >\n            <CountUp end={reportingPeriodDifferenceInCategory} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />\n          </CardSummary>\n          <CardSummary title={t('Reporting Period Percentage Difference') + '(%)'}\n            color=\"warning\" >\n            <CountUp end={reportingPeriodPercentageDifference} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />\n          </CardSummary>\n\n        </div>\n\n        <LineChart reportingTitle={t('Reporting Period Difference CATEGORY VALUE UNIT', { 'CATEGORY': meterEnergyCategory['name'], 'VALUE': reportingPeriodDifferenceInCategory.toFixed(2), 'UNIT': '(' + meterEnergyCategory['unit'] + ')' })}\n          baseTitle={t('Reporting Period Master Meter Consumption CATEGORY VALUE UNIT', { 'CATEGORY': meterEnergyCategory['name'], 'VALUE': reportingPeriodMasterMeterConsumptionInCategory.toFixed(2), 'UNIT': '(' + meterEnergyCategory['unit'] + ')' }) + ' - ' +\n                    t('Reporting Period Submeters Consumption CATEGORY VALUE UNIT', { 'CATEGORY': meterEnergyCategory['name'], 'VALUE': reportingPeriodSubmetersConsumptionInCategory.toFixed(2), 'UNIT': '(' + meterEnergyCategory['unit'] + ')' })}\n          labels={meterLineChartLabels}\n          data={meterLineChartData}\n          options={meterLineChartOptions}>\n        </LineChart>\n\n        <LineChart reportingTitle={t('Related Parameters')}\n          baseTitle=''\n          labels={parameterLineChartLabels}\n          data={parameterLineChartData}\n          options={parameterLineChartOptions}>\n        </LineChart>\n        <br />\n        <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n        </DetailedDataTable>\n\n      </Fragment>\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(MeterSubmetersBalance));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\nconst OfflineMeterEnergy = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n\n  // State\n  //Query From\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [offlineMeterList, setOfflineMeterList] = useState([]);\n  const [selectedOfflineMeter, setSelectedOfflineMeter] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n  \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n  //Results\n  const [offlineMeterEnergyCategory, setOfflineMeterEnergyCategory] = useState({ 'name': '', 'unit': '' });\n  const [reportingPeriodEnergyConsumptionInCategory, setReportingPeriodEnergyConsumptionInCategory] = useState(0);\n  const [reportingPeriodEnergyConsumptionRate, setReportingPeriodEnergyConsumptionRate] = useState('');\n  const [reportingPeriodEnergyConsumptionInTCE, setReportingPeriodEnergyConsumptionInTCE] = useState(0);\n  const [reportingPeriodEnergyConsumptionInCO2, setReportingPeriodEnergyConsumptionInCO2] = useState(0);\n  const [basePeriodEnergyConsumptionInCategory, setBasePeriodEnergyConsumptionInCategory] = useState(0);\n  const [offlineMeterLineChartOptions, setOfflineMeterLineChartOptions] = useState([]);\n  const [offlineMeterLineChartData, setOfflineMeterLineChartData] = useState({});\n  const [offlineMeterLineChartLabels, setOfflineMeterLineChartLabels] = useState([]);\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n\n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Offline Meters by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/offlinemeters', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setOfflineMeterList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedOfflineMeter(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedOfflineMeter(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Offline Meters by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, [t, ]);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/offlinemeters', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setOfflineMeterList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedOfflineMeter(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedOfflineMeter(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedOfflineMeter);\n    console.log(comparisonType);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);  \n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/offlinemeterenergy?' +\n      'offlinemeterid=' + selectedOfflineMeter +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n        setOfflineMeterEnergyCategory({\n          'name': json['offline_meter']['energy_category_name'],\n          'unit': json['offline_meter']['unit_of_measure']\n        });\n        setReportingPeriodEnergyConsumptionRate(parseFloat(json['reporting_period']['increment_rate']*100).toFixed(2) + \"%\");\n        setReportingPeriodEnergyConsumptionInCategory(json['reporting_period']['total_in_category']);\n        setReportingPeriodEnergyConsumptionInTCE(json['reporting_period']['total_in_kgce'] / 1000);\n        setReportingPeriodEnergyConsumptionInCO2(json['reporting_period']['total_in_kgco2e'] / 1000);\n        setBasePeriodEnergyConsumptionInCategory(json['base_period']['total_in_category']);\n\n        let names = Array();\n        names.push({ 'value': 'a0', 'label': json['offline_meter']['energy_category_name'] });\n        setOfflineMeterLineChartOptions(names);\n        \n        let timestamps = {}\n        timestamps['a0'] = json['reporting_period']['timestamps'];\n        setOfflineMeterLineChartLabels(timestamps);\n\n        let values = {'a0':[]}\n        json['reporting_period']['values'].forEach((currentValue, index) => {\n          values['a0'][index] = currentValue.toFixed(2);\n        });\n        setOfflineMeterLineChartData(values)\n\n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n\n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n\n        setDetailedDataTableColumns([{\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        }, {\n          dataField: 'a0',\n          text: json['offline_meter']['energy_category_name'] + ' (' + json['offline_meter']['unit_of_measure'] + ')',\n          sort: true\n        }]);\n\n        let detailed_value_list = [];\n        json['reporting_period']['timestamps'].forEach((currentTimestamp, timestampIndex) => {\n          let detailed_value = {};\n          detailed_value['id'] = timestampIndex;\n          detailed_value['startdatetime'] = currentTimestamp;\n          detailed_value['a0'] = json['reporting_period']['values'][timestampIndex].toFixed(2);\n          detailed_value_list.push(detailed_value);\n        });\n        \n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Total');\n        detailed_value['a0'] = json['reporting_period']['total_in_category'].toFixed(2);\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);\n        \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  \n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'offlinemeterenergy.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Meter Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Offline Meter Energy')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form >\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"offlineMeterSelect\">\n                    {t('Offline Meter')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"offlineMeterSelect\" name=\"offlineMeterSelect\" onChange={({ target }) => setSelectedOfflineMeter(target.value)}\n                  >\n                    {offlineMeterList.map((offlineMeter, index) => (\n                      <option value={offlineMeter.value} key={offlineMeter.value}>\n                        {offlineMeter.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"card-deck\">\n        <CardSummary rate={reportingPeriodEnergyConsumptionRate} title={t('Reporting Period Consumption CATEGORY UNIT', { 'CATEGORY': offlineMeterEnergyCategory['name'], 'UNIT': '(' + offlineMeterEnergyCategory['unit'] + ')' })}\n          color=\"success\"  >\n          <CountUp end={reportingPeriodEnergyConsumptionInCategory} duration={2} prefix=\"\" separator=\",\" decimals={2} decimal=\".\" />\n        </CardSummary>\n        <CardSummary rate={reportingPeriodEnergyConsumptionRate} title={t('Reporting Period Consumption CATEGORY UNIT', { 'CATEGORY': t('Ton of Standard Coal'), 'UNIT': '(TCE)' })}\n          color=\"warning\" >\n          <CountUp end={reportingPeriodEnergyConsumptionInTCE} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />\n        </CardSummary>\n        <CardSummary rate={reportingPeriodEnergyConsumptionRate} title={t('Reporting Period Consumption CATEGORY UNIT', { 'CATEGORY': t('Ton of Carbon Dioxide Emissions'), 'UNIT': '(T)' })}\n          color=\"warning\" >\n          <CountUp end={reportingPeriodEnergyConsumptionInCO2} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />\n        </CardSummary>\n      </div>\n\n      <LineChart reportingTitle={t('Reporting Period Consumption CATEGORY VALUE UNIT', { 'CATEGORY': offlineMeterEnergyCategory['name'], 'VALUE': reportingPeriodEnergyConsumptionInCategory.toFixed(2), 'UNIT': '(' + offlineMeterEnergyCategory['unit'] + ')' })}\n        baseTitle={t('Base Period Consumption CATEGORY VALUE UNIT', { 'CATEGORY': offlineMeterEnergyCategory['name'], 'VALUE': basePeriodEnergyConsumptionInCategory.toFixed(2), 'UNIT': '(' + offlineMeterEnergyCategory['unit'] + ')' })}\n        labels={offlineMeterLineChartLabels}\n        data={offlineMeterLineChartData}\n        options={offlineMeterLineChartOptions}>\n      </LineChart>\n\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(OfflineMeterEnergy));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\nconst OfflineMeterCost = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n\n  // State\n  //Query From\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [offlineMeterList, setOfflineMeterList] = useState([]);\n  const [selectedOfflineMeter, setSelectedOfflineMeter] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n\n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n  //Results\n  const [offlineMeterEnergyCategory, setOfflineMeterEnergyCategory] = useState({ 'name': '', 'unit': '' });\n  const [reportingPeriodEnergyCostInCategory, setReportingPeriodEnergyCostInCategory] = useState(0);\n  const [reportingPeriodEnergyCostRate, setReportingPeriodEnergyCostRate] = useState('');\n  const [reportingPeriodEnergyConsumptionInTCE, setReportingPeriodEnergyConsumptionInTCE] = useState(0);\n  const [reportingPeriodEnergyConsumptionInCO2, setReportingPeriodEnergyConsumptionInCO2] = useState(0);\n  const [basePeriodEnergyCostInCategory, setBasePeriodEnergyCostInCategory] = useState(0);\n  const [offlineMeterLineChartOptions, setOfflineMeterLineChartOptions] = useState([]);\n  const [offlineMeterLineChartData, setOfflineMeterLineChartData] = useState({});\n  const [offlineMeterLineChartLabels, setOfflineMeterLineChartLabels] = useState([]);\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n\n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Offline Meters by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/offlinemeters', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setOfflineMeterList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedOfflineMeter(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedOfflineMeter(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Offline Meters by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, [t, ]);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/offlinemeters', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setOfflineMeterList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedOfflineMeter(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedOfflineMeter(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedOfflineMeter);\n    console.log(comparisonType);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/offlinemetercost?' +\n      'offlinemeterid=' + selectedOfflineMeter +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n        setOfflineMeterEnergyCategory({\n          'name': json['offline_meter']['energy_category_name'],\n          'unit': json['offline_meter']['unit_of_measure']\n        });\n        setReportingPeriodEnergyCostRate(parseFloat(json['reporting_period']['increment_rate']*100).toFixed(2) + \"%\");\n        setReportingPeriodEnergyCostInCategory(json['reporting_period']['total_in_category']);\n        setReportingPeriodEnergyConsumptionInTCE(json['reporting_period']['total_in_kgce'] / 1000);\n        setReportingPeriodEnergyConsumptionInCO2(json['reporting_period']['total_in_kgco2e'] / 1000);\n        setBasePeriodEnergyCostInCategory(json['base_period']['total_in_category']);\n\n        let names = Array();\n        names.push({ 'value': 'a0', 'label': json['offline_meter']['energy_category_name'] });\n        setOfflineMeterLineChartOptions(names);\n        \n        let timestamps = {}\n        timestamps['a0'] = json['reporting_period']['timestamps'];\n        setOfflineMeterLineChartLabels(timestamps);\n\n        let values = {'a0':[]}\n        json['reporting_period']['values'].forEach((currentValue, index) => {\n          values['a0'][index] = currentValue.toFixed(2);\n        });\n        setOfflineMeterLineChartData(values)\n\n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n\n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n\n        setDetailedDataTableColumns([{\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        }, {\n          dataField: 'a0',\n          text: json['offline_meter']['energy_category_name'] + ' (' + json['offline_meter']['unit_of_measure'] + ')',\n          sort: true\n        }]);\n\n        let detailed_value_list = [];\n        json['reporting_period']['timestamps'].forEach((currentTimestamp, timestampIndex) => {\n          let detailed_value = {};\n          detailed_value['id'] = timestampIndex;\n          detailed_value['startdatetime'] = currentTimestamp;\n          detailed_value['a0'] = json['reporting_period']['values'][timestampIndex].toFixed(2);\n          detailed_value_list.push(detailed_value);\n        });\n        \n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Total');\n        detailed_value['a0'] = json['reporting_period']['total_in_category'].toFixed(2);\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);\n          \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  \n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'offlinemetercost.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Meter Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Offline Meter Cost')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form >\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"offlineMeterSelect\">\n                    {t('Offline Meter')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"offlineMeterSelect\" name=\"offlineMeterSelect\" onChange={({ target }) => setSelectedOfflineMeter(target.value)}\n                  >\n                    {offlineMeterList.map((offlineMeter, index) => (\n                      <option value={offlineMeter.value} key={offlineMeter.value}>\n                        {offlineMeter.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"card-deck\">\n        <CardSummary rate={reportingPeriodEnergyCostRate} title={t('Reporting Period Costs CATEGORY UNIT', { 'CATEGORY': offlineMeterEnergyCategory['name'], 'UNIT': '(' + offlineMeterEnergyCategory['unit'] + ')' })}\n          color=\"success\"  >\n          <CountUp end={reportingPeriodEnergyCostInCategory} duration={2} prefix=\"\" separator=\",\" decimals={2} decimal=\".\" />\n        </CardSummary>\n        <CardSummary rate={reportingPeriodEnergyCostRate} title={t('Reporting Period Consumption CATEGORY UNIT', { 'CATEGORY': t('Ton of Standard Coal'), 'UNIT': '(TCE)' })}\n          color=\"warning\" >\n          <CountUp end={reportingPeriodEnergyConsumptionInTCE} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />\n        </CardSummary>\n        <CardSummary rate={reportingPeriodEnergyCostRate} title={t('Reporting Period Consumption CATEGORY UNIT', { 'CATEGORY': t('Ton of Carbon Dioxide Emissions'), 'UNIT': '(T)' })}\n          color=\"warning\" >\n          <CountUp end={reportingPeriodEnergyConsumptionInCO2} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />\n        </CardSummary>\n      </div>\n\n      <LineChart reportingTitle={t('Reporting Period Costs CATEGORY VALUE UNIT', { 'CATEGORY': offlineMeterEnergyCategory['name'], 'VALUE': reportingPeriodEnergyCostInCategory.toFixed(2), 'UNIT': '(' + offlineMeterEnergyCategory['unit'] + ')' })}\n        baseTitle={t('Base Period Costs CATEGORY VALUE UNIT', { 'CATEGORY': offlineMeterEnergyCategory['name'], 'VALUE': basePeriodEnergyCostInCategory.toFixed(2), 'UNIT': '(' + offlineMeterEnergyCategory['unit'] + ')' })}\n        labels={offlineMeterLineChartLabels}\n        data={offlineMeterLineChartData}\n        options={offlineMeterLineChartOptions}>\n      </LineChart>\n\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(OfflineMeterCost));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\nconst VirtualMeterEnergy = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n\n  // State\n  //Query From\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [virtualMeterList, setVirtualMeterList] = useState([]);\n  const [selectedVirtualMeter, setSelectedVirtualMeter] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n  \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n  //Results\n  const [virtualMeterEnergyCategory, setVirtualMeterEnergyCategory] = useState({ 'name': '', 'unit': '' });\n  const [reportingPeriodEnergyConsumptionInCategory, setReportingPeriodEnergyConsumptionInCategory] = useState(0);\n  const [reportingPeriodEnergyConsumptionRate, setReportingPeriodEnergyConsumptionRate] = useState('');\n  const [reportingPeriodEnergyConsumptionInTCE, setReportingPeriodEnergyConsumptionInTCE] = useState(0);\n  const [reportingPeriodEnergyConsumptionInCO2, setReportingPeriodEnergyConsumptionInCO2] = useState(0);\n  const [basePeriodEnergyConsumptionInCategory, setBasePeriodEnergyConsumptionInCategory] = useState(0);\n  const [virtualMeterLineChartOptions, setVirtualMeterLineChartOptions] = useState([]);\n  const [virtualMeterLineChartData, setVirtualMeterLineChartData] = useState({});\n  const [virtualMeterLineChartLabels, setVirtualMeterLineChartLabels] = useState([]);\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n\n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Virtual Meters by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/virtualmeters', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setVirtualMeterList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedVirtualMeter(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedVirtualMeter(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Virtual Meters by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, [t, ]);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/virtualmeters', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setVirtualMeterList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedVirtualMeter(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedVirtualMeter(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedVirtualMeter);\n    console.log(comparisonType);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true); \n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true) \n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/virtualmeterenergy?' +\n      'virtualmeterid=' + selectedVirtualMeter +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n        setVirtualMeterEnergyCategory({\n          'name': json['virtual_meter']['energy_category_name'],\n          'unit': json['virtual_meter']['unit_of_measure']\n        });\n        setReportingPeriodEnergyConsumptionRate(parseFloat(json['reporting_period']['increment_rate']*100).toFixed(2) + \"%\");\n        setReportingPeriodEnergyConsumptionInCategory(json['reporting_period']['total_in_category']);\n        setReportingPeriodEnergyConsumptionInTCE(json['reporting_period']['total_in_kgce'] / 1000);\n        setReportingPeriodEnergyConsumptionInCO2(json['reporting_period']['total_in_kgco2e'] / 1000);\n        setBasePeriodEnergyConsumptionInCategory(json['base_period']['total_in_category']);\n\n        let names = Array();\n        names.push({ 'value': 'a0', 'label': json['virtual_meter']['energy_category_name'] });\n        setVirtualMeterLineChartOptions(names);\n        \n        let timestamps = {}\n        timestamps['a0'] = json['reporting_period']['timestamps'];\n        setVirtualMeterLineChartLabels(timestamps);\n\n        let values = {'a0':[]}\n        json['reporting_period']['values'].forEach((currentValue, index) => {\n          values['a0'][index] = currentValue.toFixed(2);\n        });\n        setVirtualMeterLineChartData(values)\n\n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n\n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n\n        setDetailedDataTableColumns([{\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        }, {\n          dataField: 'a0',\n          text: json['virtual_meter']['energy_category_name'] + ' (' + json['virtual_meter']['unit_of_measure'] + ')',\n          sort: true\n        }]);\n\n        let detailed_value_list = [];\n        json['reporting_period']['timestamps'].forEach((currentTimestamp, timestampIndex) => {\n          let detailed_value = {};\n          detailed_value['id'] = timestampIndex;\n          detailed_value['startdatetime'] = currentTimestamp;\n          detailed_value['a0'] = json['reporting_period']['values'][timestampIndex].toFixed(2);\n          detailed_value_list.push(detailed_value);\n        });\n        \n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Total');\n        detailed_value['a0'] = json['reporting_period']['total_in_category'].toFixed(2);\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);  \n\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  \n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'virtualmeterenergy.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Meter Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Virtual Meter Energy')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form >\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"virtualMeterSelect\">\n                    {t('Virtual Meter')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"virtualMeterSelect\" name=\"virtualMeterSelect\" onChange={({ target }) => setSelectedVirtualMeter(target.value)}\n                  >\n                    {virtualMeterList.map((virtualMeter, index) => (\n                      <option value={virtualMeter.value} key={virtualMeter.value}>\n                        {virtualMeter.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"card-deck\">\n        <CardSummary rate={reportingPeriodEnergyConsumptionRate} title={t('Reporting Period Consumption CATEGORY UNIT', { 'CATEGORY': virtualMeterEnergyCategory['name'], 'UNIT': '(' + virtualMeterEnergyCategory['unit'] + ')' })}\n          color=\"success\"  >\n          <CountUp end={reportingPeriodEnergyConsumptionInCategory} duration={2} prefix=\"\" separator=\",\" decimals={2} decimal=\".\" />\n        </CardSummary>\n        <CardSummary rate={reportingPeriodEnergyConsumptionRate} title={t('Reporting Period Consumption CATEGORY UNIT', { 'CATEGORY': t('Ton of Standard Coal'), 'UNIT': '(TCE)' })}\n          color=\"warning\" >\n          <CountUp end={reportingPeriodEnergyConsumptionInTCE} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />\n        </CardSummary>\n        <CardSummary rate={reportingPeriodEnergyConsumptionRate} title={t('Reporting Period Consumption CATEGORY UNIT', { 'CATEGORY': t('Ton of Carbon Dioxide Emissions'), 'UNIT': '(T)' })}\n          color=\"warning\" >\n          <CountUp end={reportingPeriodEnergyConsumptionInCO2} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />\n        </CardSummary>\n      </div>\n\n      <LineChart reportingTitle={t('Reporting Period Consumption CATEGORY VALUE UNIT', { 'CATEGORY': virtualMeterEnergyCategory['name'], 'VALUE': reportingPeriodEnergyConsumptionInCategory.toFixed(2), 'UNIT': '(' + virtualMeterEnergyCategory['unit'] + ')' })}\n        baseTitle={t('Base Period Consumption CATEGORY VALUE UNIT', { 'CATEGORY': virtualMeterEnergyCategory['name'], 'VALUE': basePeriodEnergyConsumptionInCategory.toFixed(2), 'UNIT': '(' + virtualMeterEnergyCategory['unit'] + ')' })}\n        labels={virtualMeterLineChartLabels}\n        data={virtualMeterLineChartData}\n        options={virtualMeterLineChartOptions}>\n      </LineChart>\n\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(VirtualMeterEnergy));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\nconst VirtualMeterCost = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n\n  // State\n  //Query From\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [virtualMeterList, setVirtualMeterList] = useState([]);\n  const [selectedVirtualMeter, setSelectedVirtualMeter] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n  \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n  //Results\n  const [virtualMeterEnergyCategory, setVirtualMeterEnergyCategory] = useState({ 'name': '', 'unit': '' });\n  const [reportingPeriodEnergyCostInCategory, setReportingPeriodEnergyCostInCategory] = useState(0);\n  const [reportingPeriodEnergyCostRate, setReportingPeriodEnergyCostRate] = useState('');\n  const [reportingPeriodEnergyConsumptionInTCE, setReportingPeriodEnergyConsumptionInTCE] = useState(0);\n  const [reportingPeriodEnergyConsumptionInCO2, setReportingPeriodEnergyConsumptionInCO2] = useState(0);\n  const [basePeriodEnergyCostInCategory, setBasePeriodEnergyCostInCategory] = useState(0);\n  const [virtualMeterLineChartOptions, setVirtualMeterLineChartOptions] = useState([]);\n  const [virtualMeterLineChartData, setVirtualMeterLineChartData] = useState({});\n  const [virtualMeterLineChartLabels, setVirtualMeterLineChartLabels] = useState([]);\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n\n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Virtual Meters by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/virtualmeters', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setVirtualMeterList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedVirtualMeter(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedVirtualMeter(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Virtual Meters by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, [t, ]);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/virtualmeters', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setVirtualMeterList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedVirtualMeter(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedVirtualMeter(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedVirtualMeter);\n    console.log(comparisonType);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true); \n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true) \n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/virtualmetercost?' +\n      'virtualmeterid=' + selectedVirtualMeter +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n        setVirtualMeterEnergyCategory({\n          'name': json['virtual_meter']['energy_category_name'],\n          'unit': json['virtual_meter']['unit_of_measure']\n        });\n        setReportingPeriodEnergyCostRate(parseFloat(json['reporting_period']['increment_rate']*100).toFixed(2) + \"%\");\n        setReportingPeriodEnergyCostInCategory(json['reporting_period']['total_in_category']);\n        setReportingPeriodEnergyConsumptionInTCE(json['reporting_period']['total_in_kgce'] / 1000);\n        setReportingPeriodEnergyConsumptionInCO2(json['reporting_period']['total_in_kgco2e'] / 1000);\n        setBasePeriodEnergyCostInCategory(json['base_period']['total_in_category']);\n\n        let names = Array();\n        names.push({ 'value': 'a0', 'label': json['virtual_meter']['energy_category_name'] });\n        setVirtualMeterLineChartOptions(names);\n        \n        let timestamps = {}\n        timestamps['a0'] = json['reporting_period']['timestamps'];\n        setVirtualMeterLineChartLabels(timestamps);\n\n        let values = {'a0':[]}\n        json['reporting_period']['values'].forEach((currentValue, index) => {\n          values['a0'][index] = currentValue.toFixed(2);\n        });\n        setVirtualMeterLineChartData(values)\n\n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n\n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n\n        setDetailedDataTableColumns([{\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        }, {\n          dataField: 'a0',\n          text: json['virtual_meter']['energy_category_name'] + ' (' + json['virtual_meter']['unit_of_measure'] + ')',\n          sort: true\n        }]);\n\n        let detailed_value_list = [];\n        json['reporting_period']['timestamps'].forEach((currentTimestamp, timestampIndex) => {\n          let detailed_value = {};\n          detailed_value['id'] = timestampIndex;\n          detailed_value['startdatetime'] = currentTimestamp;\n          detailed_value['a0'] = json['reporting_period']['values'][timestampIndex].toFixed(2);\n          detailed_value_list.push(detailed_value);\n        });\n        \n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Total');\n        detailed_value['a0'] = json['reporting_period']['total_in_category'].toFixed(2);\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);  \n\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  \n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'virtualmetercost.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Meter Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Virtual Meter Cost')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form >\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"virtualMeterSelect\">\n                    {t('Virtual Meter')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"virtualMeterSelect\" name=\"virtualMeterSelect\" onChange={({ target }) => setSelectedVirtualMeter(target.value)}\n                  >\n                    {virtualMeterList.map((virtualMeter, index) => (\n                      <option value={virtualMeter.value} key={virtualMeter.value}>\n                        {virtualMeter.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"card-deck\">\n        <CardSummary rate={reportingPeriodEnergyCostRate} title={t('Reporting Period Costs CATEGORY UNIT', { 'CATEGORY': virtualMeterEnergyCategory['name'], 'UNIT': '(' + virtualMeterEnergyCategory['unit'] + ')' })}\n          color=\"success\"  >\n          <CountUp end={reportingPeriodEnergyCostInCategory} duration={2} prefix=\"\" separator=\",\" decimals={2} decimal=\".\" />\n        </CardSummary>\n        <CardSummary rate={reportingPeriodEnergyCostRate} title={t('Reporting Period Consumption CATEGORY UNIT', { 'CATEGORY': t('Ton of Standard Coal'), 'UNIT': '(TCE)' })}\n          color=\"warning\" >\n          <CountUp end={reportingPeriodEnergyConsumptionInTCE} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />\n        </CardSummary>\n        <CardSummary rate={reportingPeriodEnergyCostRate} title={t('Reporting Period Consumption CATEGORY UNIT', { 'CATEGORY': t('Ton of Carbon Dioxide Emissions'), 'UNIT': '(T)' })}\n          color=\"warning\" >\n          <CountUp end={reportingPeriodEnergyConsumptionInCO2} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />\n        </CardSummary>\n      </div>\n\n      <LineChart reportingTitle={t('Reporting Period Costs CATEGORY VALUE UNIT', { 'CATEGORY': virtualMeterEnergyCategory['name'], 'VALUE': reportingPeriodEnergyCostInCategory.toFixed(2), 'UNIT': '(' + virtualMeterEnergyCategory['unit'] + ')' })}\n        baseTitle={t('Base Period Costs CATEGORY VALUE UNIT', { 'CATEGORY': virtualMeterEnergyCategory['name'], 'VALUE': basePeriodEnergyCostInCategory.toFixed(2), 'UNIT': '(' + virtualMeterEnergyCategory['unit'] + ')' })}\n        labels={virtualMeterLineChartLabels}\n        data={virtualMeterLineChartData}\n        options={virtualMeterLineChartOptions}>\n      </LineChart>\n\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(VirtualMeterCost));\n","import React, { createRef, Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  ButtonGroup,\n  Card,\n  CardBody,\n  Col,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Media,\n  Row,\n  UncontrolledDropdown,\n  Spinner,\n} from 'reactstrap';\nimport uuid from 'uuid/v1';\nimport Cascader from 'rc-cascader';\nimport loadable from '@loadable/component';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\nimport Flex from '../../common/Flex';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport Datetime from \"react-datetime\";\nimport moment from \"moment\";\n\n\nconst MeterTracking = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  let table = createRef();\n  // State\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [meterList, setMeterList] = useState([]);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n  const [spinnerHidden, setSpinnerHidden] = useState(false);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined)\n\n  //Query From\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n\n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n\n  useEffect(() => {\n    // begin of getting space tree\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        // set the default selected space\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n\n        setSubmitButtonDisabled(false);\n        setSpinnerHidden(true);\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n    // end of getting space tree\n\n  }, []);\n  const DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\n  const nameFormatter = (dataField, { name }) => (\n    <Link to='#'>\n      <Media tag={Flex} align=\"center\">\n        <Media body className=\"ml-2\">\n          <h5 className=\"mb-0 fs--1\">{name}</h5>\n        </Media>\n      </Media>\n    </Link>\n  );\n\n  const actionFormatter = (dataField, { id }) => (\n    // Control your row with this id\n    // todo: add edit meter function\n    <UncontrolledDropdown>\n      <DropdownToggle color=\"link\" size=\"sm\" className=\"text-600 btn-reveal mr-3\">\n        <FontAwesomeIcon icon=\"ellipsis-h\" className=\"fs--1\" />\n      </DropdownToggle>\n      <DropdownMenu right className=\"border py-2\">\n        <DropdownItem onClick={() => console.log('Edit: ', id)}>{t('Edit Meter')}</DropdownItem>\n      </DropdownMenu>\n    </UncontrolledDropdown>\n  );\n\n  const columns = [\n    {\n      dataField: 'metername',\n      headerClasses: 'border-0',\n      text: t('Name'),\n      classes: 'border-0 py-2 align-middle',\n      formatter: nameFormatter,\n      sort: true\n    },\n    {\n      dataField: 'space',\n      headerClasses: 'border-0',\n      text: t('Space'),\n      classes: 'border-0 py-2 align-middle',\n      sort: true\n    },\n    {\n      dataField: 'costcenter',\n      headerClasses: 'border-0',\n      text: t('Cost Center'),\n      classes: 'border-0 py-2 align-middle',\n      sort: true\n    },\n    {\n      dataField: 'energycategory',\n      headerClasses: 'border-0',\n      text: t('Energy Category'),\n      classes: 'border-0 py-2 align-middle',\n      sort: true\n    },\n    {\n      dataField: 'description',\n      headerClasses: 'border-0',\n      text: t('Description'),\n      classes: 'border-0 py-2 align-middle',\n      sort: true\n    },\n    {\n      dataField: 'startvalue',\n      headerClasses: 'border-0',\n      text: t('Start Value'),\n      classes: 'border-0 py-2 align-middle',\n      sort: true\n    },\n    {\n      dataField: 'endvalue',\n      headerClasses: 'border-0',\n      text: t('End Value'),\n      classes: 'border-0 py-2 align-middle',\n      sort: true\n    },\n    {\n      dataField: '',\n      headerClasses: 'border-0',\n      text: '',\n      classes: 'border-0 py-2 align-middle',\n      formatter: actionFormatter,\n      align: 'right'\n    }\n  ];\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n    setMeterList([]);\n    setExportButtonHidden(true);\n    setSubmitButtonDisabled(false);\n  };\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    setMeterList([]);\n\n    let isResponseOK = false;\n      fetch(APIBaseURL + '/reports/metertracking?' +\n        'spaceid=' + selectedSpaceID +\n        '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n        '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n        method: 'GET',\n        headers: {\n          \"Content-type\": \"application/json\",\n          \"User-UUID\": getCookieValue('user_uuid'),\n          \"Token\": getCookieValue('token')\n        },\n        body: null,\n\n      }).then(response => {\n        if (response.ok) {\n          isResponseOK = true;\n        }\n        return response.json();\n      }).then(json => {\n        if (isResponseOK) {\n          let meters = [];\n          json['meters'].forEach((currentValue, index) => {\n            meters.push({\n              'id': currentValue['id'],\n              'name': currentValue['meter_name'],\n              'space': currentValue['space_name'],\n              'costcenter': currentValue['cost_center_name'],\n              'energycategory': currentValue['energy_category_name'],\n              'description': currentValue['description'],\n              'startvalue': currentValue['start_value'],\n              'endvalue': currentValue['end_value']});\n          });\n          setMeterList(meters);\n\n          setExcelBytesBase64(json['excel_bytes_base64']);\n\n          // hide spinner\n          setSpinnerHidden(true);\n          // show export buttion\n          setExportButtonHidden(false);\n\n          setSubmitButtonDisabled(false);\n        } else {\n          toast.error(json.description)\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n  };\n\n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'metertracking.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Meter Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Meter Tracking')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>  \n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <DetailedDataTable data={meterList} title={t('Meter List')} columns={columns} pagesize={50} >\n      </DetailedDataTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(MeterTracking));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport SharePie from '../common/SharePie';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\nconst TenantEnergyCategory = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [tenantList, setTenantList] = useState([]);\n  const [selectedTenant, setSelectedTenant] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n      \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n  //Results\n  const [timeOfUseShareData, setTimeOfUseShareData] = useState([]);\n  const [TCEShareData, setTCEShareData] = useState([]);\n  const [TCO2EShareData, setTCO2EShareData] = useState([]);\n\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [totalInTCE, setTotalInTCE] = useState({});\n  const [totalInTCO2E, setTotalInTCO2E] = useState({});\n  const [tenantLineChartLabels, setTenantLineChartLabels] = useState([]);\n  const [tenantLineChartData, setTenantLineChartData] = useState({});\n  const [tenantLineChartOptions, setTenantLineChartOptions] = useState([]);\n  \n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n  \n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Tenants by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/tenants', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setTenantList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedTenant(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedTenant(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Tenants by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/tenants', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setTenantList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedTenant(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedTenant(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedTenant);\n    console.log(comparisonType);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    \n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n    \n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/tenantenergycategory?' +\n      'tenantid=' + selectedTenant +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n\n        let cardSummaryArray = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals'][index];\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['subtotal_per_unit_area'] = json['reporting_period']['subtotals_per_unit_area'][index];\n          cardSummaryArray.push(cardSummaryItem);\n        });\n        setCardSummaryList(cardSummaryArray);\n        \n        let timeOfUseArray = [];\n        json['reporting_period']['energy_category_ids'].forEach((currentValue, index) => {\n          if(currentValue == 1) {\n            // energy_category_id 1 electricity\n            let timeOfUseItem = {}\n            timeOfUseItem['id'] = 1;\n            timeOfUseItem['name'] =  t('Top-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['toppeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n            \n            timeOfUseItem = {}\n            timeOfUseItem['id'] = 2;\n            timeOfUseItem['name'] =  t('On-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['onpeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n\n            timeOfUseItem = {}\n            timeOfUseItem['id'] = 3;\n            timeOfUseItem['name'] =  t('Mid-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['midpeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n\n            timeOfUseItem = {}\n            timeOfUseItem['id'] = 4;\n            timeOfUseItem['name'] =  t('Off-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['offpeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n          }\n        });\n        setTimeOfUseShareData(timeOfUseArray);\n\n        \n        let totalInTCE = {}; \n        totalInTCE['value'] = json['reporting_period']['total_in_kgce'] / 1000; // convert from kg to t\n        totalInTCE['increment_rate'] = parseFloat(json['reporting_period']['increment_rate_in_kgce'] * 100).toFixed(2) + \"%\";\n        totalInTCE['value_per_unit_area'] = json['reporting_period']['total_in_kgce_per_unit_area'] / 1000; // convert from kg to t\n        setTotalInTCE(totalInTCE);\n\n        let totalInTCO2E = {}; \n        totalInTCO2E['value'] = json['reporting_period']['total_in_kgco2e'] / 1000; // convert from kg to t\n        totalInTCO2E['increment_rate'] = parseFloat(json['reporting_period']['increment_rate_in_kgco2e'] * 100).toFixed(2) + \"%\";\n        totalInTCO2E['value_per_unit_area'] = json['reporting_period']['total_in_kgco2e_per_unit_area'] / 1000; // convert from kg to t\n        setTotalInTCO2E(totalInTCO2E);\n\n        let TCEDataArray = [];\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let TCEDataItem = {}\n          TCEDataItem['id'] = index;\n          TCEDataItem['name'] = currentValue;\n          TCEDataItem['value'] = json['reporting_period']['subtotals_in_kgce'][index] / 1000; // convert from kg to t\n          TCEDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          TCEDataArray.push(TCEDataItem);\n        });\n        setTCEShareData(TCEDataArray);\n\n        let TCO2EDataArray = [];\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let TCO2EDataItem = {}\n          TCO2EDataItem['id'] = index;\n          TCO2EDataItem['name'] = currentValue;\n          TCO2EDataItem['value'] = json['reporting_period']['subtotals_in_kgco2e'][index] / 1000; // convert from kg to t\n          TCO2EDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          TCO2EDataArray.push(TCO2EDataItem);\n        });\n        setTCO2EShareData(TCO2EDataArray);\n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setTenantLineChartLabels(timestamps);\n        \n        let values = {}\n        json['reporting_period']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setTenantLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setTenantLineChartOptions(names);\n       \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n        \n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values'][energyCategoryIndex][timestampIndex].toFixed(2);\n            });\n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\n            detailed_value['a' + index] = currentValue.toFixed(2);\n          });\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        })\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          })\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false)\n  \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n      \n  };\n\n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'tenantenergycategory.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Tenant Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Energy Category Data')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"tenantSelect\">\n                    {t('Tenant')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"tenantSelect\" name=\"tenantSelect\" onChange={({ target }) => setSelectedTenant(target.value)}\n                  >\n                    {tenantList.map((tenant, index) => (\n                      <option value={tenant.value} key={tenant.value}>\n                        {tenant.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"card-deck\">\n        {cardSummaryList.map(cardSummaryItem => (\n          <CardSummary key={cardSummaryItem['name']}\n            rate={cardSummaryItem['increment_rate']}\n            title={t('Reporting Period Consumption CATEGORY UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['subtotal_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        ))}\n       \n        <CardSummary \n          rate={totalInTCE['increment_rate'] || ''} \n          title={t('Reporting Period Consumption CATEGORY UNIT', { 'CATEGORY': t('Ton of Standard Coal'), 'UNIT': '(TCE)' })}\n          color=\"warning\" \n          footnote={t('Per Unit Area')} \n          footvalue={totalInTCE['value_per_unit_area']} \n          footunit=\"(TCE/M²)\">\n          {totalInTCE['value'] && <CountUp end={totalInTCE['value']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n        </CardSummary>\n        <CardSummary \n          rate={totalInTCO2E['increment_rate'] || ''} \n          title={t('Reporting Period Consumption CATEGORY UNIT', { 'CATEGORY': t('Ton of Carbon Dioxide Emissions'), 'UNIT': '(TCO2E)' })}\n          color=\"warning\" \n          footnote={t('Per Unit Area')} \n          footvalue={totalInTCO2E['value_per_unit_area']} \n          footunit=\"(TCO2E/M²)\">\n          {totalInTCO2E['value'] && <CountUp end={totalInTCO2E['value']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n        </CardSummary>\n      </div>\n      <Row noGutters>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={timeOfUseShareData} title={t('Electricity Consumption by Time-Of-Use')} />\n        </Col>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={TCEShareData} title={t('Ton of Standard Coal by Energy Category')} />\n        </Col>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={TCO2EShareData} title={t('Ton of Carbon Dioxide Emissions by Energy Category')} />\n        </Col>\n      </Row>\n      <LineChart reportingTitle={t('Reporting Period Consumption CATEGORY VALUE UNIT', { 'CATEGORY': null, 'VALUE': null, 'UNIT': null })}\n        baseTitle=''\n        labels={tenantLineChartLabels}\n        data={tenantLineChartData}\n        options={tenantLineChartOptions}>\n      </LineChart>\n\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(TenantEnergyCategory));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport SharePie from '../common/SharePie';\nimport LineChart from '../common/LineChart';\nimport loadable from '@loadable/component';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\nconst TenantEnergyItem = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [tenantList, setTenantList] = useState([]);\n  const [selectedTenant, setSelectedTenant] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n    \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n  //Results\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [sharePieList, setSharePieList] = useState([]);\n  const [tenantLineChartLabels, setTenantLineChartLabels] = useState([]);\n  const [tenantLineChartData, setTenantLineChartData] = useState({});\n  const [tenantLineChartOptions, setTenantLineChartOptions] = useState([]);\n  \n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n  \n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Tenants by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/tenants', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setTenantList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedTenant(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedTenant(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Tenants by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/tenants', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setTenantList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedTenant(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedTenant(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedTenant);\n    console.log(comparisonType);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n      \n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/tenantenergyitem?' +\n      'tenantid=' + selectedTenant +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n\n        let cardSummaryArray = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['energy_category_name'] = json['reporting_period']['energy_category_names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals'][index];\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['subtotal_per_unit_area'] = json['reporting_period']['subtotals_per_unit_area'][index];\n          cardSummaryArray.push(cardSummaryItem);\n        });\n        setCardSummaryList(cardSummaryArray);\n        \n        let sharePieDict = {}\n        let energyCategoryDict = {};\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let sharePieSubItem = {}\n          sharePieSubItem['id'] = index;\n          sharePieSubItem['name'] = json['reporting_period']['names'][index];\n          sharePieSubItem['value'] = json['reporting_period']['subtotals'][index];\n          sharePieSubItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          \n          let current_energy_category_id = json['reporting_period']['energy_category_ids'][index]\n          if (current_energy_category_id in sharePieDict) {\n            sharePieDict[current_energy_category_id].push(sharePieSubItem);\n          } else {\n            sharePieDict[current_energy_category_id] = [];\n            sharePieDict[current_energy_category_id].push(sharePieSubItem);\n          }\n\n          if (!(current_energy_category_id in energyCategoryDict)) {\n            energyCategoryDict[current_energy_category_id] = \n            {'name': json['reporting_period']['energy_category_names'][index],\n             'unit': json['reporting_period']['units'][index],\n            }\n          }\n        });\n        let sharePieArray = [];\n        for (let current_energy_category_id in sharePieDict) {\n          let sharePieItem = {}\n          sharePieItem['data'] = sharePieDict[current_energy_category_id];\n          sharePieItem['energy_category_name'] = energyCategoryDict[current_energy_category_id]['name'];\n          sharePieItem['unit'] = energyCategoryDict[current_energy_category_id]['unit'];\n          sharePieArray.push(sharePieItem);\n        }\n\n        setSharePieList(sharePieArray);\n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setTenantLineChartLabels(timestamps);\n        \n        let values = {}\n        json['reporting_period']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setTenantLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setTenantLineChartOptions(names);\n       \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n      \n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values'][energyCategoryIndex][timestampIndex].toFixed(2);\n            });\n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\n            detailed_value['a' + index] = currentValue.toFixed(2);\n          });\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        })\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          })\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false)\n  \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'tenantenergyitem.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Tenant Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Energy Item Data')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"tenantSelect\">\n                    {t('Tenant')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"tenantSelect\" name=\"tenantSelect\" onChange={({ target }) => setSelectedTenant(target.value)}\n                  >\n                    {tenantList.map((tenant, index) => (\n                      <option value={tenant.value} key={tenant.value}>\n                        {tenant.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"card-deck\">\n        {cardSummaryList.map(cardSummaryItem => (\n          <CardSummary key={cardSummaryItem['name']}\n            rate={cardSummaryItem['increment_rate']}\n            title={t('Reporting Period Consumption ITEM CATEGORY UNIT', { 'ITEM': cardSummaryItem['name'], 'CATEGORY': cardSummaryItem['energy_category_name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['subtotal_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        ))}\n      </div>\n      <Row noGutters>\n        {sharePieList.map(sharePieItem => (\n          <Col key={sharePieItem['energy_category_name']} className=\"mb-3 pr-lg-2 mb-3\">\n            <SharePie key={sharePieItem['energy_category_name']}\n              data={sharePieItem['data']} \n              title={t('CATEGORY UNIT Consumption by Energy Items', { 'CATEGORY': sharePieItem['energy_category_name'], 'UNIT': '(' + sharePieItem['unit'] + ')' })} />\n          </Col>\n        ))}\n      </Row>\n      <LineChart reportingTitle={t('Reporting Period Consumption ITEM CATEGORY VALUE UNIT', { 'ITEM': null, 'CATEGORY': null, 'VALUE': null, 'UNIT': null })}\n        baseTitle=''\n        labels={tenantLineChartLabels}\n        data={tenantLineChartData}\n        options={tenantLineChartOptions}>\n      </LineChart>\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(TenantEnergyItem));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport SharePie from '../common/SharePie';\nimport loadable from '@loadable/component';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\nconst TenantCost = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [tenantList, setTenantList] = useState([]);\n  const [selectedTenant, setSelectedTenant] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n  \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n  \n  //Results\n  const [timeOfUseShareData, setTimeOfUseShareData] = useState([]);\n  const [costShareData, setCostShareData] = useState([]);\n\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [tenantLineChartLabels, setTenantLineChartLabels] = useState([]);\n  const [tenantLineChartData, setTenantLineChartData] = useState({});\n  const [tenantLineChartOptions, setTenantLineChartOptions] = useState([]);\n  \n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n  \n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json)\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Tenants by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/tenants', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setTenantList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedTenant(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedTenant(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Tenants by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/tenants', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setTenantList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedTenant(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedTenant(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedTenant);\n    console.log(comparisonType);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/tenantcost?' +\n      'tenantid=' + selectedTenant +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n\n        let cardSummaryList = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals'][index];\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['subtotal_per_unit_area'] = json['reporting_period']['subtotals_per_unit_area'][index];\n          cardSummaryList.push(cardSummaryItem);\n        });\n        let cardSummaryItem = {}\n        cardSummaryItem['name'] = t('Total');\n        cardSummaryItem['unit'] = json['reporting_period']['total_unit'];\n        cardSummaryItem['subtotal'] = json['reporting_period']['total'];\n        cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['total_increment_rate'] * 100).toFixed(2) + \"%\";\n        cardSummaryItem['subtotal_per_unit_area'] = json['reporting_period']['total_per_unit_area'];\n        cardSummaryList.push(cardSummaryItem);\n        setCardSummaryList(cardSummaryList);\n\n        let timeOfUseArray = [];\n        json['reporting_period']['energy_category_ids'].forEach((currentValue, index) => {\n          if(currentValue == 1) {\n            // energy_category_id 1 electricity\n            let timeOfUseItem = {}\n            timeOfUseItem['id'] = 1;\n            timeOfUseItem['name'] =  t('Top-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['toppeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n            \n            timeOfUseItem = {}\n            timeOfUseItem['id'] = 2;\n            timeOfUseItem['name'] =  t('On-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['onpeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n\n            timeOfUseItem = {}\n            timeOfUseItem['id'] = 3;\n            timeOfUseItem['name'] =  t('Mid-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['midpeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n\n            timeOfUseItem = {}\n            timeOfUseItem['id'] = 4;\n            timeOfUseItem['name'] =  t('Off-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['offpeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n          }\n        });\n        setTimeOfUseShareData(timeOfUseArray);\n\n        let costDataArray = [];\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let costDataItem = {}\n          costDataItem['id'] = index;\n          costDataItem['name'] = currentValue;\n          costDataItem['value'] = json['reporting_period']['subtotals'][index];\n          costDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          costDataArray.push(costDataItem);\n        });\n        setCostShareData(costDataArray);\n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setTenantLineChartLabels(timestamps);\n\n        let values = {}\n        json['reporting_period']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setTenantLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setTenantLineChartOptions(names);\n\n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n\n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            let total_current_timstamp = 0.0;\n            json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values'][energyCategoryIndex][timestampIndex].toFixed(2);\n              total_current_timstamp += json['reporting_period']['values'][energyCategoryIndex][timestampIndex];\n            });\n            detailed_value['total'] = total_current_timstamp.toFixed(2);\n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        let total_of_subtotals = 0.0;\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\n            detailed_value['a' + index] = currentValue.toFixed(2);\n            total_of_subtotals += currentValue\n          });\n        detailed_value['total'] = total_of_subtotals.toFixed(2);\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        });\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          });\n        });\n        detailed_column_list.push({\n          dataField: 'total',\n          text: t('Total') + ' (' + json['reporting_period']['total_unit'] + ')',\n          sort: true\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n      \n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false)\n\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'tenantcost.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Tenant Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Cost')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"tenantSelect\">\n                    {t('Tenant')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"tenantSelect\" name=\"tenantSelect\" onChange={({ target }) => setSelectedTenant(target.value)}\n                  >\n                    {tenantList.map((tenant, index) => (\n                      <option value={tenant.value} key={tenant.value}>\n                        {tenant.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"card-deck\">\n        {cardSummaryList.map(cardSummaryItem => (\n          <CardSummary key={cardSummaryItem['name']}\n            rate={cardSummaryItem['increment_rate']}\n            title={t('Reporting Period Costs CATEGORY UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['subtotal_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        ))}\n      </div>\n      <Row noGutters>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={timeOfUseShareData} title={t('Electricity Cost by Time-Of-Use')} />\n        </Col>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={costShareData} title={t('Costs by Energy Category')} />\n        </Col>\n      </Row>\n      <LineChart reportingTitle={t('Reporting Period Costs CATEGORY VALUE UNIT', { 'CATEGORY': null, 'VALUE': null, 'UNIT': null })}\n        baseTitle=''\n        labels={tenantLineChartLabels}\n        data={tenantLineChartData}\n        options={tenantLineChartOptions}>\n      </LineChart>\n\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(TenantCost));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\nconst TenantLoad = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [tenantList, setTenantList] = useState([]);\n  const [selectedTenant, setSelectedTenant] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n      \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n  //Results\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [tenantLineChartLabels, setTenantLineChartLabels] = useState([]);\n  const [tenantLineChartData, setTenantLineChartData] = useState({});\n  const [tenantLineChartOptions, setTenantLineChartOptions] = useState([]);\n  \n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n  \n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Tenants by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/tenants', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setTenantList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedTenant(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedTenant(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Tenants by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/tenants', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setTenantList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedTenant(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedTenant(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedTenant);\n    console.log(comparisonType);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n        \n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n        \n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/tenantload?' +\n      'tenantid=' + selectedTenant +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n \n        let cardSummaryArray = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['average'] = json['reporting_period']['averages'][index];\n          cardSummaryItem['average_increment_rate'] = parseFloat(json['reporting_period']['averages_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['average_per_unit_area'] = json['reporting_period']['averages_per_unit_area'][index];\n          cardSummaryItem['maximum'] = json['reporting_period']['maximums'][index];\n          cardSummaryItem['maximum_increment_rate'] = parseFloat(json['reporting_period']['maximums_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['maximum_per_unit_area'] = json['reporting_period']['maximums_per_unit_area'][index];\n          cardSummaryItem['factor'] = json['reporting_period']['factors'][index];\n          cardSummaryItem['factor_increment_rate'] = parseFloat(json['reporting_period']['factors_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryArray.push(cardSummaryItem);\n        });\n        setCardSummaryList(cardSummaryArray);\n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setTenantLineChartLabels(timestamps);\n        \n        let values = {}\n        json['reporting_period']['sub_maximums'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setTenantLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + '/H)'});\n        });\n        setTenantLineChartOptions(names);\n      \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n      \n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            json['reporting_period']['sub_averages'].forEach((currentValue, energyCategoryIndex) => {\n              if (json['reporting_period']['sub_averages'][energyCategoryIndex][timestampIndex] != null) {\n                detailed_value['a' + 2 * energyCategoryIndex] = json['reporting_period']['sub_averages'][energyCategoryIndex][timestampIndex].toFixed(2);\n              } else {\n                detailed_value['a' + 2 * energyCategoryIndex] = '';\n              };  \n            \n              if (json['reporting_period']['sub_maximums'][energyCategoryIndex][timestampIndex] != null) {\n                detailed_value['a' + (2 * energyCategoryIndex + 1)] = json['reporting_period']['sub_maximums'][energyCategoryIndex][timestampIndex].toFixed(2);\n              } else {\n                detailed_value['a' + (2 * energyCategoryIndex + 1)] = '';\n              };            \n            });\n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        })\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + 2 * index,\n            text: currentValue + ' ' + t('Average Load') + ' (' + unit + '/H)',\n            sort: true\n          });\n          detailed_column_list.push({\n            dataField: 'a' + (2 * index + 1),\n            text: currentValue + ' ' + t('Maximum Load') + ' (' + unit + '/H)',\n            sort: true\n          });\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);\n        \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'tenantload.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Tenant Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Load')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"tenantSelect\">\n                    {t('Tenant')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"tenantSelect\" name=\"tenantSelect\" onChange={({ target }) => setSelectedTenant(target.value)}\n                  >\n                    {tenantList.map((tenant, index) => (\n                      <option value={tenant.value} key={tenant.value}>\n                        {tenant.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      {cardSummaryList.map(cardSummaryItem => (\n        <div className=\"card-deck\" key={cardSummaryItem['name']}>\n          <CardSummary key={cardSummaryItem['name'] + 'average'}\n            rate={cardSummaryItem['average_increment_rate']}\n            title={t('Reporting Period CATEGORY Average Load UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + '/H)' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['average_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/H/M²)\"} >\n            {cardSummaryItem['average'] && <CountUp end={cardSummaryItem['average']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'maximum'}\n            rate={cardSummaryItem['maximum_increment_rate']}\n            title={t('Reporting Period CATEGORY Maximum Load UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + '/H)' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['maximum_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/H/M²)\"} >\n            {cardSummaryItem['maximum'] && <CountUp end={cardSummaryItem['maximum']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'factor'}\n            rate={cardSummaryItem['factor_increment_rate']}\n            title={t('Reporting Period CATEGORY Load Factor', { 'CATEGORY': cardSummaryItem['name'] })}\n            color=\"success\" \n            footnote={t('Ratio of Average Load to Maximum Load')} >\n            {cardSummaryItem['factor'] && <CountUp end={cardSummaryItem['factor']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        </div>\n      ))}\n      <LineChart reportingTitle={t('Reporting Period CATEGORY Maximum Load UNIT', { 'CATEGORY': null, 'UNIT': null })}\n        baseTitle=''\n        labels={tenantLineChartLabels}\n        data={tenantLineChartData}\n        options={tenantLineChartOptions}>\n      </LineChart>\n\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(TenantLoad));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\n\nconst TenantStatistics = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [tenantList, setTenantList] = useState([]);\n  const [selectedTenant, setSelectedTenant] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n      \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n  //Results\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [tenantLineChartLabels, setTenantLineChartLabels] = useState([]);\n  const [tenantLineChartData, setTenantLineChartData] = useState({});\n  const [tenantLineChartOptions, setTenantLineChartOptions] = useState([]);\n  \n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n  \n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Tenants by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/tenants', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setTenantList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedTenant(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedTenant(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Tenants by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/tenants', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setTenantList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedTenant(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedTenant(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedTenant);\n    console.log(comparisonType);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n        \n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/tenantstatistics?' +\n      'tenantid=' + selectedTenant +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n              \n        let cardSummaryArray = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['mean'] = json['reporting_period']['means'][index];\n          cardSummaryItem['mean_increment_rate'] = parseFloat(json['reporting_period']['means_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['mean_per_unit_area'] = json['reporting_period']['means_per_unit_area'][index];\n          cardSummaryItem['median'] = json['reporting_period']['medians'][index];\n          cardSummaryItem['median_increment_rate'] = parseFloat(json['reporting_period']['medians_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['median_per_unit_area'] = json['reporting_period']['medians_per_unit_area'][index];\n          cardSummaryItem['minimum'] = json['reporting_period']['minimums'][index];\n          cardSummaryItem['minimum_increment_rate'] = parseFloat(json['reporting_period']['minimums_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['minimum_per_unit_area'] = json['reporting_period']['minimums_per_unit_area'][index];\n          cardSummaryItem['maximum'] = json['reporting_period']['maximums'][index];\n          cardSummaryItem['maximum_increment_rate'] = parseFloat(json['reporting_period']['maximums_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['maximum_per_unit_area'] = json['reporting_period']['maximums_per_unit_area'][index];\n          cardSummaryItem['stdev'] = json['reporting_period']['stdevs'][index];\n          cardSummaryItem['stdev_increment_rate'] = parseFloat(json['reporting_period']['stdevs_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['stdev_per_unit_area'] = json['reporting_period']['stdevs_per_unit_area'][index];\n          cardSummaryItem['variance'] = json['reporting_period']['variances'][index];\n          cardSummaryItem['variance_increment_rate'] = parseFloat(json['reporting_period']['variances_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['variance_per_unit_area'] = json['reporting_period']['variances_per_unit_area'][index];          \n          cardSummaryArray.push(cardSummaryItem);\n        });\n        setCardSummaryList(cardSummaryArray);\n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setTenantLineChartLabels(timestamps);\n        \n        let values = {}\n        json['reporting_period']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setTenantLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setTenantLineChartOptions(names);\n      \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n      \n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values'][energyCategoryIndex][timestampIndex].toFixed(2);\n            });\n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\n            detailed_value['a' + index] = currentValue.toFixed(2);\n          });\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        })\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          })\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);\n          \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'tenantstatistics.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Tenant Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Statistics')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"tenantSelect\">\n                    {t('Tenant')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"tenantSelect\" name=\"tenantSelect\" onChange={({ target }) => setSelectedTenant(target.value)}\n                  >\n                    {tenantList.map((tenant, index) => (\n                      <option value={tenant.value} key={tenant.value}>\n                        {tenant.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      {cardSummaryList.map(cardSummaryItem => (\n        <div className=\"card-deck\" key={cardSummaryItem['name']}>\n          <CardSummary key={cardSummaryItem['name'] + 'mean'}\n            rate={cardSummaryItem['mean_increment_rate']}\n            title={t('Reporting Period CATEGORY Mean UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['mean_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['mean'] && <CountUp end={cardSummaryItem['mean']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'median'}\n            rate={cardSummaryItem['median_increment_rate']}\n            title={t('Reporting Period CATEGORY Median UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['median_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['median'] && <CountUp end={cardSummaryItem['median']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'minimum'}\n            rate={cardSummaryItem['minimum_increment_rate']}\n            title={t('Reporting Period CATEGORY Minimum UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['minimum_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['minimum'] && <CountUp end={cardSummaryItem['minimum']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'maximum'}\n            rate={cardSummaryItem['maximum_increment_rate']}\n            title={t('Reporting Period CATEGORY Maximum UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['maximum_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['maximum'] && <CountUp end={cardSummaryItem['maximum']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'stdev'}\n            rate={cardSummaryItem['stdev_increment_rate']}\n            title={t('Reporting Period CATEGORY Stdev UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['stdev_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['stdev'] && <CountUp end={cardSummaryItem['stdev']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'variance'}\n            rate={cardSummaryItem['variance_increment_rate']}\n            title={t('Reporting Period CATEGORY Variance UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\"\n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['variance_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['variance'] && <CountUp end={cardSummaryItem['variance']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        </div>\n      ))}\n      <LineChart reportingTitle={t('Reporting Period Consumption CATEGORY VALUE UNIT', { 'CATEGORY': null, 'VALUE': null, 'UNIT': null })}\n        baseTitle=''\n        labels={tenantLineChartLabels}\n        data={tenantLineChartData}\n        options={tenantLineChartOptions}>\n      </LineChart>\n\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(TenantStatistics));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport SharePie from '../common/SharePie';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\n\nconst TenantSaving = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [tenantList, setTenantList] = useState([]);\n  const [selectedTenant, setSelectedTenant] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n  \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n  //Results\n  const [TCEShareData, setTCEShareData] = useState([]);\n  const [TCO2EShareData, setTCO2EShareData] = useState([]);\n\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [totalInTCE, setTotalInTCE] = useState({});\n  const [totalInTCO2E, setTotalInTCO2E] = useState({});\n  const [tenantLineChartLabels, setTenantLineChartLabels] = useState([]);\n  const [tenantLineChartData, setTenantLineChartData] = useState({});\n  const [tenantLineChartOptions, setTenantLineChartOptions] = useState([]);\n  \n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n  \n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Tenants by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/tenants', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setTenantList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedTenant(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedTenant(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Tenants by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/tenants', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setTenantList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedTenant(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedTenant(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedTenant);\n    console.log(comparisonType);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/tenantsaving?' +\n      'tenantid=' + selectedTenant +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n\n        let cardSummaryArray = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals_saving'][index];\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates_saving'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['subtotal_per_unit_area'] = json['reporting_period']['subtotals_per_unit_area_saving'][index];\n          cardSummaryArray.push(cardSummaryItem);\n        });\n        setCardSummaryList(cardSummaryArray);\n\n        let totalInTCE = {}; \n        totalInTCE['value'] = json['reporting_period']['total_in_kgce_saving'] / 1000; // convert from kg to t\n        totalInTCE['increment_rate'] = parseFloat(json['reporting_period']['increment_rate_in_kgce_saving'] * 100).toFixed(2) + \"%\";\n        totalInTCE['value_per_unit_area'] = json['reporting_period']['total_in_kgce_per_unit_area_saving'] / 1000; // convert from kg to t\n        setTotalInTCE(totalInTCE);\n\n        let totalInTCO2E = {}; \n        totalInTCO2E['value'] = json['reporting_period']['total_in_kgco2e_saving'] / 1000; // convert from kg to t\n        totalInTCO2E['increment_rate'] = parseFloat(json['reporting_period']['increment_rate_in_kgco2e_saving'] * 100).toFixed(2) + \"%\";\n        totalInTCO2E['value_per_unit_area'] = json['reporting_period']['total_in_kgco2e_per_unit_area_saving'] / 1000; // convert from kg to t\n        setTotalInTCO2E(totalInTCO2E);\n\n        let TCEDataArray = [];\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let TCEDataItem = {}\n          TCEDataItem['id'] = index;\n          TCEDataItem['name'] = currentValue;\n          TCEDataItem['value'] = json['reporting_period']['subtotals_in_kgce_saving'][index] / 1000; // convert from kg to t\n          TCEDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          TCEDataArray.push(TCEDataItem);\n        });\n        setTCEShareData(TCEDataArray);\n\n        let TCO2EDataArray = [];\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let TCO2EDataItem = {}\n          TCO2EDataItem['id'] = index;\n          TCO2EDataItem['name'] = currentValue;\n          TCO2EDataItem['value'] = json['reporting_period']['subtotals_in_kgco2e_saving'][index] / 1000; // convert from kg to t\n          TCO2EDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          TCO2EDataArray.push(TCO2EDataItem);\n        });\n        setTCO2EShareData(TCO2EDataArray);\n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setTenantLineChartLabels(timestamps);\n        \n        let values = {}\n        json['reporting_period']['values_saving'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setTenantLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setTenantLineChartOptions(names);\n       \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n        \n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            json['reporting_period']['values_saving'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values_saving'][energyCategoryIndex][timestampIndex].toFixed(2);\n            });\n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        json['reporting_period']['subtotals_saving'].forEach((currentValue, index) => {\n            detailed_value['a' + index] = currentValue.toFixed(2);\n          });\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        })\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          })\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n      \n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);\n        \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'tenantsaving.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Tenant Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Saving')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"tenantSelect\">\n                    {t('Tenant')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"tenantSelect\" name=\"tenantSelect\" onChange={({ target }) => setSelectedTenant(target.value)}\n                  >\n                    {tenantList.map((tenant, index) => (\n                      <option value={tenant.value} key={tenant.value}>\n                        {tenant.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"card-deck\">\n        {cardSummaryList.map(cardSummaryItem => (\n          <CardSummary key={cardSummaryItem['name']}\n            rate={cardSummaryItem['increment_rate']}\n            title={t('Reporting Period Savings CATEGORY (Baseline - Actual) UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['subtotal_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        ))}\n       \n        <CardSummary \n          rate={totalInTCE['increment_rate'] || ''} \n          title={t('Reporting Period Savings CATEGORY (Baseline - Actual) UNIT', { 'CATEGORY': t('Ton of Standard Coal'), 'UNIT': '(TCE)' })}\n          color=\"warning\" \n          footnote={t('Per Unit Area')} \n          footvalue={totalInTCE['value_per_unit_area']} \n          footunit=\"(TCE/M²)\">\n          {totalInTCE['value'] && <CountUp end={totalInTCE['value']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n        </CardSummary>\n        <CardSummary \n          rate={totalInTCO2E['increment_rate'] || ''} \n          title={t('Reporting Period Decreased CATEGORY (Baseline - Actual) UNIT', { 'CATEGORY': t('Ton of Carbon Dioxide Emissions'), 'UNIT': '(TCO2E)' })}\n          color=\"warning\" \n          footnote={t('Per Unit Area')} \n          footvalue={totalInTCO2E['value_per_unit_area']} \n          footunit=\"(TCO2E/M²)\">\n          {totalInTCO2E['value'] && <CountUp end={totalInTCO2E['value']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n        </CardSummary>\n      </div>\n      <Row noGutters>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={TCEShareData} title={t('Ton of Standard Coal by Energy Category')} />\n        </Col>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={TCO2EShareData} title={t('Ton of Carbon Dioxide Emissions by Energy Category')} />\n        </Col>\n      </Row>\n      <LineChart reportingTitle={t('Reporting Period Savings CATEGORY VALUE UNIT', { 'CATEGORY': null, 'VALUE': null, 'UNIT': null })}\n        baseTitle=''\n        labels={tenantLineChartLabels}\n        data={tenantLineChartData}\n        options={tenantLineChartOptions}>\n      </LineChart>\n\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(TenantSaving));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  ButtonGroup,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  CardFooter,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Table,\n  Spinner,\n} from 'reactstrap';\nimport Loader from '../../common/Loader';\nimport createMarkup from '../../../helpers/createMarkup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport Cascader from 'rc-cascader';\nimport { isIterableArray } from '../../../helpers/utils';\nimport logoInvoice from '../../../assets/img/logos/myems.png';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\n\n\nconst formatCurrency = (number, currency) =>\n  `${currency}${number.toFixed(2).replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1,')}`;\n\nconst ProductTr = ({ name, description, startdate, enddate, subtotalinput, unit, subtotalcost }) => {\n  return (\n    <tr>\n      <td className=\"align-middle\">\n        <h6 className=\"mb-0 text-nowrap\">{name}</h6>\n        <p className=\"mb-0\">{description}</p>\n      </td>\n      <td className=\"align-middle text-center\">{startdate}</td>\n      <td className=\"align-middle text-center\">{enddate}</td>\n      <td className=\"align-middle text-center\">{subtotalinput.toFixed(3).replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1,')}</td>\n      <td className=\"align-middle text-right\">{unit}</td>\n      <td className=\"align-middle text-right\">{(subtotalcost).toFixed(2).replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1,')}</td>\n    </tr>\n  );\n};\n\nProductTr.propTypes = {\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  startdate: PropTypes.string.isRequired,\n  enddate: PropTypes.string.isRequired,\n  subtotalinput: PropTypes.number.isRequired,\n  unit: PropTypes.string.isRequired,\n  subtotalcost: PropTypes.number.isRequired,\n};\n\nconst InvoiceHeader = ({ institution, logo, address, t }) => (\n  <Row className=\"align-items-center text-center mb-3\">\n    <Col sm={6} className=\"text-sm-left\">\n      <img src={logo} alt=\"invoice\" width={150} />\n    </Col>\n    <Col className=\"text-sm-right mt-3 mt-sm-0\">\n      <h2 className=\"mb-3\">{t('Payment Notice')}</h2>\n      <h5>{institution}</h5>\n      {address && <p className=\"fs--1 mb-0\" dangerouslySetInnerHTML={createMarkup(address)} />}\n    </Col>\n    <Col xs={12}>\n      <hr />\n    </Col>\n  </Row>\n);\n\nInvoiceHeader.propTypes = {\n  institution: PropTypes.string.isRequired,\n  logo: PropTypes.string.isRequired,\n  address: PropTypes.string\n};\n\nconst Invoice = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  //State\n  // Query Parameters\n \n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [tenantList, setTenantList] = useState([]);\n  const [selectedTenant, setSelectedTenant] = useState(undefined);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months').endOf('month'));\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n\n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n  \n  //Results\n  const [invoice, setInvoice] = useState(undefined);\n  const [subtotal, setSubtotal] = useState(0);\n  const [taxRate, setTaxRate] = useState(0.00);\n  const [tax, setTax] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Tenants by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/tenants', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setTenantList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedTenant(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedTenant(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Tenants by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/tenants', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setTenantList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedTenant(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedTenant(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedTenant);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    \n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/tenantbill?' +\n      'tenantid=' + selectedTenant +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json);\n        \n        let productArray = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let productItem = {}\n          productItem['name'] = json['reporting_period']['names'][index];\n          productItem['unit'] = json['reporting_period']['units'][index];\n          productItem['startdate'] = reportingPeriodBeginsDatetime.format('YYYY-MM-DD');\n          productItem['enddate'] = reportingPeriodEndsDatetime.format('YYYY-MM-DD');\n          productItem['subtotalinput'] = json['reporting_period']['subtotals_input'][index];\n          productItem['subtotalcost'] = json['reporting_period']['subtotals_cost'][index];\n          productArray.push(productItem);\n        });\n\n        setInvoice({\n          institution: json['tenant']['name'],\n          logo: logoInvoice,\n          address: json['tenant']['rooms'] + '<br />' + json['tenant']['floors'] + '<br />' + json['tenant']['buildings'],\n          tax: 0.01,\n          currency: json['reporting_period']['currency_unit'],\n          user: {\n            name: json['tenant']['name'],\n            address: json['tenant']['rooms'] + '<br />' + json['tenant']['floors'] + '<br />' + json['tenant']['buildings'],\n            email: json['tenant']['email'],\n            cell: json['tenant']['phone']\n          },\n          summary: {\n            invoice_no: current_moment.format('YYYYMMDDHHmmss'),\n            lease_number: json['tenant']['lease_number'],\n            invoice_date: current_moment.format('YYYY-MM-DD'),\n            payment_due: current_moment.clone().add(7, 'days').format('YYYY-MM-DD'),\n            amount_due: json['reporting_period']['total_cost']\n          },\n          products: productArray\n        });\n\n        setSubtotal(json['reporting_period']['total_cost']);\n        \n        setTax(json['reporting_period']['total_cost'] * taxRate);\n        \n        setTotal(json['reporting_period']['total_cost'] * (1.00 + taxRate));\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n  \n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false)\n        \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'tenantbill.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Tenant Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Tenant Bill')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"tenantSelect\">\n                    {t('Tenant')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"tenantSelect\" name=\"tenantSelect\" onChange={({ target }) => setSelectedTenant(target.value)}\n                  >\n                    {tenantList.map((tenant, index) => (\n                      <option value={tenant.value} key={tenant.value}>\n                        {tenant.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <Card className=\"mb-3\">\n        {invoice !== undefined &&\n        <CardBody>\n          <Row className=\"justify-content-between align-items-center\">\n            <Col md>\n              <h5 className=\"mb-2 mb-md-0\">{t('Lease Contract Number')}: {invoice.summary.lease_number}</h5>\n            </Col>\n          </Row>\n        </CardBody>\n        }\n      </Card>\n\n      <Card>\n        {invoice !== undefined &&\n        <CardBody>\n          <InvoiceHeader institution={invoice.institution} logo={invoice.logo} address={invoice.address} t={t} />\n          <Row className=\"justify-content-between align-items-center\">\n            <Col>\n              <h6 className=\"text-500\">{t('Bill To')}</h6>\n              <h5>{invoice.user.name}</h5>\n              <p className=\"fs--1\" dangerouslySetInnerHTML={createMarkup(invoice.user.address)} />\n              <p className=\"fs--1\">\n                <a href={`mailto:${invoice.user.email}`}>{invoice.user.email}</a>\n                <br />\n                <a href={`tel:${invoice.user.cell.split('-').join('')}`}>{invoice.user.cell}</a>\n              </p>\n            </Col>\n            <Col sm=\"auto\" className=\"ml-auto\">\n              <div className=\"table-responsive\">\n                <Table size=\"sm\" borderless className=\"fs--1\">\n                  <tbody>\n                    <tr>\n                      <th className=\"text-sm-right\">{t('Bill Number')}:</th>\n                      <td>{invoice.summary.invoice_no}</td>\n                    </tr>\n                    <tr>\n                      <th className=\"text-sm-right\">{t('Lease Contract Number')}:</th>\n                      <td>{invoice.summary.lease_number}</td>\n                    </tr>\n                    <tr>\n                      <th className=\"text-sm-right\">{t('Bill Date')}:</th>\n                      <td>{invoice.summary.invoice_date}</td>\n                    </tr>\n                    <tr>\n                      <th className=\"text-sm-right\">{t('Payment Due Date')}:</th>\n                      <td>{invoice.summary.payment_due}</td>\n                    </tr>\n                    <tr className=\"alert-success font-weight-bold\">\n                      <th className=\"text-sm-right\">{t('Amount Payable')}:</th>\n                      <td>{formatCurrency(invoice.summary.amount_due, invoice.currency)}</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </div>\n            </Col>\n          </Row>\n          <div className=\"table-responsive mt-4 fs--1\">\n            <Table striped className=\"border-bottom\">\n              <thead>\n                <tr className=\"bg-primary text-white\">\n                  <th className=\"border-0\">{t('Energy Category')}</th>\n                  <th className=\"border-0 text-center\">{t('Billing Period Start')}</th>\n                  <th className=\"border-0 text-center\">{t('Billing Period End')}</th>\n                  <th className=\"border-0 text-center\">{t('Quantity')}</th>\n                  <th className=\"border-0 text-right\">{t('Unit')}</th>\n                  <th className=\"border-0 text-right\">{t('Amount')}</th>\n                </tr>\n              </thead>\n              <tbody>\n                {isIterableArray(invoice.products) &&\n                  invoice.products.map((product, index) => <ProductTr {...product} key={index} />)}\n              </tbody>\n            </Table>\n          </div>\n          <Row noGutters className=\"justify-content-end\">\n            <Col xs=\"auto\">\n              <Table size=\"sm\" borderless className=\"fs--1 text-right\">\n                <tbody>\n                  <tr>\n                    <th className=\"text-900\">{t('Subtotal')}:</th>\n                    <td className=\"font-weight-semi-bold\">{formatCurrency(subtotal, invoice.currency)}</td>\n                  </tr>\n                  <tr>\n                    <th className=\"text-900\">{t('VAT Output Tax')}:</th>\n                    <td className=\"font-weight-semi-bold\">{formatCurrency(tax, invoice.currency)}</td>\n                  </tr>\n                  <tr className=\"border-top\">\n                    <th className=\"text-900\">{t('Total Amount Payable')}:</th>\n                    <td className=\"font-weight-semi-bold\">{formatCurrency(total, invoice.currency)}</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </CardBody>\n        }\n        \n        {//todo: get the bank account infomation from API\n        /* <CardFooter className=\"bg-light\">\n          <p className=\"fs--1 mb-0\">\n            <strong>{t('Please make sure to pay on or before the payment due date above')}, {t('Send money to the following account')}:</strong><br />\n            {t('Acount Name')}: MyEMS商场有限公司<br />\n            {t('Bank Name')}: 中国银行股份有限公司北京王府井支行<br />\n            {t('Bank Address')}: 中国北京市东城区王府井大街<br />\n            {t('RMB Account')}: 1188228822882288<br />\n          </p>\n        </CardFooter> */}\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(Invoice));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\n\nconst TenantBatch = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [tenantList, setTenantList] = useState([]);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n      \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(false);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n  //Results\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState(\n    [{dataField: 'name', text: t('Name'), sort: true}, {dataField: 'space', text: t('Space'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        // set the default selected space\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n\n        setSubmitButtonDisabled(false);\n        setSpinnerHidden(true);\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n    setTenantList([]);\n    setExportButtonHidden(true);\n    setSubmitButtonDisabled(false);\n  }\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n \n    // Reinitialize tables\n    setTenantList([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/tenantbatch?' +\n      'spaceid=' + selectedSpaceID +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n        let tenants = [];\n        if (json['tenants'].length > 0) {\n          json['tenants'].forEach((currentTenant, index) => {\n            let detailed_value = {};\n            detailed_value['id'] = currentTenant['id'];\n            detailed_value['name'] = currentTenant['tenant_name'];\n            detailed_value['space'] = currentTenant['space_name'];\n            detailed_value['costcenter'] = currentTenant['cost_center_name'];\n            currentTenant['values'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = currentValue.toFixed(2);\n            });\n            tenants.push(detailed_value);\n          });\n        };\n\n        setTenantList(tenants);\n\n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'name',\n          text: t('Name'),\n          sort: true\n        });\n        detailed_column_list.push({\n          dataField: 'space',\n          text: t('Space'),\n          sort: true\n        });\n        json['energycategories'].forEach((currentValue, index) => {\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue['name'] + ' (' + currentValue['unit_of_measure'] + ')',\n            sort: true\n          })\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n\n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);\n          \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'tenantbatch.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Tenant Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Batch Analysis')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              \n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <DetailedDataTable data={tenantList} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(TenantBatch));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport SharePie from '../common/SharePie';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\n\nconst StoreEnergyCategory = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [storeList, setStoreList] = useState([]);\n  const [selectedStore, setSelectedStore] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n\n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n  \n  //Results\n  const [timeOfUseShareData, setTimeOfUseShareData] = useState([]);\n  const [TCEShareData, setTCEShareData] = useState([]);\n  const [TCO2EShareData, setTCO2EShareData] = useState([]);\n\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [totalInTCE, setTotalInTCE] = useState({});\n  const [totalInTCO2E, setTotalInTCO2E] = useState({});\n  const [storeLineChartLabels, setStoreLineChartLabels] = useState([]);\n  const [storeLineChartData, setStoreLineChartData] = useState({});\n  const [storeLineChartOptions, setStoreLineChartOptions] = useState([]);\n\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Stores by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/stores', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setStoreList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedStore(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedStore(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Stores by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/stores', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setStoreList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedStore(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedStore(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedStore);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/storeenergycategory?' +\n      'storeid=' + selectedStore +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n\n        let cardSummaryArray = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals'][index];\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['subtotal_per_unit_area'] = json['reporting_period']['subtotals_per_unit_area'][index];\n          cardSummaryArray.push(cardSummaryItem);\n        });\n        setCardSummaryList(cardSummaryArray);\n        \n        let timeOfUseArray = [];\n        json['reporting_period']['energy_category_ids'].forEach((currentValue, index) => {\n          if(currentValue == 1) {\n            // energy_category_id 1 electricity\n            let timeOfUseItem = {}\n            timeOfUseItem['id'] = 1;\n            timeOfUseItem['name'] =  t('Top-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['toppeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n            \n            timeOfUseItem = {}\n            timeOfUseItem['id'] = 2;\n            timeOfUseItem['name'] =  t('On-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['onpeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n\n            timeOfUseItem = {}\n            timeOfUseItem['id'] = 3;\n            timeOfUseItem['name'] =  t('Mid-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['midpeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n\n            timeOfUseItem = {}\n            timeOfUseItem['id'] = 4;\n            timeOfUseItem['name'] =  t('Off-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['offpeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n          }\n        });\n        setTimeOfUseShareData(timeOfUseArray);\n\n        \n        let totalInTCE = {}; \n        totalInTCE['value'] = json['reporting_period']['total_in_kgce'] / 1000; // convert from kg to t\n        totalInTCE['increment_rate'] = parseFloat(json['reporting_period']['increment_rate_in_kgce'] * 100).toFixed(2) + \"%\";\n        totalInTCE['value_per_unit_area'] = json['reporting_period']['total_in_kgce_per_unit_area'] / 1000; // convert from kg to t\n        setTotalInTCE(totalInTCE);\n\n        let totalInTCO2E = {}; \n        totalInTCO2E['value'] = json['reporting_period']['total_in_kgco2e'] / 1000; // convert from kg to t\n        totalInTCO2E['increment_rate'] = parseFloat(json['reporting_period']['increment_rate_in_kgco2e'] * 100).toFixed(2) + \"%\";\n        totalInTCO2E['value_per_unit_area'] = json['reporting_period']['total_in_kgco2e_per_unit_area'] / 1000; // convert from kg to t\n        setTotalInTCO2E(totalInTCO2E);\n\n        let TCEDataArray = [];\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let TCEDataItem = {}\n          TCEDataItem['id'] = index;\n          TCEDataItem['name'] = currentValue;\n          TCEDataItem['value'] = json['reporting_period']['subtotals_in_kgce'][index] / 1000; // convert from kg to t\n          TCEDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          TCEDataArray.push(TCEDataItem);\n        });\n        setTCEShareData(TCEDataArray);\n\n        let TCO2EDataArray = [];\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let TCO2EDataItem = {}\n          TCO2EDataItem['id'] = index;\n          TCO2EDataItem['name'] = currentValue;\n          TCO2EDataItem['value'] = json['reporting_period']['subtotals_in_kgco2e'][index] / 1000; // convert from kg to t\n          TCO2EDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          TCO2EDataArray.push(TCO2EDataItem);\n        });\n        setTCO2EShareData(TCO2EDataArray);\n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setStoreLineChartLabels(timestamps);\n        \n        let values = {}\n        json['reporting_period']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setStoreLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setStoreLineChartOptions(names);\n       \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n        \n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values'][energyCategoryIndex][timestampIndex].toFixed(2);\n            });\n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\n            detailed_value['a' + index] = currentValue.toFixed(2);\n          });\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        })\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          })\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false)\n  \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'storeenergycategory.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Store Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Energy Category Data')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"storeSelect\">\n                    {t('Store')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"storeSelect\" name=\"storeSelect\" onChange={({ target }) => setSelectedStore(target.value)}\n                  >\n                    {storeList.map((store, index) => (\n                      <option value={store.value} key={store.value}>\n                        {store.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"card-deck\">\n        {cardSummaryList.map(cardSummaryItem => (\n          <CardSummary key={cardSummaryItem['name']}\n            rate={cardSummaryItem['increment_rate']}\n            title={t('Reporting Period Consumption CATEGORY UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['subtotal_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        ))}\n       \n        <CardSummary \n          rate={totalInTCE['increment_rate'] || ''} \n          title={t('Reporting Period Consumption CATEGORY UNIT', { 'CATEGORY': t('Ton of Standard Coal'), 'UNIT': '(TCE)' })}\n          color=\"warning\" \n          footnote={t('Per Unit Area')} \n          footvalue={totalInTCE['value_per_unit_area']} \n          footunit=\"(TCE/M²)\">\n          {totalInTCE['value'] && <CountUp end={totalInTCE['value']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n        </CardSummary>\n        <CardSummary \n          rate={totalInTCO2E['increment_rate'] || ''} \n          title={t('Reporting Period Consumption CATEGORY UNIT', { 'CATEGORY': t('Ton of Carbon Dioxide Emissions'), 'UNIT': '(TCO2E)' })}\n          color=\"warning\" \n          footnote={t('Per Unit Area')} \n          footvalue={totalInTCO2E['value_per_unit_area']} \n          footunit=\"(TCO2E/M²)\">\n          {totalInTCO2E['value'] && <CountUp end={totalInTCO2E['value']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n        </CardSummary>\n      </div>\n      <Row noGutters>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={timeOfUseShareData} title={t('Electricity Consumption by Time-Of-Use')} />\n        </Col>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={TCEShareData} title={t('Ton of Standard Coal by Energy Category')} />\n        </Col>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={TCO2EShareData} title={t('Ton of Carbon Dioxide Emissions by Energy Category')} />\n        </Col>\n      </Row>\n      <LineChart reportingTitle={t('Reporting Period Consumption CATEGORY VALUE UNIT', { 'CATEGORY': null, 'VALUE': null, 'UNIT': null })}\n        baseTitle=''\n        labels={storeLineChartLabels}\n        data={storeLineChartData}\n        options={storeLineChartOptions}>\n      </LineChart>\n\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(StoreEnergyCategory));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport SharePie from '../common/SharePie';\nimport LineChart from '../common/LineChart';\nimport loadable from '@loadable/component';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\nconst StoreEnergyItem = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [storeList, setStoreList] = useState([]);\n  const [selectedStore, setSelectedStore] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n\n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n  \n  //Results\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [sharePieList, setSharePieList] = useState([]);\n  const [storeLineChartLabels, setStoreLineChartLabels] = useState([]);\n  const [storeLineChartData, setStoreLineChartData] = useState({});\n  const [storeLineChartOptions, setStoreLineChartOptions] = useState([]);\n\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Stores by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/stores', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setStoreList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedStore(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedStore(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Stores by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  \n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/stores', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setStoreList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedStore(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedStore(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedStore);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/storeenergyitem?' +\n      'storeid=' + selectedStore +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n        \n        let cardSummaryArray = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['energy_category_name'] = json['reporting_period']['energy_category_names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals'][index];\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['subtotal_per_unit_area'] = json['reporting_period']['subtotals_per_unit_area'][index];\n          cardSummaryArray.push(cardSummaryItem);\n        });\n        setCardSummaryList(cardSummaryArray);\n        \n        let sharePieDict = {}\n        let energyCategoryDict = {};\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let sharePieSubItem = {}\n          sharePieSubItem['id'] = index;\n          sharePieSubItem['name'] = json['reporting_period']['names'][index];\n          sharePieSubItem['value'] = json['reporting_period']['subtotals'][index];\n          sharePieSubItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          \n          let current_energy_category_id = json['reporting_period']['energy_category_ids'][index]\n          if (current_energy_category_id in sharePieDict) {\n            sharePieDict[current_energy_category_id].push(sharePieSubItem);\n          } else {\n            sharePieDict[current_energy_category_id] = [];\n            sharePieDict[current_energy_category_id].push(sharePieSubItem);\n          }\n\n          if (!(current_energy_category_id in energyCategoryDict)) {\n            energyCategoryDict[current_energy_category_id] = \n            {'name': json['reporting_period']['energy_category_names'][index],\n             'unit': json['reporting_period']['units'][index],\n            }\n          }\n        });\n        let sharePieArray = [];\n        for (let current_energy_category_id in sharePieDict) {\n          let sharePieItem = {}\n          sharePieItem['data'] = sharePieDict[current_energy_category_id];\n          sharePieItem['energy_category_name'] = energyCategoryDict[current_energy_category_id]['name'];\n          sharePieItem['unit'] = energyCategoryDict[current_energy_category_id]['unit'];\n          sharePieArray.push(sharePieItem);\n        }\n\n        setSharePieList(sharePieArray);\n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setStoreLineChartLabels(timestamps);\n        \n        let values = {}\n        json['reporting_period']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setStoreLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setStoreLineChartOptions(names);\n       \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n      \n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values'][energyCategoryIndex][timestampIndex].toFixed(2);\n            });\n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\n            detailed_value['a' + index] = currentValue.toFixed(2);\n          });\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        })\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          })\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false)\n\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'storeenergyitem.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Store Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Energy Item Data')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"storeSelect\">\n                    {t('Store')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"storeSelect\" name=\"storeSelect\" onChange={({ target }) => setSelectedStore(target.value)}\n                  >\n                    {storeList.map((store, index) => (\n                      <option value={store.value} key={store.value}>\n                        {store.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"card-deck\">\n        {cardSummaryList.map(cardSummaryItem => (\n          <CardSummary key={cardSummaryItem['name']}\n            rate={cardSummaryItem['increment_rate']}\n            title={t('Reporting Period Consumption ITEM CATEGORY UNIT', { 'ITEM': cardSummaryItem['name'], 'CATEGORY': cardSummaryItem['energy_category_name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['subtotal_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        ))}\n      </div>\n      <Row noGutters>\n        {sharePieList.map(sharePieItem => (\n          <Col key={sharePieItem['energy_category_name']} className=\"mb-3 pr-lg-2 mb-3\">\n            <SharePie key={sharePieItem['energy_category_name']}\n              data={sharePieItem['data']} \n              title={t('CATEGORY UNIT Consumption by Energy Items', { 'CATEGORY': sharePieItem['energy_category_name'], 'UNIT': '(' + sharePieItem['unit'] + ')' })} />\n          </Col>\n        ))}\n      </Row>\n      <LineChart reportingTitle={t('Reporting Period Consumption ITEM CATEGORY VALUE UNIT', { 'ITEM': null, 'CATEGORY': null, 'VALUE': null, 'UNIT': null })}\n        baseTitle=''\n        labels={storeLineChartLabels}\n        data={storeLineChartData}\n        options={storeLineChartOptions}>\n      </LineChart>\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(StoreEnergyItem));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport SharePie from '../common/SharePie';\nimport loadable from '@loadable/component';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\nconst StoreCost = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [storeList, setStoreList] = useState([]);\n  const [selectedStore, setSelectedStore] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n  \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n  //Results\n  const [timeOfUseShareData, setTimeOfUseShareData] = useState([]);\n  const [costShareData, setCostShareData] = useState([]);\n\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [storeLineChartLabels, setStoreLineChartLabels] = useState([]);\n  const [storeLineChartData, setStoreLineChartData] = useState({});\n  const [storeLineChartOptions, setStoreLineChartOptions] = useState([]);\n  \n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n  \n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Stores by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/stores', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setStoreList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedStore(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedStore(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Stores by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/stores', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setStoreList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedStore(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedStore(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedStore);\n    console.log(comparisonType);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/storecost?' +\n      'storeid=' + selectedStore +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n\n        let cardSummaryList = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals'][index];\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['subtotal_per_unit_area'] = json['reporting_period']['subtotals_per_unit_area'][index];\n          cardSummaryList.push(cardSummaryItem);\n        });\n        let cardSummaryItem = {}\n        cardSummaryItem['name'] = t('Total');\n        cardSummaryItem['unit'] = json['reporting_period']['total_unit'];\n        cardSummaryItem['subtotal'] = json['reporting_period']['total'];\n        cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['total_increment_rate'] * 100).toFixed(2) + \"%\";\n        cardSummaryItem['subtotal_per_unit_area'] = json['reporting_period']['total_per_unit_area'];\n        cardSummaryList.push(cardSummaryItem);\n        setCardSummaryList(cardSummaryList);\n\n        let timeOfUseArray = [];\n        json['reporting_period']['energy_category_ids'].forEach((currentValue, index) => {\n          if(currentValue == 1) {\n            // energy_category_id 1 electricity\n            let timeOfUseItem = {}\n            timeOfUseItem['id'] = 1;\n            timeOfUseItem['name'] =  t('Top-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['toppeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n            \n            timeOfUseItem = {}\n            timeOfUseItem['id'] = 2;\n            timeOfUseItem['name'] =  t('On-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['onpeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n\n            timeOfUseItem = {}\n            timeOfUseItem['id'] = 3;\n            timeOfUseItem['name'] =  t('Mid-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['midpeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n\n            timeOfUseItem = {}\n            timeOfUseItem['id'] = 4;\n            timeOfUseItem['name'] =  t('Off-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['offpeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n          }\n        });\n        setTimeOfUseShareData(timeOfUseArray);\n\n        let costDataArray = [];\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let costDataItem = {}\n          costDataItem['id'] = index;\n          costDataItem['name'] = currentValue;\n          costDataItem['value'] = json['reporting_period']['subtotals'][index];\n          costDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          costDataArray.push(costDataItem);\n        });\n        setCostShareData(costDataArray);\n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setStoreLineChartLabels(timestamps);\n\n        let values = {}\n        json['reporting_period']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setStoreLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setStoreLineChartOptions(names);\n\n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n\n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            let total_current_timstamp = 0.0;\n            json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values'][energyCategoryIndex][timestampIndex].toFixed(2);\n              total_current_timstamp += json['reporting_period']['values'][energyCategoryIndex][timestampIndex];\n            });\n            detailed_value['total'] = total_current_timstamp.toFixed(2);\n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        let total_of_subtotals = 0.0;\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\n            detailed_value['a' + index] = currentValue.toFixed(2);\n            total_of_subtotals += currentValue\n          });\n        detailed_value['total'] = total_of_subtotals.toFixed(2);\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        });\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          });\n        });\n        detailed_column_list.push({\n          dataField: 'total',\n          text: t('Total') + ' (' + json['reporting_period']['total_unit'] + ')',\n          sort: true\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false)  \n      \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  };\n\n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'storecost.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Store Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Cost')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"storeSelect\">\n                    {t('Store')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"storeSelect\" name=\"storeSelect\" onChange={({ target }) => setSelectedStore(target.value)}\n                  >\n                    {storeList.map((store, index) => (\n                      <option value={store.value} key={store.value}>\n                        {store.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"card-deck\">\n        {cardSummaryList.map(cardSummaryItem => (\n          <CardSummary key={cardSummaryItem['name']}\n            rate={cardSummaryItem['increment_rate']}\n            title={t('Reporting Period Costs CATEGORY UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['subtotal_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        ))}\n      </div>\n      <Row noGutters>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={timeOfUseShareData} title={t('Electricity Cost by Time-Of-Use')} />\n        </Col>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={costShareData} title={t('Costs by Energy Category')} />\n        </Col>\n      </Row>\n      <LineChart reportingTitle={t('Reporting Period Costs CATEGORY VALUE UNIT', { 'CATEGORY': null, 'VALUE': null, 'UNIT': null })}\n        baseTitle=''\n        labels={storeLineChartLabels}\n        data={storeLineChartData}\n        options={storeLineChartOptions}>\n      </LineChart>\n\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(StoreCost));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\n\nconst StoreLoad = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [storeList, setStoreList] = useState([]);\n  const [selectedStore, setSelectedStore] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n    \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n\n  //Results\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [storeLineChartLabels, setStoreLineChartLabels] = useState([]);\n  const [storeLineChartData, setStoreLineChartData] = useState({});\n  const [storeLineChartOptions, setStoreLineChartOptions] = useState([]);\n\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Stores by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/stores', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setStoreList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedStore(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedStore(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Stores by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/stores', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setStoreList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedStore(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedStore(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedStore);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n    \n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/storeload?' +\n      'storeid=' + selectedStore +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n        \n        let cardSummaryArray = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['average'] = json['reporting_period']['averages'][index];\n          cardSummaryItem['average_increment_rate'] = parseFloat(json['reporting_period']['averages_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['average_per_unit_area'] = json['reporting_period']['averages_per_unit_area'][index];\n          cardSummaryItem['maximum'] = json['reporting_period']['maximums'][index];\n          cardSummaryItem['maximum_increment_rate'] = parseFloat(json['reporting_period']['maximums_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['maximum_per_unit_area'] = json['reporting_period']['maximums_per_unit_area'][index];\n          cardSummaryItem['factor'] = json['reporting_period']['factors'][index];\n          cardSummaryItem['factor_increment_rate'] = parseFloat(json['reporting_period']['factors_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryArray.push(cardSummaryItem);\n        });\n        setCardSummaryList(cardSummaryArray);\n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setStoreLineChartLabels(timestamps);\n        \n        let values = {}\n        json['reporting_period']['sub_maximums'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setStoreLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + '/H)'});\n        });\n        setStoreLineChartOptions(names);\n      \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n      \n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            json['reporting_period']['sub_averages'].forEach((currentValue, energyCategoryIndex) => {\n              if (json['reporting_period']['sub_averages'][energyCategoryIndex][timestampIndex] != null) {\n                detailed_value['a' + 2 * energyCategoryIndex] = json['reporting_period']['sub_averages'][energyCategoryIndex][timestampIndex].toFixed(2);\n              } else {\n                detailed_value['a' + 2 * energyCategoryIndex] = '';\n              };  \n            \n              if (json['reporting_period']['sub_maximums'][energyCategoryIndex][timestampIndex] != null) {\n                detailed_value['a' + (2 * energyCategoryIndex + 1)] = json['reporting_period']['sub_maximums'][energyCategoryIndex][timestampIndex].toFixed(2);\n              } else {\n                detailed_value['a' + (2 * energyCategoryIndex + 1)] = '';\n              };            \n            });\n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        })\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + 2 * index,\n            text: currentValue + ' ' + t('Average Load') + ' (' + unit + '/H)',\n            sort: true\n          });\n          detailed_column_list.push({\n            dataField: 'a' + (2 * index + 1),\n            text: currentValue + ' ' + t('Maximum Load') + ' (' + unit + '/H)',\n            sort: true\n          });\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false)\n  \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'storeload.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Store Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Load')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"storeSelect\">\n                    {t('Store')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"storeSelect\" name=\"storeSelect\" onChange={({ target }) => setSelectedStore(target.value)}\n                  >\n                    {storeList.map((store, index) => (\n                      <option value={store.value} key={store.value}>\n                        {store.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      {cardSummaryList.map(cardSummaryItem => (\n        <div className=\"card-deck\" key={cardSummaryItem['name']}>\n          <CardSummary key={cardSummaryItem['name'] + 'average'}\n            rate={cardSummaryItem['average_increment_rate']}\n            title={t('Reporting Period CATEGORY Average Load UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + '/H)' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['average_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/H/M²)\"} >\n            {cardSummaryItem['average'] && <CountUp end={cardSummaryItem['average']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'maximum'}\n            rate={cardSummaryItem['maximum_increment_rate']}\n            title={t('Reporting Period CATEGORY Maximum Load UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + '/H)' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['maximum_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/H/M²)\"} >\n            {cardSummaryItem['maximum'] && <CountUp end={cardSummaryItem['maximum']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'factor'}\n            rate={cardSummaryItem['factor_increment_rate']}\n            title={t('Reporting Period CATEGORY Load Factor', { 'CATEGORY': cardSummaryItem['name'] })}\n            color=\"success\" \n            footnote={t('Ratio of Average Load to Maximum Load')} >\n            {cardSummaryItem['factor'] && <CountUp end={cardSummaryItem['factor']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        </div>\n      ))}\n      <LineChart reportingTitle={t('Reporting Period CATEGORY Maximum Load UNIT', { 'CATEGORY': null, 'UNIT': null })}\n        baseTitle=''\n        labels={storeLineChartLabels}\n        data={storeLineChartData}\n        options={storeLineChartOptions}>\n      </LineChart>\n\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(StoreLoad));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\nconst StoreStatistics = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [storeList, setStoreList] = useState([]);\n  const [selectedStore, setSelectedStore] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n\n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n  \n  //Results\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [storeLineChartLabels, setStoreLineChartLabels] = useState([]);\n  const [storeLineChartData, setStoreLineChartData] = useState({});\n  const [storeLineChartOptions, setStoreLineChartOptions] = useState([]);\n\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Stores by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/stores', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setStoreList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedStore(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedStore(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Stores by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/stores', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setStoreList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedStore(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedStore(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedStore);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/storestatistics?' +\n      'storeid=' + selectedStore +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n        \n        let cardSummaryArray = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['mean'] = json['reporting_period']['means'][index];\n          cardSummaryItem['mean_increment_rate'] = parseFloat(json['reporting_period']['means_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['mean_per_unit_area'] = json['reporting_period']['means_per_unit_area'][index];\n          cardSummaryItem['median'] = json['reporting_period']['medians'][index];\n          cardSummaryItem['median_increment_rate'] = parseFloat(json['reporting_period']['medians_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['median_per_unit_area'] = json['reporting_period']['medians_per_unit_area'][index];\n          cardSummaryItem['minimum'] = json['reporting_period']['minimums'][index];\n          cardSummaryItem['minimum_increment_rate'] = parseFloat(json['reporting_period']['minimums_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['minimum_per_unit_area'] = json['reporting_period']['minimums_per_unit_area'][index];\n          cardSummaryItem['maximum'] = json['reporting_period']['maximums'][index];\n          cardSummaryItem['maximum_increment_rate'] = parseFloat(json['reporting_period']['maximums_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['maximum_per_unit_area'] = json['reporting_period']['maximums_per_unit_area'][index];\n          cardSummaryItem['stdev'] = json['reporting_period']['stdevs'][index];\n          cardSummaryItem['stdev_increment_rate'] = parseFloat(json['reporting_period']['stdevs_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['stdev_per_unit_area'] = json['reporting_period']['stdevs_per_unit_area'][index];\n          cardSummaryItem['variance'] = json['reporting_period']['variances'][index];\n          cardSummaryItem['variance_increment_rate'] = parseFloat(json['reporting_period']['variances_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['variance_per_unit_area'] = json['reporting_period']['variances_per_unit_area'][index];          \n          cardSummaryArray.push(cardSummaryItem);\n        });\n        setCardSummaryList(cardSummaryArray);\n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setStoreLineChartLabels(timestamps);\n        \n        let values = {}\n        json['reporting_period']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setStoreLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setStoreLineChartOptions(names);\n      \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n      \n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values'][energyCategoryIndex][timestampIndex].toFixed(2);\n            });\n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\n            detailed_value['a' + index] = currentValue.toFixed(2);\n          });\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        })\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          })\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false)\n  \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'storestatistics.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Store Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Statistics')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"storeSelect\">\n                    {t('Store')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"storeSelect\" name=\"storeSelect\" onChange={({ target }) => setSelectedStore(target.value)}\n                  >\n                    {storeList.map((store, index) => (\n                      <option value={store.value} key={store.value}>\n                        {store.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      {cardSummaryList.map(cardSummaryItem => (\n        <div className=\"card-deck\" key={cardSummaryItem['name']}>\n          <CardSummary key={cardSummaryItem['name'] + 'mean'}\n            rate={cardSummaryItem['mean_increment_rate']}\n            title={t('Reporting Period CATEGORY Mean UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['mean_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['mean'] && <CountUp end={cardSummaryItem['mean']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'median'}\n            rate={cardSummaryItem['median_increment_rate']}\n            title={t('Reporting Period CATEGORY Median UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['median_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['median'] && <CountUp end={cardSummaryItem['median']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'minimum'}\n            rate={cardSummaryItem['minimum_increment_rate']}\n            title={t('Reporting Period CATEGORY Minimum UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['minimum_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['minimum'] && <CountUp end={cardSummaryItem['minimum']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'maximum'}\n            rate={cardSummaryItem['maximum_increment_rate']}\n            title={t('Reporting Period CATEGORY Maximum UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['maximum_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['maximum'] && <CountUp end={cardSummaryItem['maximum']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'stdev'}\n            rate={cardSummaryItem['stdev_increment_rate']}\n            title={t('Reporting Period CATEGORY Stdev UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['stdev_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['stdev'] && <CountUp end={cardSummaryItem['stdev']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'variance'}\n            rate={cardSummaryItem['variance_increment_rate']}\n            title={t('Reporting Period CATEGORY Variance UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\"\n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['variance_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['variance'] && <CountUp end={cardSummaryItem['variance']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        </div>\n      ))}\n      <LineChart reportingTitle={t('Reporting Period Consumption CATEGORY VALUE UNIT', { 'CATEGORY': null, 'VALUE': null, 'UNIT': null })}\n        baseTitle=''\n        labels={storeLineChartLabels}\n        data={storeLineChartData}\n        options={storeLineChartOptions}>\n      </LineChart>\n\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(StoreStatistics));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport SharePie from '../common/SharePie';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\nconst StoreSaving = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [storeList, setStoreList] = useState([]);\n  const [selectedStore, setSelectedStore] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n\n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n  \n  //Results\n  const [TCEShareData, setTCEShareData] = useState([]);\n  const [TCO2EShareData, setTCO2EShareData] = useState([]);\n\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [totalInTCE, setTotalInTCE] = useState({});\n  const [totalInTCO2E, setTotalInTCO2E] = useState({});\n  const [storeLineChartLabels, setStoreLineChartLabels] = useState([]);\n  const [storeLineChartData, setStoreLineChartData] = useState({});\n  const [storeLineChartOptions, setStoreLineChartOptions] = useState([]);\n\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Stores by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/stores', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setStoreList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedStore(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedStore(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Stores by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/stores', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setStoreList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedStore(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedStore(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedStore);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n    \n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/storesaving?' +\n      'storeid=' + selectedStore +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n              \n        let cardSummaryArray = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals_saving'][index];\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates_saving'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['subtotal_per_unit_area'] = json['reporting_period']['subtotals_per_unit_area_saving'][index];\n          cardSummaryArray.push(cardSummaryItem);\n        });\n        setCardSummaryList(cardSummaryArray);\n\n        let totalInTCE = {}; \n        totalInTCE['value'] = json['reporting_period']['total_in_kgce_saving'] / 1000; // convert from kg to t\n        totalInTCE['increment_rate'] = parseFloat(json['reporting_period']['increment_rate_in_kgce_saving'] * 100).toFixed(2) + \"%\";\n        totalInTCE['value_per_unit_area'] = json['reporting_period']['total_in_kgce_per_unit_area_saving'] / 1000; // convert from kg to t\n        setTotalInTCE(totalInTCE);\n\n        let totalInTCO2E = {}; \n        totalInTCO2E['value'] = json['reporting_period']['total_in_kgco2e_saving'] / 1000; // convert from kg to t\n        totalInTCO2E['increment_rate'] = parseFloat(json['reporting_period']['increment_rate_in_kgco2e_saving'] * 100).toFixed(2) + \"%\";\n        totalInTCO2E['value_per_unit_area'] = json['reporting_period']['total_in_kgco2e_per_unit_area_saving'] / 1000; // convert from kg to t\n        setTotalInTCO2E(totalInTCO2E);\n\n        let TCEDataArray = [];\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let TCEDataItem = {}\n          TCEDataItem['id'] = index;\n          TCEDataItem['name'] = currentValue;\n          TCEDataItem['value'] = json['reporting_period']['subtotals_in_kgce_saving'][index] / 1000; // convert from kg to t\n          TCEDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          TCEDataArray.push(TCEDataItem);\n        });\n        setTCEShareData(TCEDataArray);\n\n        let TCO2EDataArray = [];\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let TCO2EDataItem = {}\n          TCO2EDataItem['id'] = index;\n          TCO2EDataItem['name'] = currentValue;\n          TCO2EDataItem['value'] = json['reporting_period']['subtotals_in_kgco2e_saving'][index] / 1000; // convert from kg to t\n          TCO2EDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          TCO2EDataArray.push(TCO2EDataItem);\n        });\n        setTCO2EShareData(TCO2EDataArray);\n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setStoreLineChartLabels(timestamps);\n        \n        let values = {}\n        json['reporting_period']['values_saving'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setStoreLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setStoreLineChartOptions(names);\n       \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n        \n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            json['reporting_period']['values_saving'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values_saving'][energyCategoryIndex][timestampIndex].toFixed(2);\n            });\n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        json['reporting_period']['subtotals_saving'].forEach((currentValue, index) => {\n            detailed_value['a' + index] = currentValue.toFixed(2);\n          });\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        })\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          })\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false)\n  \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'storesaving.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Store Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Saving')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"storeSelect\">\n                    {t('Store')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"storeSelect\" name=\"storeSelect\" onChange={({ target }) => setSelectedStore(target.value)}\n                  >\n                    {storeList.map((store, index) => (\n                      <option value={store.value} key={store.value}>\n                        {store.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"card-deck\">\n        {cardSummaryList.map(cardSummaryItem => (\n          <CardSummary key={cardSummaryItem['name']}\n            rate={cardSummaryItem['increment_rate']}\n            title={t('Reporting Period Savings CATEGORY (Baseline - Actual) UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['subtotal_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        ))}\n       \n        <CardSummary \n          rate={totalInTCE['increment_rate'] || ''} \n          title={t('Reporting Period Savings CATEGORY (Baseline - Actual) UNIT', { 'CATEGORY': t('Ton of Standard Coal'), 'UNIT': '(TCE)' })}\n          color=\"warning\" \n          footnote={t('Per Unit Area')} \n          footvalue={totalInTCE['value_per_unit_area']} \n          footunit=\"(TCE/M²)\">\n          {totalInTCE['value'] && <CountUp end={totalInTCE['value']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n        </CardSummary>\n        <CardSummary \n          rate={totalInTCO2E['increment_rate'] || ''} \n          title={t('Reporting Period Decreased CATEGORY (Baseline - Actual) UNIT', { 'CATEGORY': t('Ton of Carbon Dioxide Emissions'), 'UNIT': '(TCO2E)' })}\n          color=\"warning\" \n          footnote={t('Per Unit Area')} \n          footvalue={totalInTCO2E['value_per_unit_area']} \n          footunit=\"(TCO2E/M²)\">\n          {totalInTCO2E['value'] && <CountUp end={totalInTCO2E['value']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n        </CardSummary>\n      </div>\n      <Row noGutters>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={TCEShareData} title={t('Ton of Standard Coal by Energy Category')} />\n        </Col>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={TCO2EShareData} title={t('Ton of Carbon Dioxide Emissions by Energy Category')} />\n        </Col>\n      </Row>\n      <LineChart reportingTitle={t('Reporting Period Savings CATEGORY VALUE UNIT', { 'CATEGORY': null, 'VALUE': null, 'UNIT': null })}\n        baseTitle=''\n        labels={storeLineChartLabels}\n        data={storeLineChartData}\n        options={storeLineChartOptions}>\n      </LineChart>\n\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(StoreSaving));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\n\nconst StoreBatch = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [storeList, setStoreList] = useState([]);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n      \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(false);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n  //Results\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState(\n    [{dataField: 'name', text: t('Name'), sort: true}, {dataField: 'space', text: t('Space'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        // set the default selected space\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n\n        setSubmitButtonDisabled(false);\n        setSpinnerHidden(true);\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n    setStoreList([]);\n    setExportButtonHidden(true);\n    setSubmitButtonDisabled(false);\n  }\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n \n    // Reinitialize tables\n    setStoreList([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/storebatch?' +\n      'spaceid=' + selectedSpaceID +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n        let stores = [];\n        if (json['stores'].length > 0) {\n          json['stores'].forEach((currentStore, index) => {\n            let detailed_value = {};\n            detailed_value['id'] = currentStore['id'];\n            detailed_value['name'] = currentStore['store_name'];\n            detailed_value['space'] = currentStore['space_name'];\n            detailed_value['costcenter'] = currentStore['cost_center_name'];\n            currentStore['values'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = currentValue.toFixed(2);\n            });\n            stores.push(detailed_value);\n          });\n        };\n\n        setStoreList(stores);\n\n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'name',\n          text: t('Name'),\n          sort: true\n        });\n        detailed_column_list.push({\n          dataField: 'space',\n          text: t('Space'),\n          sort: true\n        });\n        json['energycategories'].forEach((currentValue, index) => {\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue['name'] + ' (' + currentValue['unit_of_measure'] + ')',\n            sort: true\n          })\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n\n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);\n          \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'storebatch.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Store Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Batch Analysis')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              \n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <DetailedDataTable data={storeList} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(StoreBatch));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport SharePie from '../common/SharePie';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\nconst ShopfloorEnergyCategory = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [shopfloorList, setShopfloorList] = useState([]);\n  const [selectedShopfloor, setSelectedShopfloor] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n        \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n  //Results\n  const [timeOfUseShareData, setTimeOfUseShareData] = useState([]);\n  const [TCEShareData, setTCEShareData] = useState([]);\n  const [TCO2EShareData, setTCO2EShareData] = useState([]);\n\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [totalInTCE, setTotalInTCE] = useState({});\n  const [totalInTCO2E, setTotalInTCO2E] = useState({});\n  const [shopfloorLineChartLabels, setShopfloorLineChartLabels] = useState([]);\n  const [shopfloorLineChartData, setShopfloorLineChartData] = useState({});\n  const [shopfloorLineChartOptions, setShopfloorLineChartOptions] = useState([]);\n\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Shopfloors by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/shopfloors', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setShopfloorList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedShopfloor(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedShopfloor(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Shopfloors by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n  \n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  \n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/shopfloors', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setShopfloorList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedShopfloor(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedShopfloor(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedShopfloor);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n        \n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/shopfloorenergycategory?' +\n      'shopfloorid=' + selectedShopfloor +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json);\n        \n        let cardSummaryArray = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals'][index];\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['subtotal_per_unit_area'] = json['reporting_period']['subtotals_per_unit_area'][index];\n          cardSummaryArray.push(cardSummaryItem);\n        });\n        setCardSummaryList(cardSummaryArray);\n        \n        let timeOfUseArray = [];\n        json['reporting_period']['energy_category_ids'].forEach((currentValue, index) => {\n          if(currentValue == 1) {\n            // energy_category_id 1 electricity\n            let timeOfUseItem = {}\n            timeOfUseItem['id'] = 1;\n            timeOfUseItem['name'] =  t('Top-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['toppeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n            \n            timeOfUseItem = {}\n            timeOfUseItem['id'] = 2;\n            timeOfUseItem['name'] =  t('On-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['onpeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n\n            timeOfUseItem = {}\n            timeOfUseItem['id'] = 3;\n            timeOfUseItem['name'] =  t('Mid-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['midpeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n\n            timeOfUseItem = {}\n            timeOfUseItem['id'] = 4;\n            timeOfUseItem['name'] =  t('Off-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['offpeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n          }\n        });\n        setTimeOfUseShareData(timeOfUseArray);\n\n        \n        let totalInTCE = {}; \n        totalInTCE['value'] = json['reporting_period']['total_in_kgce'] / 1000; // convert from kg to t\n        totalInTCE['increment_rate'] = parseFloat(json['reporting_period']['increment_rate_in_kgce'] * 100).toFixed(2) + \"%\";\n        totalInTCE['value_per_unit_area'] = json['reporting_period']['total_in_kgce_per_unit_area'] / 1000; // convert from kg to t\n        setTotalInTCE(totalInTCE);\n\n        let totalInTCO2E = {}; \n        totalInTCO2E['value'] = json['reporting_period']['total_in_kgco2e'] / 1000; // convert from kg to t\n        totalInTCO2E['increment_rate'] = parseFloat(json['reporting_period']['increment_rate_in_kgco2e'] * 100).toFixed(2) + \"%\";\n        totalInTCO2E['value_per_unit_area'] = json['reporting_period']['total_in_kgco2e_per_unit_area'] / 1000; // convert from kg to t\n        setTotalInTCO2E(totalInTCO2E);\n\n        let TCEDataArray = [];\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let TCEDataItem = {}\n          TCEDataItem['id'] = index;\n          TCEDataItem['name'] = currentValue;\n          TCEDataItem['value'] = json['reporting_period']['subtotals_in_kgce'][index] / 1000; // convert from kg to t\n          TCEDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          TCEDataArray.push(TCEDataItem);\n        });\n        setTCEShareData(TCEDataArray);\n\n        let TCO2EDataArray = [];\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let TCO2EDataItem = {}\n          TCO2EDataItem['id'] = index;\n          TCO2EDataItem['name'] = currentValue;\n          TCO2EDataItem['value'] = json['reporting_period']['subtotals_in_kgco2e'][index] / 1000; // convert from kg to t\n          TCO2EDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          TCO2EDataArray.push(TCO2EDataItem);\n        });\n        setTCO2EShareData(TCO2EDataArray);\n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setShopfloorLineChartLabels(timestamps);\n        \n        let values = {}\n        json['reporting_period']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setShopfloorLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setShopfloorLineChartOptions(names);\n       \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n        \n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values'][energyCategoryIndex][timestampIndex].toFixed(2);\n            });\n            detailed_value_list.push(detailed_value);\n          });\n        };\n        \n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\n            detailed_value['a' + index] = currentValue.toFixed(2);\n          });\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        })\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          })\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);\n        \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'shopfloorenergycategory.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Shopfloor Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Energy Category Data')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"shopfloorSelect\">\n                    {t('Shopfloor')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"shopfloorSelect\" name=\"shopfloorSelect\" onChange={({ target }) => setSelectedShopfloor(target.value)}\n                  >\n                    {shopfloorList.map((shopfloor, index) => (\n                      <option value={shopfloor.value} key={shopfloor.value}>\n                        {shopfloor.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"card-deck\">\n        {cardSummaryList.map(cardSummaryItem => (\n          <CardSummary key={cardSummaryItem['name']}\n            rate={cardSummaryItem['increment_rate']}\n            title={t('Reporting Period Consumption CATEGORY UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['subtotal_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        ))}\n       \n        <CardSummary \n          rate={totalInTCE['increment_rate'] || ''} \n          title={t('Reporting Period Consumption CATEGORY UNIT', { 'CATEGORY': t('Ton of Standard Coal'), 'UNIT': '(TCE)' })}\n          color=\"warning\" \n          footnote={t('Per Unit Area')} \n          footvalue={totalInTCE['value_per_unit_area']} \n          footunit=\"(TCE/M²)\">\n          {totalInTCE['value'] && <CountUp end={totalInTCE['value']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n        </CardSummary>\n        <CardSummary \n          rate={totalInTCO2E['increment_rate'] || ''} \n          title={t('Reporting Period Consumption CATEGORY UNIT', { 'CATEGORY': t('Ton of Carbon Dioxide Emissions'), 'UNIT': '(TCO2E)' })}\n          color=\"warning\" \n          footnote={t('Per Unit Area')} \n          footvalue={totalInTCO2E['value_per_unit_area']} \n          footunit=\"(TCO2E/M²)\">\n          {totalInTCO2E['value'] && <CountUp end={totalInTCO2E['value']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n        </CardSummary>\n      </div>\n      <Row noGutters>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={timeOfUseShareData} title={t('Electricity Consumption by Time-Of-Use')} />\n        </Col>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={TCEShareData} title={t('Ton of Standard Coal by Energy Category')} />\n        </Col>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={TCO2EShareData} title={t('Ton of Carbon Dioxide Emissions by Energy Category')} />\n        </Col>\n      </Row>\n      <LineChart reportingTitle={t('Reporting Period Consumption CATEGORY VALUE UNIT', { 'CATEGORY': null, 'VALUE': null, 'UNIT': null })}\n        baseTitle=''\n        labels={shopfloorLineChartLabels}\n        data={shopfloorLineChartData}\n        options={shopfloorLineChartOptions}>\n      </LineChart>\n\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(ShopfloorEnergyCategory));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport SharePie from '../common/SharePie';\nimport LineChart from '../common/LineChart';\nimport loadable from '@loadable/component';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\nconst ShopfloorEnergyItem = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [shopfloorList, setShopfloorList] = useState([]);\n  const [selectedShopfloor, setSelectedShopfloor] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n  \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n  //Results\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [sharePieList, setSharePieList] = useState([]);\n  const [shopfloorLineChartLabels, setShopfloorLineChartLabels] = useState([]);\n  const [shopfloorLineChartData, setShopfloorLineChartData] = useState({});\n  const [shopfloorLineChartOptions, setShopfloorLineChartOptions] = useState([]);\n\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Shopfloors by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/shopfloors', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setShopfloorList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedShopfloor(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedShopfloor(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Shopfloors by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/shopfloors', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setShopfloorList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedShopfloor(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedShopfloor(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedShopfloor);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n        \n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/shopfloorenergyitem?' +\n      'shopfloorid=' + selectedShopfloor +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n\n        let cardSummaryArray = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['energy_category_name'] = json['reporting_period']['energy_category_names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals'][index];\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['subtotal_per_unit_area'] = json['reporting_period']['subtotals_per_unit_area'][index];\n          cardSummaryArray.push(cardSummaryItem);\n        });\n        setCardSummaryList(cardSummaryArray);\n        \n        let sharePieDict = {}\n        let energyCategoryDict = {};\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let sharePieSubItem = {}\n          sharePieSubItem['id'] = index;\n          sharePieSubItem['name'] = json['reporting_period']['names'][index];\n          sharePieSubItem['value'] = json['reporting_period']['subtotals'][index];\n          sharePieSubItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          \n          let current_energy_category_id = json['reporting_period']['energy_category_ids'][index]\n          if (current_energy_category_id in sharePieDict) {\n            sharePieDict[current_energy_category_id].push(sharePieSubItem);\n          } else {\n            sharePieDict[current_energy_category_id] = [];\n            sharePieDict[current_energy_category_id].push(sharePieSubItem);\n          }\n\n          if (!(current_energy_category_id in energyCategoryDict)) {\n            energyCategoryDict[current_energy_category_id] = \n            {'name': json['reporting_period']['energy_category_names'][index],\n             'unit': json['reporting_period']['units'][index],\n            }\n          }\n        });\n        let sharePieArray = [];\n        for (let current_energy_category_id in sharePieDict) {\n          let sharePieItem = {}\n          sharePieItem['data'] = sharePieDict[current_energy_category_id];\n          sharePieItem['energy_category_name'] = energyCategoryDict[current_energy_category_id]['name'];\n          sharePieItem['unit'] = energyCategoryDict[current_energy_category_id]['unit'];\n          sharePieArray.push(sharePieItem);\n        }\n\n        setSharePieList(sharePieArray);\n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setShopfloorLineChartLabels(timestamps);\n        \n        let values = {}\n        json['reporting_period']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setShopfloorLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setShopfloorLineChartOptions(names);\n       \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n      \n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values'][energyCategoryIndex][timestampIndex].toFixed(2);\n            });\n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\n            detailed_value['a' + index] = currentValue.toFixed(2);\n          });\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        })\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          })\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);\n        \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'shopfloorenergyitem.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Shopfloor Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Energy Item Data')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"shopfloorSelect\">\n                    {t('Shopfloor')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"shopfloorSelect\" name=\"shopfloorSelect\" onChange={({ target }) => setSelectedShopfloor(target.value)}\n                  >\n                    {shopfloorList.map((shopfloor, index) => (\n                      <option value={shopfloor.value} key={shopfloor.value}>\n                        {shopfloor.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"card-deck\">\n        {cardSummaryList.map(cardSummaryItem => (\n          <CardSummary key={cardSummaryItem['name']}\n            rate={cardSummaryItem['increment_rate']}\n            title={t('Reporting Period Consumption ITEM CATEGORY UNIT', { 'ITEM': cardSummaryItem['name'], 'CATEGORY': cardSummaryItem['energy_category_name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['subtotal_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        ))}\n      </div>\n      <Row noGutters>\n        {sharePieList.map(sharePieItem => (\n          <Col key={sharePieItem['energy_category_name']} className=\"mb-3 pr-lg-2 mb-3\">\n            <SharePie key={sharePieItem['energy_category_name']}\n              data={sharePieItem['data']} \n              title={t('CATEGORY UNIT Consumption by Energy Items', { 'CATEGORY': sharePieItem['energy_category_name'], 'UNIT': '(' + sharePieItem['unit'] + ')' })} />\n          </Col>\n        ))}\n      </Row>\n      <LineChart reportingTitle={t('Reporting Period Consumption ITEM CATEGORY VALUE UNIT', { 'ITEM': null, 'CATEGORY': null, 'VALUE': null, 'UNIT': null })}\n        baseTitle=''\n        labels={shopfloorLineChartLabels}\n        data={shopfloorLineChartData}\n        options={shopfloorLineChartOptions}>\n      </LineChart>\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(ShopfloorEnergyItem));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport SharePie from '../common/SharePie';\nimport loadable from '@loadable/component';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\nconst ShopfloorCost = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [shopfloorList, setShopfloorList] = useState([]);\n  const [selectedShopfloor, setSelectedShopfloor] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n    \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n  //Results\n  const [timeOfUseShareData, setTimeOfUseShareData] = useState([]);\n  const [costShareData, setCostShareData] = useState([]);\n\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [shopfloorLineChartLabels, setShopfloorLineChartLabels] = useState([]);\n  const [shopfloorLineChartData, setShopfloorLineChartData] = useState({});\n  const [shopfloorLineChartOptions, setShopfloorLineChartOptions] = useState([]);\n\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Shopfloors by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/shopfloors', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setShopfloorList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedShopfloor(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedShopfloor(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Shopfloors by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/shopfloors', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setShopfloorList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedShopfloor(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedShopfloor(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedShopfloor);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n        \n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/shopfloorcost?' +\n      'shopfloorid=' + selectedShopfloor +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n\n        let cardSummaryList = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals'][index];\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['subtotal_per_unit_area'] = json['reporting_period']['subtotals_per_unit_area'][index];\n          cardSummaryList.push(cardSummaryItem);\n        });\n        let cardSummaryItem = {}\n        cardSummaryItem['name'] = t('Total');\n        cardSummaryItem['unit'] = json['reporting_period']['total_unit'];\n        cardSummaryItem['subtotal'] = json['reporting_period']['total'];\n        cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['total_increment_rate'] * 100).toFixed(2) + \"%\";\n        cardSummaryItem['subtotal_per_unit_area'] = json['reporting_period']['total_per_unit_area'];\n        cardSummaryList.push(cardSummaryItem);\n        setCardSummaryList(cardSummaryList);\n\n        let timeOfUseArray = [];\n        json['reporting_period']['energy_category_ids'].forEach((currentValue, index) => {\n          if(currentValue == 1) {\n            // energy_category_id 1 electricity\n            let timeOfUseItem = {}\n            timeOfUseItem['id'] = 1;\n            timeOfUseItem['name'] =  t('Top-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['toppeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n            \n            timeOfUseItem = {}\n            timeOfUseItem['id'] = 2;\n            timeOfUseItem['name'] =  t('On-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['onpeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n\n            timeOfUseItem = {}\n            timeOfUseItem['id'] = 3;\n            timeOfUseItem['name'] =  t('Mid-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['midpeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n\n            timeOfUseItem = {}\n            timeOfUseItem['id'] = 4;\n            timeOfUseItem['name'] =  t('Off-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['offpeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n          }\n        });\n        setTimeOfUseShareData(timeOfUseArray);\n\n        let costDataArray = [];\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let costDataItem = {}\n          costDataItem['id'] = index;\n          costDataItem['name'] = currentValue;\n          costDataItem['value'] = json['reporting_period']['subtotals'][index];\n          costDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          costDataArray.push(costDataItem);\n        });\n        setCostShareData(costDataArray);\n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setShopfloorLineChartLabels(timestamps);\n\n        let values = {}\n        json['reporting_period']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setShopfloorLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setShopfloorLineChartOptions(names);\n\n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n\n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            let total_current_timstamp = 0.0;\n            json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values'][energyCategoryIndex][timestampIndex].toFixed(2);\n              total_current_timstamp += json['reporting_period']['values'][energyCategoryIndex][timestampIndex];\n            });\n            detailed_value['total'] = total_current_timstamp.toFixed(2);\n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        let total_of_subtotals = 0.0;\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\n            detailed_value['a' + index] = currentValue.toFixed(2);\n            total_of_subtotals += currentValue\n          });\n        detailed_value['total'] = total_of_subtotals.toFixed(2);\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        });\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          });\n        });\n        detailed_column_list.push({\n          dataField: 'total',\n          text: t('Total') + ' (' + json['reporting_period']['total_unit'] + ')',\n          sort: true\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);\n          \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'shopfloorcost.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Shopfloor Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Cost')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"shopfloorSelect\">\n                    {t('Shopfloor')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"shopfloorSelect\" name=\"shopfloorSelect\" onChange={({ target }) => setSelectedShopfloor(target.value)}\n                  >\n                    {shopfloorList.map((shopfloor, index) => (\n                      <option value={shopfloor.value} key={shopfloor.value}>\n                        {shopfloor.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"card-deck\">\n        {cardSummaryList.map(cardSummaryItem => (\n          <CardSummary key={cardSummaryItem['name']}\n            rate={cardSummaryItem['increment_rate']}\n            title={t('Reporting Period Costs CATEGORY UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['subtotal_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        ))}\n      </div>\n      <Row noGutters>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={timeOfUseShareData} title={t('Electricity Cost by Time-Of-Use')} />\n        </Col>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={costShareData} title={t('Costs by Energy Category')} />\n        </Col>\n      </Row>\n      <LineChart reportingTitle={t('Reporting Period Costs CATEGORY VALUE UNIT', { 'CATEGORY': null, 'VALUE': null, 'UNIT': null })}\n        baseTitle=''\n        labels={shopfloorLineChartLabels}\n        data={shopfloorLineChartData}\n        options={shopfloorLineChartOptions}>\n      </LineChart>\n\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(ShopfloorCost));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\nconst ShopfloorLoad = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [shopfloorList, setShopfloorList] = useState([]);\n  const [selectedShopfloor, setSelectedShopfloor] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n\n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n  //Results\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [shopfloorLineChartLabels, setShopfloorLineChartLabels] = useState([]);\n  const [shopfloorLineChartData, setShopfloorLineChartData] = useState({});\n  const [shopfloorLineChartOptions, setShopfloorLineChartOptions] = useState([]);\n\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Shopfloors by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/shopfloors', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setShopfloorList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedShopfloor(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedShopfloor(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Shopfloors by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/shopfloors', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setShopfloorList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedShopfloor(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedShopfloor(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedShopfloor);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/shopfloorload?' +\n      'shopfloorid=' + selectedShopfloor +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n              \n        let cardSummaryArray = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['average'] = json['reporting_period']['averages'][index];\n          cardSummaryItem['average_increment_rate'] = parseFloat(json['reporting_period']['averages_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['average_per_unit_area'] = json['reporting_period']['averages_per_unit_area'][index];\n          cardSummaryItem['maximum'] = json['reporting_period']['maximums'][index];\n          cardSummaryItem['maximum_increment_rate'] = parseFloat(json['reporting_period']['maximums_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['maximum_per_unit_area'] = json['reporting_period']['maximums_per_unit_area'][index];\n          cardSummaryItem['factor'] = json['reporting_period']['factors'][index];\n          cardSummaryItem['factor_increment_rate'] = parseFloat(json['reporting_period']['factors_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryArray.push(cardSummaryItem);\n        });\n        setCardSummaryList(cardSummaryArray);\n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setShopfloorLineChartLabels(timestamps);\n        \n        let values = {}\n        json['reporting_period']['sub_maximums'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setShopfloorLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + '/H)'});\n        });\n        setShopfloorLineChartOptions(names);\n      \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n      \n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            json['reporting_period']['sub_averages'].forEach((currentValue, energyCategoryIndex) => {\n              if (json['reporting_period']['sub_averages'][energyCategoryIndex][timestampIndex] != null) {\n                detailed_value['a' + 2 * energyCategoryIndex] = json['reporting_period']['sub_averages'][energyCategoryIndex][timestampIndex].toFixed(2);\n              } else {\n                detailed_value['a' + 2 * energyCategoryIndex] = '';\n              };  \n            \n              if (json['reporting_period']['sub_maximums'][energyCategoryIndex][timestampIndex] != null) {\n                detailed_value['a' + (2 * energyCategoryIndex + 1)] = json['reporting_period']['sub_maximums'][energyCategoryIndex][timestampIndex].toFixed(2);\n              } else {\n                detailed_value['a' + (2 * energyCategoryIndex + 1)] = '';\n              };            \n            });\n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        })\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + 2 * index,\n            text: currentValue + ' ' + t('Average Load') + ' (' + unit + '/H)',\n            sort: true\n          });\n          detailed_column_list.push({\n            dataField: 'a' + (2 * index + 1),\n            text: currentValue + ' ' + t('Maximum Load') + ' (' + unit + '/H)',\n            sort: true\n          });\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);\n        \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'shopfloorload.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Shopfloor Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Load')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"shopfloorSelect\">\n                    {t('Shopfloor')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"shopfloorSelect\" name=\"shopfloorSelect\" onChange={({ target }) => setSelectedShopfloor(target.value)}\n                  >\n                    {shopfloorList.map((shopfloor, index) => (\n                      <option value={shopfloor.value} key={shopfloor.value}>\n                        {shopfloor.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      {cardSummaryList.map(cardSummaryItem => (\n        <div className=\"card-deck\" key={cardSummaryItem['name']}>\n          <CardSummary key={cardSummaryItem['name'] + 'average'}\n            rate={cardSummaryItem['average_increment_rate']}\n            title={t('Reporting Period CATEGORY Average Load UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + '/H)' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['average_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/H/M²)\"} >\n            {cardSummaryItem['average'] && <CountUp end={cardSummaryItem['average']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'maximum'}\n            rate={cardSummaryItem['maximum_increment_rate']}\n            title={t('Reporting Period CATEGORY Maximum Load UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + '/H)' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['maximum_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/H/M²)\"} >\n            {cardSummaryItem['maximum'] && <CountUp end={cardSummaryItem['maximum']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'factor'}\n            rate={cardSummaryItem['factor_increment_rate']}\n            title={t('Reporting Period CATEGORY Load Factor', { 'CATEGORY': cardSummaryItem['name'] })}\n            color=\"success\" \n            footnote={t('Ratio of Average Load to Maximum Load')} >\n            {cardSummaryItem['factor'] && <CountUp end={cardSummaryItem['factor']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        </div>\n      ))}\n      <LineChart reportingTitle={t('Reporting Period CATEGORY Maximum Load UNIT', { 'CATEGORY': null, 'UNIT': null })}\n        baseTitle=''\n        labels={shopfloorLineChartLabels}\n        data={shopfloorLineChartData}\n        options={shopfloorLineChartOptions}>\n      </LineChart>\n\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(ShopfloorLoad));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\nconst ShopfloorStatistics = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [shopfloorList, setShopfloorList] = useState([]);\n  const [selectedShopfloor, setSelectedShopfloor] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n      \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n  //Results\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [shopfloorLineChartLabels, setShopfloorLineChartLabels] = useState([]);\n  const [shopfloorLineChartData, setShopfloorLineChartData] = useState({});\n  const [shopfloorLineChartOptions, setShopfloorLineChartOptions] = useState([]);\n\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Shopfloors by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/shopfloors', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setShopfloorList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedShopfloor(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedShopfloor(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Shopfloors by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/shopfloors', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setShopfloorList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedShopfloor(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedShopfloor(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedShopfloor);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n        \n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/shopfloorstatistics?' +\n      'shopfloorid=' + selectedShopfloor +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n\n        let cardSummaryArray = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['mean'] = json['reporting_period']['means'][index];\n          cardSummaryItem['mean_increment_rate'] = parseFloat(json['reporting_period']['means_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['mean_per_unit_area'] = json['reporting_period']['means_per_unit_area'][index];\n          cardSummaryItem['median'] = json['reporting_period']['medians'][index];\n          cardSummaryItem['median_increment_rate'] = parseFloat(json['reporting_period']['medians_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['median_per_unit_area'] = json['reporting_period']['medians_per_unit_area'][index];\n          cardSummaryItem['minimum'] = json['reporting_period']['minimums'][index];\n          cardSummaryItem['minimum_increment_rate'] = parseFloat(json['reporting_period']['minimums_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['minimum_per_unit_area'] = json['reporting_period']['minimums_per_unit_area'][index];\n          cardSummaryItem['maximum'] = json['reporting_period']['maximums'][index];\n          cardSummaryItem['maximum_increment_rate'] = parseFloat(json['reporting_period']['maximums_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['maximum_per_unit_area'] = json['reporting_period']['maximums_per_unit_area'][index];\n          cardSummaryItem['stdev'] = json['reporting_period']['stdevs'][index];\n          cardSummaryItem['stdev_increment_rate'] = parseFloat(json['reporting_period']['stdevs_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['stdev_per_unit_area'] = json['reporting_period']['stdevs_per_unit_area'][index];\n          cardSummaryItem['variance'] = json['reporting_period']['variances'][index];\n          cardSummaryItem['variance_increment_rate'] = parseFloat(json['reporting_period']['variances_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['variance_per_unit_area'] = json['reporting_period']['variances_per_unit_area'][index];          \n          cardSummaryArray.push(cardSummaryItem);\n        });\n        setCardSummaryList(cardSummaryArray);\n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setShopfloorLineChartLabels(timestamps);\n        \n        let values = {}\n        json['reporting_period']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setShopfloorLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setShopfloorLineChartOptions(names);\n      \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n      \n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values'][energyCategoryIndex][timestampIndex].toFixed(2);\n            });\n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\n            detailed_value['a' + index] = currentValue.toFixed(2);\n          });\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        })\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          })\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);\n        \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'shopfloorstatistics.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Shopfloor Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Statistics')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"shopfloorSelect\">\n                    {t('Shopfloor')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"shopfloorSelect\" name=\"shopfloorSelect\" onChange={({ target }) => setSelectedShopfloor(target.value)}\n                  >\n                    {shopfloorList.map((shopfloor, index) => (\n                      <option value={shopfloor.value} key={shopfloor.value}>\n                        {shopfloor.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      {cardSummaryList.map(cardSummaryItem => (\n        <div className=\"card-deck\" key={cardSummaryItem['name']}>\n          <CardSummary key={cardSummaryItem['name'] + 'mean'}\n            rate={cardSummaryItem['mean_increment_rate']}\n            title={t('Reporting Period CATEGORY Mean UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['mean_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['mean'] && <CountUp end={cardSummaryItem['mean']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'median'}\n            rate={cardSummaryItem['median_increment_rate']}\n            title={t('Reporting Period CATEGORY Median UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['median_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['median'] && <CountUp end={cardSummaryItem['median']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'minimum'}\n            rate={cardSummaryItem['minimum_increment_rate']}\n            title={t('Reporting Period CATEGORY Minimum UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['minimum_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['minimum'] && <CountUp end={cardSummaryItem['minimum']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'maximum'}\n            rate={cardSummaryItem['maximum_increment_rate']}\n            title={t('Reporting Period CATEGORY Maximum UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['maximum_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['maximum'] && <CountUp end={cardSummaryItem['maximum']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'stdev'}\n            rate={cardSummaryItem['stdev_increment_rate']}\n            title={t('Reporting Period CATEGORY Stdev UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['stdev_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['stdev'] && <CountUp end={cardSummaryItem['stdev']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'variance'}\n            rate={cardSummaryItem['variance_increment_rate']}\n            title={t('Reporting Period CATEGORY Variance UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\"\n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['variance_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['variance'] && <CountUp end={cardSummaryItem['variance']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        </div>\n      ))}\n      <LineChart reportingTitle={t('Reporting Period Consumption CATEGORY VALUE UNIT', { 'CATEGORY': null, 'VALUE': null, 'UNIT': null })}\n        baseTitle=''\n        labels={shopfloorLineChartLabels}\n        data={shopfloorLineChartData}\n        options={shopfloorLineChartOptions}>\n      </LineChart>\n\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(ShopfloorStatistics));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport SharePie from '../common/SharePie';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\nconst ShopfloorSaving = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [shopfloorList, setShopfloorList] = useState([]);\n  const [selectedShopfloor, setSelectedShopfloor] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n      \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n  //Results\n  const [TCEShareData, setTCEShareData] = useState([]);\n  const [TCO2EShareData, setTCO2EShareData] = useState([]);\n\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [totalInTCE, setTotalInTCE] = useState({});\n  const [totalInTCO2E, setTotalInTCO2E] = useState({});\n  const [shopfloorLineChartLabels, setShopfloorLineChartLabels] = useState([]);\n  const [shopfloorLineChartData, setShopfloorLineChartData] = useState({});\n  const [shopfloorLineChartOptions, setShopfloorLineChartOptions] = useState([]);\n\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Shopfloors by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/shopfloors', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setShopfloorList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedShopfloor(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedShopfloor(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Shopfloors by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/shopfloors', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setShopfloorList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedShopfloor(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedShopfloor(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedShopfloor);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n        \n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n        \n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/shopfloorsaving?' +\n      'shopfloorid=' + selectedShopfloor +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n              \n        let cardSummaryArray = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals_saving'][index];\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates_saving'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['subtotal_per_unit_area'] = json['reporting_period']['subtotals_per_unit_area_saving'][index];\n          cardSummaryArray.push(cardSummaryItem);\n        });\n        setCardSummaryList(cardSummaryArray);\n\n        let totalInTCE = {}; \n        totalInTCE['value'] = json['reporting_period']['total_in_kgce_saving'] / 1000; // convert from kg to t\n        totalInTCE['increment_rate'] = parseFloat(json['reporting_period']['increment_rate_in_kgce_saving'] * 100).toFixed(2) + \"%\";\n        totalInTCE['value_per_unit_area'] = json['reporting_period']['total_in_kgce_per_unit_area_saving'] / 1000; // convert from kg to t\n        setTotalInTCE(totalInTCE);\n\n        let totalInTCO2E = {}; \n        totalInTCO2E['value'] = json['reporting_period']['total_in_kgco2e_saving'] / 1000; // convert from kg to t\n        totalInTCO2E['increment_rate'] = parseFloat(json['reporting_period']['increment_rate_in_kgco2e_saving'] * 100).toFixed(2) + \"%\";\n        totalInTCO2E['value_per_unit_area'] = json['reporting_period']['total_in_kgco2e_per_unit_area_saving'] / 1000; // convert from kg to t\n        setTotalInTCO2E(totalInTCO2E);\n\n        let TCEDataArray = [];\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let TCEDataItem = {}\n          TCEDataItem['id'] = index;\n          TCEDataItem['name'] = currentValue;\n          TCEDataItem['value'] = json['reporting_period']['subtotals_in_kgce_saving'][index] / 1000; // convert from kg to t\n          TCEDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          TCEDataArray.push(TCEDataItem);\n        });\n        setTCEShareData(TCEDataArray);\n\n        let TCO2EDataArray = [];\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let TCO2EDataItem = {}\n          TCO2EDataItem['id'] = index;\n          TCO2EDataItem['name'] = currentValue;\n          TCO2EDataItem['value'] = json['reporting_period']['subtotals_in_kgco2e_saving'][index] / 1000; // convert from kg to t\n          TCO2EDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          TCO2EDataArray.push(TCO2EDataItem);\n        });\n        setTCO2EShareData(TCO2EDataArray);\n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setShopfloorLineChartLabels(timestamps);\n        \n        let values = {}\n        json['reporting_period']['values_saving'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setShopfloorLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setShopfloorLineChartOptions(names);\n       \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n        \n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            json['reporting_period']['values_saving'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values_saving'][energyCategoryIndex][timestampIndex].toFixed(2);\n            });\n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        json['reporting_period']['subtotals_saving'].forEach((currentValue, index) => {\n            detailed_value['a' + index] = currentValue.toFixed(2);\n          });\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        })\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          })\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);\n        \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'shopfloorsaving.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Shopfloor Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Saving')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"shopfloorSelect\">\n                    {t('Shopfloor')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"shopfloorSelect\" name=\"shopfloorSelect\" onChange={({ target }) => setSelectedShopfloor(target.value)}\n                  >\n                    {shopfloorList.map((shopfloor, index) => (\n                      <option value={shopfloor.value} key={shopfloor.value}>\n                        {shopfloor.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"card-deck\">\n      {cardSummaryList.map(cardSummaryItem => (\n          <CardSummary key={cardSummaryItem['name']}\n            rate={cardSummaryItem['increment_rate']}\n            title={t('Reporting Period Savings CATEGORY (Baseline - Actual) UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            footnote={t('Per Unit Area')} \n            footvalue={cardSummaryItem['subtotal_per_unit_area']}\n            footunit={\"(\" + cardSummaryItem['unit'] + \"/M²)\"} >\n            {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        ))}\n       \n        <CardSummary \n          rate={totalInTCE['increment_rate'] || ''} \n          title={t('Reporting Period Savings CATEGORY (Baseline - Actual) UNIT', { 'CATEGORY': t('Ton of Standard Coal'), 'UNIT': '(TCE)' })}\n          color=\"warning\" \n          footnote={t('Per Unit Area')} \n          footvalue={totalInTCE['value_per_unit_area']} \n          footunit=\"(TCE/M²)\">\n          {totalInTCE['value'] && <CountUp end={totalInTCE['value']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n        </CardSummary>\n        <CardSummary \n          rate={totalInTCO2E['increment_rate'] || ''} \n          title={t('Reporting Period Decreased CATEGORY (Baseline - Actual) UNIT', { 'CATEGORY': t('Ton of Carbon Dioxide Emissions'), 'UNIT': '(TCO2E)' })}\n          color=\"warning\" \n          footnote={t('Per Unit Area')} \n          footvalue={totalInTCO2E['value_per_unit_area']} \n          footunit=\"(TCO2E/M²)\">\n          {totalInTCO2E['value'] && <CountUp end={totalInTCO2E['value']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n        </CardSummary>\n      </div>\n      <Row noGutters>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={TCEShareData} title={t('Ton of Standard Coal by Energy Category')} />\n        </Col>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={TCO2EShareData} title={t('Ton of Carbon Dioxide Emissions by Energy Category')} />\n        </Col>\n      </Row>\n      <LineChart reportingTitle={t('Reporting Period Savings CATEGORY VALUE UNIT', { 'CATEGORY': null, 'VALUE': null, 'UNIT': null })}\n        baseTitle=''\n        labels={shopfloorLineChartLabels}\n        data={shopfloorLineChartData}\n        options={shopfloorLineChartOptions}>\n      </LineChart>\n\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(ShopfloorSaving));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\n\nconst ShopfloorBatch = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [shopfloorList, setShopfloorList] = useState([]);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n      \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(false);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n  //Results\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState(\n    [{dataField: 'name', text: t('Name'), sort: true}, {dataField: 'space', text: t('Space'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        // set the default selected space\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n\n        setSubmitButtonDisabled(false);\n        setSpinnerHidden(true);\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n    setShopfloorList([]);\n    setExportButtonHidden(true);\n    setSubmitButtonDisabled(false);\n  }\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n \n    // Reinitialize tables\n    setShopfloorList([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/shopfloorbatch?' +\n      'spaceid=' + selectedSpaceID +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n        let shopfloors = [];\n        if (json['shopfloors'].length > 0) {\n          json['shopfloors'].forEach((currentShopfloor, index) => {\n            let detailed_value = {};\n            detailed_value['id'] = currentShopfloor['id'];\n            detailed_value['name'] = currentShopfloor['shopfloor_name'];\n            detailed_value['space'] = currentShopfloor['space_name'];\n            detailed_value['costcenter'] = currentShopfloor['cost_center_name'];\n            currentShopfloor['values'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = currentValue.toFixed(2);\n            });\n            shopfloors.push(detailed_value);\n          });\n        };\n\n        setShopfloorList(shopfloors);\n\n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'name',\n          text: t('Name'),\n          sort: true\n        });\n        detailed_column_list.push({\n          dataField: 'space',\n          text: t('Space'),\n          sort: true\n        });\n        json['energycategories'].forEach((currentValue, index) => {\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue['name'] + ' (' + currentValue['unit_of_measure'] + ')',\n            sort: true\n          })\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n\n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);\n          \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'shopfloorbatch.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Shopfloor Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Batch Analysis')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              \n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <DetailedDataTable data={shopfloorList} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(ShopfloorBatch));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\n\nconst CombinedEquipmentBatch = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [combinedEquipmentList, setCombinedEquipmentList] = useState([]);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n      \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(false);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n  //Results\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState(\n    [{dataField: 'name', text: t('Name'), sort: true}, {dataField: 'space', text: t('Space'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        // set the default selected space\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n\n        setSubmitButtonDisabled(false);\n        setSpinnerHidden(true);\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n    setCombinedEquipmentList([]);\n    setExportButtonHidden(true);\n    setSubmitButtonDisabled(false);\n  }\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n \n    // Reinitialize tables\n    setCombinedEquipmentList([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/combinedequipmentbatch?' +\n      'spaceid=' + selectedSpaceID +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n        let combined_equipments = [];\n        if (json['combined_equipments'].length > 0) {\n          json['combined_equipments'].forEach((currentCombinedEquipment, index) => {\n            let detailed_value = {};\n            detailed_value['id'] = currentCombinedEquipment['id'];\n            detailed_value['name'] = currentCombinedEquipment['combined_equipment_name'];\n            detailed_value['space'] = currentCombinedEquipment['space_name'];\n            detailed_value['costcenter'] = currentCombinedEquipment['cost_center_name'];\n            currentCombinedEquipment['values'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = currentValue.toFixed(2);\n            });\n            combined_equipments.push(detailed_value);\n          });\n        };\n\n        setCombinedEquipmentList(combined_equipments);\n\n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'name',\n          text: t('Name'),\n          sort: true\n        });\n        detailed_column_list.push({\n          dataField: 'space',\n          text: t('Space'),\n          sort: true\n        });\n        json['energycategories'].forEach((currentValue, index) => {\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue['name'] + ' (' + currentValue['unit_of_measure'] + ')',\n            sort: true\n          })\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n\n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);\n          \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'combinedequipmentbatch.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Combined Equipment Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Batch Analysis')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              \n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <DetailedDataTable data={combinedEquipmentList} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(CombinedEquipmentBatch));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport SharePie from '../common/SharePie';\nimport loadable from '@loadable/component';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\nconst AssociatedEquipmentTable = loadable(() => import('../common/AssociatedEquipmentTable'));\n\nconst CombinedEquipmentCost = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [combinedEquipmentList, setCombinedEquipmentList] = useState([]);\n  const [selectedCombinedEquipment, setSelectedCombinedEquipment] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n\n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n  \n  //Results\n  const [timeOfUseShareData, setTimeOfUseShareData] = useState([]);\n  const [costShareData, setCostShareData] = useState([]);\n\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [combinedEquipmentLineChartLabels, setCombinedEquipmentLineChartLabels] = useState([]);\n  const [combinedEquipmentLineChartData, setCombinedEquipmentLineChartData] = useState({});\n  const [combinedEquipmentLineChartOptions, setCombinedEquipmentLineChartOptions] = useState([]);\n\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  \n  const [associatedEquipmentTableData, setAssociatedEquipmentTableData] = useState([]);\n  const [associatedEquipmentTableColumns, setAssociatedEquipmentTableColumns] = useState([{dataField: 'name', text: t('Associated Equipment'), sort: true }]);\n  \n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response)\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json)\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Combined Equipments by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/combinedequipments', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setCombinedEquipmentList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedCombinedEquipment(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedCombinedEquipment(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Combined Equipments by root Space ID\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/combinedequipments', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setCombinedEquipmentList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedCombinedEquipment(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedCombinedEquipment(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedCombinedEquipment);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    setAssociatedEquipmentTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/combinedequipmentcost?' +\n      'combinedequipmentid=' + selectedCombinedEquipment +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n              \n        let cardSummaryList = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals'][index];\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryList.push(cardSummaryItem);\n        });\n        let cardSummaryItem = {}\n        cardSummaryItem['name'] = t('Total');\n        cardSummaryItem['unit'] = json['reporting_period']['total_unit'];\n        cardSummaryItem['subtotal'] = json['reporting_period']['total'];\n        cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['total_increment_rate'] * 100).toFixed(2) + \"%\";\n        cardSummaryList.push(cardSummaryItem);\n        setCardSummaryList(cardSummaryList);\n\n        let timeOfUseArray = [];\n        json['reporting_period']['energy_category_ids'].forEach((currentValue, index) => {\n          if(currentValue == 1) {\n            // energy_category_id 1 electricity\n            let timeOfUseItem = {}\n            timeOfUseItem['id'] = 1;\n            timeOfUseItem['name'] =  t('Top-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['toppeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n            \n            timeOfUseItem = {}\n            timeOfUseItem['id'] = 2;\n            timeOfUseItem['name'] =  t('On-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['onpeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n\n            timeOfUseItem = {}\n            timeOfUseItem['id'] = 3;\n            timeOfUseItem['name'] =  t('Mid-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['midpeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n\n            timeOfUseItem = {}\n            timeOfUseItem['id'] = 4;\n            timeOfUseItem['name'] =  t('Off-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['offpeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n          }\n        });\n        setTimeOfUseShareData(timeOfUseArray);\n\n        let costDataArray = [];\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let costDataItem = {}\n          costDataItem['id'] = index;\n          costDataItem['name'] = currentValue;\n          costDataItem['value'] = json['reporting_period']['subtotals'][index];\n          costDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          costDataArray.push(costDataItem);\n        });\n        setCostShareData(costDataArray);\n        \n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setCombinedEquipmentLineChartLabels(timestamps);\n\n        let values = {}\n        json['reporting_period']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setCombinedEquipmentLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setCombinedEquipmentLineChartOptions(names);\n\n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n\n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            let total_current_timstamp = 0.0;\n            json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values'][energyCategoryIndex][timestampIndex].toFixed(2);\n              total_current_timstamp += json['reporting_period']['values'][energyCategoryIndex][timestampIndex];\n            });\n            detailed_value['total'] = total_current_timstamp.toFixed(2);\n            detailed_value_list.push(detailed_value);\n          });\n        }\n\n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        let total_of_subtotals = 0.0;\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\n            detailed_value['a' + index] = currentValue.toFixed(2);\n            total_of_subtotals += currentValue\n          });\n        detailed_value['total'] = total_of_subtotals.toFixed(2);\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        });\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          });\n        });\n        detailed_column_list.push({\n          dataField: 'total',\n          text: t('Total') + ' (' + json['reporting_period']['total_unit'] + ')',\n          sort: true\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n        \n        let associated_equipment_value_list = [];\n        if (json['associated_equipment']['associated_equipment_names_array'].length > 0) {\n          json['associated_equipment']['associated_equipment_names_array'][0].forEach((currentEquipmentName, equipmentIndex) => {\n            let associated_equipment_value = {};\n            associated_equipment_value['id'] = equipmentIndex;\n            associated_equipment_value['name'] = currentEquipmentName;\n            let total = 0.0;\n            json['associated_equipment']['energy_category_names'].forEach((currentValue, energyCategoryIndex) => {\n              associated_equipment_value['a' + energyCategoryIndex] = json['associated_equipment']['subtotals_array'][energyCategoryIndex][equipmentIndex].toFixed(2);\n              total += json['associated_equipment']['subtotals_array'][energyCategoryIndex][equipmentIndex]\n            });\n            associated_equipment_value['total'] = total.toFixed(2);\n            associated_equipment_value_list.push(associated_equipment_value);\n          });\n        };\n\n        setAssociatedEquipmentTableData(associated_equipment_value_list);\n\n        let associated_equipment_column_list = [];\n        associated_equipment_column_list.push({\n          dataField: 'name',\n          text: t('Associated Equipment'),\n          sort: true\n        });\n        json['associated_equipment']['energy_category_names'].forEach((currentValue, index) => {\n          let unit = json['associated_equipment']['units'][index];\n          associated_equipment_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          });\n        });\n        associated_equipment_column_list.push({\n          dataField: 'total',\n          text: t('Total') + ' (' + json['associated_equipment']['total_unit'] + ')',\n          sort: true\n        });\n\n        setAssociatedEquipmentTableColumns(associated_equipment_column_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'combinedequipmentcost.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Combined Equipment Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Cost')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"combinedEquipmentSelect\">\n                    {t('Combined Equipment')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"combinedEquipmentSelect\" name=\"combinedEquipmentSelect\" onChange={({ target }) => setSelectedCombinedEquipment(target.value)}\n                  >\n                    {combinedEquipmentList.map((combinedEquipment, index) => (\n                      <option value={combinedEquipment.value} key={combinedEquipment.value}>\n                        {combinedEquipment.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"card-deck\">\n        {cardSummaryList.map(cardSummaryItem => (\n          <CardSummary key={cardSummaryItem['name']}\n            rate={cardSummaryItem['increment_rate']}\n            title={t('Reporting Period Costs CATEGORY UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" >\n            {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        ))}\n      </div>\n      <Row noGutters>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={timeOfUseShareData} title={t('Electricity Cost by Time-Of-Use')} />\n        </Col>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={costShareData} title={t('Costs by Energy Category')} />\n        </Col>\n      </Row>\n      <LineChart reportingTitle={t('Reporting Period Costs CATEGORY VALUE UNIT', { 'CATEGORY': null, 'VALUE': null, 'UNIT': null })}\n        baseTitle=''\n        labels={combinedEquipmentLineChartLabels}\n        data={combinedEquipmentLineChartData}\n        options={combinedEquipmentLineChartOptions}>\n      </LineChart>\n\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n      <br />\n      <AssociatedEquipmentTable data={associatedEquipmentTableData} title={t('Associated Equipment Data')} columns={associatedEquipmentTableColumns}>\n      </AssociatedEquipmentTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(CombinedEquipmentCost));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\n\nconst CombinedEquipmentEfficiency = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [combinedEquipmentList, setCombinedEquipmentList] = useState([]);\n  const [selectedCombinedEquipment, setSelectedCombinedEquipment] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n\n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n\n  //Results\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [combinedEquipmentLineChartLabels, setCombinedEquipmentLineChartLabels] = useState([]);\n  const [combinedEquipmentLineChartData, setCombinedEquipmentLineChartData] = useState({});\n  const [combinedEquipmentLineChartOptions, setCombinedEquipmentLineChartOptions] = useState([]);\n\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n\n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response)\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json)\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get CombinedEquipments by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/combinedequipments', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setCombinedEquipmentList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedCombinedEquipment(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedCombinedEquipment(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get CombinedEquipments by root Space ID\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n  \n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    console.log(value, selectedOptions);\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/combinedequipments', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setCombinedEquipmentList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedCombinedEquipment(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedCombinedEquipment(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n\n        // hide export buttion\n        setExportButtonHidden(true)\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedCombinedEquipment);\n    console.log(comparisonType);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    \n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/combinedequipmentefficiency?' +\n      'combinedequipmentid=' + selectedCombinedEquipment +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n        \n        let cardSummaryArray = []\n        json['reporting_period_efficiency']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period_efficiency']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period_efficiency']['units'][index];\n          cardSummaryItem['cumulation'] = json['reporting_period_efficiency']['cumulations'][index];\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period_efficiency']['increment_rates'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryArray.push(cardSummaryItem);\n        });\n        setCardSummaryList(cardSummaryArray);\n      \n        let timestamps = {}\n        json['reporting_period_efficiency']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setCombinedEquipmentLineChartLabels(timestamps);\n        \n        let values = {}\n        json['reporting_period_efficiency']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setCombinedEquipmentLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period_efficiency']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period_efficiency']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setCombinedEquipmentLineChartOptions(names);\n       \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n      \n        let detailed_value_list = [];\n        if (json['reporting_period_efficiency']['timestamps'].length > 0) {\n          json['reporting_period_efficiency']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            json['reporting_period_efficiency']['values'].forEach((currentValue, parameterIndex) => {\n              if (json['reporting_period_efficiency']['values'][parameterIndex][timestampIndex] != null) {\n                detailed_value['a' + parameterIndex] = json['reporting_period_efficiency']['values'][parameterIndex][timestampIndex].toFixed(2);\n              } else {\n                detailed_value['a' + parameterIndex] = '';\n              };\n            });\n            \n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        json['reporting_period_efficiency']['cumulations'].forEach((currentValue, index) => {\n            detailed_value['a' + index] = currentValue.toFixed(2);\n          });\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        })\n        json['reporting_period_efficiency']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period_efficiency']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          })\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n      \n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);\n\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });      \n  };\n  \n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'combinedequipmentefficiency.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Combined Equipment Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Efficiency')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"combinedEquipmentSelect\">\n                    {t('Combined Equipment')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"combinedEquipmentSelect\" name=\"combinedEquipmentSelect\" onChange={({ target }) => setSelectedCombinedEquipment(target.value)}\n                  >\n                    {combinedEquipmentList.map((combinedEquipment, index) => (\n                      <option value={combinedEquipment.value} key={combinedEquipment.value}>\n                        {combinedEquipment.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"card-deck\">\n        {cardSummaryList.map(cardSummaryItem => (\n          <CardSummary key={cardSummaryItem['name']}\n            rate={cardSummaryItem['increment_rate']}\n            title={t('Reporting Period Cumulative Efficiency NAME UNIT', { 'NAME': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" \n            >\n            {cardSummaryItem['cumulation'] && <CountUp end={cardSummaryItem['cumulation']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        ))}\n      </div>\n      <LineChart reportingTitle={t('Reporting Period Cumulative Efficiency VALUE UNIT', { 'VALUE': null, 'UNIT': null })}\n        baseTitle=''\n        labels={combinedEquipmentLineChartLabels}\n        data={combinedEquipmentLineChartData}\n        options={combinedEquipmentLineChartOptions}>\n      </LineChart>\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(CombinedEquipmentEfficiency));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport SharePie from '../common/SharePie';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\nconst AssociatedEquipmentTable = loadable(() => import('../common/AssociatedEquipmentTable'));\n\nconst CombinedEquipmentEnergyCategory = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [combinedEquipmentList, setCombinedEquipmentList] = useState([]);\n  const [selectedCombinedEquipment, setSelectedCombinedEquipment] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n\n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n  \n  //Results\n  const [timeOfUseShareData, setTimeOfUseShareData] = useState([]);\n  const [TCEShareData, setTCEShareData] = useState([]);\n  const [TCO2EShareData, setTCO2EShareData] = useState([]);\n\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [totalInTCE, setTotalInTCE] = useState({});\n  const [totalInTCO2E, setTotalInTCO2E] = useState({});\n  const [combinedEquipmentLineChartLabels, setCombinedEquipmentLineChartLabels] = useState([]);\n  const [combinedEquipmentLineChartData, setCombinedEquipmentLineChartData] = useState({});\n  const [combinedEquipmentLineChartOptions, setCombinedEquipmentLineChartOptions] = useState([]);\n\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  \n  const [associatedEquipmentTableData, setAssociatedEquipmentTableData] = useState([]);\n  const [associatedEquipmentTableColumns, setAssociatedEquipmentTableColumns] = useState([{dataField: 'name', text: t('Associated Equipment'), sort: true }]);\n  \n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response)\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json)\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Combined Equipments by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/combinedequipments', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setCombinedEquipmentList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedCombinedEquipment(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedCombinedEquipment(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Combined Equipments by root Space ID\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/combinedequipments', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setCombinedEquipmentList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedCombinedEquipment(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedCombinedEquipment(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedCombinedEquipment);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    setAssociatedEquipmentTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/combinedequipmentenergycategory?' +\n      'combinedequipmentid=' + selectedCombinedEquipment +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n              \n        let cardSummaryArray = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals'][index];\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryArray.push(cardSummaryItem);\n        });\n        setCardSummaryList(cardSummaryArray);\n        \n        let timeOfUseArray = [];\n        json['reporting_period']['energy_category_ids'].forEach((currentValue, index) => {\n          if(currentValue == 1) {\n            // energy_category_id 1 electricity\n            let timeOfUseItem = {}\n            timeOfUseItem['id'] = 1;\n            timeOfUseItem['name'] =  t('Top-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['toppeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n            \n            timeOfUseItem = {}\n            timeOfUseItem['id'] = 2;\n            timeOfUseItem['name'] =  t('On-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['onpeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n\n            timeOfUseItem = {}\n            timeOfUseItem['id'] = 3;\n            timeOfUseItem['name'] =  t('Mid-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['midpeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n\n            timeOfUseItem = {}\n            timeOfUseItem['id'] = 4;\n            timeOfUseItem['name'] =  t('Off-Peak');\n            timeOfUseItem['value'] = json['reporting_period']['offpeaks'][index];\n            timeOfUseItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n            timeOfUseArray.push(timeOfUseItem);\n          }\n        });\n        setTimeOfUseShareData(timeOfUseArray);\n\n        \n        let totalInTCE = {}; \n        totalInTCE['value'] = json['reporting_period']['total_in_kgce'] / 1000; // convert from kg to t\n        totalInTCE['increment_rate'] = parseFloat(json['reporting_period']['increment_rate_in_kgce'] * 100).toFixed(2) + \"%\";\n        setTotalInTCE(totalInTCE);\n\n        let totalInTCO2E = {}; \n        totalInTCO2E['value'] = json['reporting_period']['total_in_kgco2e'] / 1000; // convert from kg to t\n        totalInTCO2E['increment_rate'] = parseFloat(json['reporting_period']['increment_rate_in_kgco2e'] * 100).toFixed(2) + \"%\";\n        setTotalInTCO2E(totalInTCO2E);\n\n        let TCEDataArray = [];\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let TCEDataItem = {}\n          TCEDataItem['id'] = index;\n          TCEDataItem['name'] = currentValue;\n          TCEDataItem['value'] = json['reporting_period']['subtotals_in_kgce'][index] / 1000; // convert from kg to t\n          TCEDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          TCEDataArray.push(TCEDataItem);\n        });\n        setTCEShareData(TCEDataArray);\n\n        let TCO2EDataArray = [];\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let TCO2EDataItem = {}\n          TCO2EDataItem['id'] = index;\n          TCO2EDataItem['name'] = currentValue;\n          TCO2EDataItem['value'] = json['reporting_period']['subtotals_in_kgco2e'][index] / 1000; // convert from kg to t\n          TCO2EDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          TCO2EDataArray.push(TCO2EDataItem);\n        });\n        setTCO2EShareData(TCO2EDataArray);\n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setCombinedEquipmentLineChartLabels(timestamps);\n        \n        let values = {}\n        json['reporting_period']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setCombinedEquipmentLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setCombinedEquipmentLineChartOptions(names);\n       \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n        \n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values'][energyCategoryIndex][timestampIndex].toFixed(2);\n            });\n            detailed_value_list.push(detailed_value);\n          });\n        }\n\n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\n            detailed_value['a' + index] = currentValue.toFixed(2);\n          });\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        })\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          })\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n\n        let associated_equipment_value_list = [];\n        if (json['associated_equipment']['associated_equipment_names_array'].length > 0) {\n          json['associated_equipment']['associated_equipment_names_array'][0].forEach((currentEquipmentName, equipmentIndex) => {\n            let associated_equipment_value = {};\n            associated_equipment_value['id'] = equipmentIndex;\n            associated_equipment_value['name'] = currentEquipmentName;\n            json['associated_equipment']['energy_category_names'].forEach((currentValue, energyCategoryIndex) => {\n              associated_equipment_value['a' + energyCategoryIndex] = json['associated_equipment']['subtotals_array'][energyCategoryIndex][equipmentIndex].toFixed(2);\n            });\n            associated_equipment_value_list.push(associated_equipment_value);\n          });\n        };\n\n        setAssociatedEquipmentTableData(associated_equipment_value_list);\n\n        let associated_equipment_column_list = [];\n        associated_equipment_column_list.push({\n          dataField: 'name',\n          text: t('Associated Equipment'),\n          sort: true\n        });\n        json['associated_equipment']['energy_category_names'].forEach((currentValue, index) => {\n          let unit = json['associated_equipment']['units'][index];\n          associated_equipment_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          });\n        });\n\n        setAssociatedEquipmentTableColumns(associated_equipment_column_list);\n\n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);\n          \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'combinedequipmentenergycategory.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Combined Equipment Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Energy Category Data')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"combinedEquipmentSelect\">\n                    {t('Combined Equipment')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"combinedEquipmentSelect\" name=\"combinedEquipmentSelect\" onChange={({ target }) => setSelectedCombinedEquipment(target.value)}\n                  >\n                    {combinedEquipmentList.map((combinedEquipment, index) => (\n                      <option value={combinedEquipment.value} key={combinedEquipment.value}>\n                        {combinedEquipment.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"card-deck\">\n        {cardSummaryList.map(cardSummaryItem => (\n          <CardSummary key={cardSummaryItem['name']}\n            rate={cardSummaryItem['increment_rate']}\n            title={t('Reporting Period Consumption CATEGORY UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" >\n            {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        ))}\n       \n        <CardSummary \n          rate={totalInTCE['increment_rate'] || ''} \n          title={t('Reporting Period Consumption CATEGORY UNIT', { 'CATEGORY': t('Ton of Standard Coal'), 'UNIT': '(TCE)' })}\n          color=\"warning\" >\n          {totalInTCE['value'] && <CountUp end={totalInTCE['value']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n        </CardSummary>\n        <CardSummary \n          rate={totalInTCO2E['increment_rate'] || ''} \n          title={t('Reporting Period Consumption CATEGORY UNIT', { 'CATEGORY': t('Ton of Carbon Dioxide Emissions'), 'UNIT': '(TCO2E)' })}\n          color=\"warning\" >\n          {totalInTCO2E['value'] && <CountUp end={totalInTCO2E['value']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n        </CardSummary>\n      </div>\n\n      <Row noGutters>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={timeOfUseShareData} title={t('Electricity Consumption by Time-Of-Use')} />\n        </Col>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={TCEShareData} title={t('Ton of Standard Coal by Energy Category')} />\n        </Col>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={TCO2EShareData} title={t('Ton of Carbon Dioxide Emissions by Energy Category')} />\n        </Col>\n      </Row>\n      <LineChart reportingTitle={t('Reporting Period Consumption CATEGORY VALUE UNIT', { 'CATEGORY': null, 'VALUE': null, 'UNIT': null })}\n        baseTitle=''\n        labels={combinedEquipmentLineChartLabels}\n        data={combinedEquipmentLineChartData}\n        options={combinedEquipmentLineChartOptions}>\n      </LineChart>\n\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n      <br />\n      <AssociatedEquipmentTable data={associatedEquipmentTableData} title={t('Associated Equipment Data')} columns={associatedEquipmentTableColumns}>\n      </AssociatedEquipmentTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(CombinedEquipmentEnergyCategory));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport SharePie from '../common/SharePie';\nimport LineChart from '../common/LineChart';\nimport loadable from '@loadable/component';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\nconst AssociatedEquipmentTable = loadable(() => import('../common/AssociatedEquipmentTable'));\n\nconst CombinedEquipmentEnergyItem = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [combinedEquipmentList, setCombinedEquipmentList] = useState([]);\n  const [selectedCombinedEquipment, setSelectedCombinedEquipment] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n\n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n  \n  //Results\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [sharePieList, setSharePieList] = useState([]);\n  const [combinedEquipmentLineChartLabels, setCombinedEquipmentLineChartLabels] = useState([]);\n  const [combinedEquipmentLineChartData, setCombinedEquipmentLineChartData] = useState({});\n  const [combinedEquipmentLineChartOptions, setCombinedEquipmentLineChartOptions] = useState([]);\n\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  \n  const [associatedEquipmentTableData, setAssociatedEquipmentTableData] = useState([]);\n  const [associatedEquipmentTableColumns, setAssociatedEquipmentTableColumns] = useState([{dataField: 'name', text: t('Associated Equipment'), sort: true }]);\n  \n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response)\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json)\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Combined Equipments by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/combinedequipments', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setCombinedEquipmentList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedCombinedEquipment(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedCombinedEquipment(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Combined Equipments by root Space ID\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/combinedequipments', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setCombinedEquipmentList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedCombinedEquipment(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedCombinedEquipment(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedCombinedEquipment);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    setAssociatedEquipmentTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/combinedequipmentenergyitem?' +\n      'combinedequipmentid=' + selectedCombinedEquipment +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n        \n        let cardSummaryArray = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['energy_category_name'] = json['reporting_period']['energy_category_names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals'][index];\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryArray.push(cardSummaryItem);\n        });\n        setCardSummaryList(cardSummaryArray);\n        \n        let sharePieDict = {}\n        let energyCategoryDict = {};\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let sharePieSubItem = {}\n          sharePieSubItem['id'] = index;\n          sharePieSubItem['name'] = json['reporting_period']['names'][index];\n          sharePieSubItem['value'] = json['reporting_period']['subtotals'][index];\n          sharePieSubItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          \n          let current_energy_category_id = json['reporting_period']['energy_category_ids'][index]\n          if (current_energy_category_id in sharePieDict) {\n            sharePieDict[current_energy_category_id].push(sharePieSubItem);\n          } else {\n            sharePieDict[current_energy_category_id] = [];\n            sharePieDict[current_energy_category_id].push(sharePieSubItem);\n          }\n\n          if (!(current_energy_category_id in energyCategoryDict)) {\n            energyCategoryDict[current_energy_category_id] = \n            {'name': json['reporting_period']['energy_category_names'][index],\n             'unit': json['reporting_period']['units'][index],\n            }\n          }\n        });\n        let sharePieArray = [];\n        for (let current_energy_category_id in sharePieDict) {\n          let sharePieItem = {}\n          sharePieItem['data'] = sharePieDict[current_energy_category_id];\n          sharePieItem['energy_category_name'] = energyCategoryDict[current_energy_category_id]['name'];\n          sharePieItem['unit'] = energyCategoryDict[current_energy_category_id]['unit'];\n          sharePieArray.push(sharePieItem);\n        }\n\n        setSharePieList(sharePieArray);\n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setCombinedEquipmentLineChartLabels(timestamps);\n        \n        let values = {}\n        json['reporting_period']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setCombinedEquipmentLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setCombinedEquipmentLineChartOptions(names);\n       \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n      \n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values'][energyCategoryIndex][timestampIndex].toFixed(2);\n            });\n            detailed_value_list.push(detailed_value);\n          });\n        }\n\n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\n            detailed_value['a' + index] = currentValue.toFixed(2);\n          });\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        })\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          })\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n        \n        let associated_equipment_value_list = [];\n        if (json['associated_equipment']['associated_equipment_names_array'].length > 0) {\n          json['associated_equipment']['associated_equipment_names_array'][0].forEach((currentEquipmentName, equipmentIndex) => {\n            let associated_equipment_value = {};\n            associated_equipment_value['id'] = equipmentIndex;\n            associated_equipment_value['name'] = currentEquipmentName;\n            json['associated_equipment']['energy_item_names'].forEach((currentValue, energyItemIndex) => {\n              associated_equipment_value['a' + energyItemIndex] = json['associated_equipment']['subtotals_array'][energyItemIndex][equipmentIndex].toFixed(2);\n            });\n            associated_equipment_value_list.push(associated_equipment_value);\n          });\n        };\n\n        setAssociatedEquipmentTableData(associated_equipment_value_list);\n\n        let associated_equipment_column_list = [];\n        associated_equipment_column_list.push({\n          dataField: 'name',\n          text: t('Associated Equipment'),\n          sort: true\n        });\n        json['associated_equipment']['energy_item_names'].forEach((currentValue, index) => {\n          let unit = json['associated_equipment']['units'][index];\n          associated_equipment_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          });\n        });\n\n        setAssociatedEquipmentTableColumns(associated_equipment_column_list);\n       \n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);\n          \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n   \n  };\n  \n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'combinedequipmentenergyitem.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Combined Equipment Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Energy Item Data')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"combinedEquipmentSelect\">\n                    {t('Combined Equipment')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"combinedEquipmentSelect\" name=\"combinedEquipmentSelect\" onChange={({ target }) => setSelectedCombinedEquipment(target.value)}\n                  >\n                    {combinedEquipmentList.map((combinedEquipment, index) => (\n                      <option value={combinedEquipment.value} key={combinedEquipment.value}>\n                        {combinedEquipment.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"card-deck\">\n        {cardSummaryList.map(cardSummaryItem => (\n          <CardSummary key={cardSummaryItem['name']}\n            rate={cardSummaryItem['increment_rate']}\n            title={t('Reporting Period Consumption ITEM CATEGORY UNIT', { 'ITEM': cardSummaryItem['name'], 'CATEGORY': cardSummaryItem['energy_category_name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" >\n            {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        ))}\n      </div>\n      <Row noGutters>\n        {sharePieList.map(sharePieItem => (\n          <Col key={sharePieItem['energy_category_name']} className=\"mb-3 pr-lg-2 mb-3\">\n            <SharePie key={sharePieItem['energy_category_name']}\n              data={sharePieItem['data']} \n              title={t('CATEGORY UNIT Consumption by Energy Items', { 'CATEGORY': sharePieItem['energy_category_name'], 'UNIT': '(' + sharePieItem['unit'] + ')' })} />\n          </Col>\n        ))}\n      </Row>\n      <LineChart reportingTitle={t('Reporting Period Consumption ITEM CATEGORY VALUE UNIT', { 'ITEM': null, 'CATEGORY': null, 'VALUE': null, 'UNIT': null })}\n        baseTitle=''\n        labels={combinedEquipmentLineChartLabels}\n        data={combinedEquipmentLineChartData}\n        options={combinedEquipmentLineChartOptions}>\n      </LineChart>\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n      <br />\n      <AssociatedEquipmentTable data={associatedEquipmentTableData} title={t('Associated Equipment Data')} columns={associatedEquipmentTableColumns}>\n      </AssociatedEquipmentTable>\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(CombinedEquipmentEnergyItem));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\nconst AssociatedEquipmentTable = loadable(() => import('../common/AssociatedEquipmentTable'));\n\nconst CombinedEquipmentLoad = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [combinedEquipmentList, setCombinedEquipmentList] = useState([]);\n  const [selectedCombinedEquipment, setSelectedCombinedEquipment] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n\n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n  \n  //Results\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [combinedEquipmentLineChartLabels, setCombinedEquipmentLineChartLabels] = useState([]);\n  const [combinedEquipmentLineChartData, setCombinedEquipmentLineChartData] = useState({});\n  const [combinedEquipmentLineChartOptions, setCombinedEquipmentLineChartOptions] = useState([]);\n\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  \n  const [associatedEquipmentTableData, setAssociatedEquipmentTableData] = useState([]);\n  const [associatedEquipmentTableColumns, setAssociatedEquipmentTableColumns] = useState([{dataField: 'name', text: t('Associated Equipment'), sort: true }]);\n  \n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Combined Equipments by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/combinedequipments', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setCombinedEquipmentList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedCombinedEquipment(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedCombinedEquipment(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Combined Equipments by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/combinedequipments', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setCombinedEquipmentList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedCombinedEquipment(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedCombinedEquipment(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedCombinedEquipment);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    setAssociatedEquipmentTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/combinedequipmentload?' +\n      'combinedequipmentid=' + selectedCombinedEquipment +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n              \n        let cardSummaryArray = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['average'] = json['reporting_period']['averages'][index];\n          cardSummaryItem['average_increment_rate'] = parseFloat(json['reporting_period']['averages_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['maximum'] = json['reporting_period']['maximums'][index];\n          cardSummaryItem['maximum_increment_rate'] = parseFloat(json['reporting_period']['maximums_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['factor'] = json['reporting_period']['factors'][index];\n          cardSummaryItem['factor_increment_rate'] = parseFloat(json['reporting_period']['factors_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryArray.push(cardSummaryItem);\n        });\n        setCardSummaryList(cardSummaryArray);\n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setCombinedEquipmentLineChartLabels(timestamps);\n        \n        let values = {}\n        json['reporting_period']['sub_maximums'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setCombinedEquipmentLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + '/H)'});\n        });\n        setCombinedEquipmentLineChartOptions(names);\n      \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n      \n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            json['reporting_period']['sub_averages'].forEach((currentValue, energyCategoryIndex) => {\n              if (json['reporting_period']['sub_averages'][energyCategoryIndex][timestampIndex] != null) {\n                detailed_value['a' + 2 * energyCategoryIndex] = json['reporting_period']['sub_averages'][energyCategoryIndex][timestampIndex].toFixed(2);\n              } else {\n                detailed_value['a' + 2 * energyCategoryIndex] = '';\n              };  \n            \n              if (json['reporting_period']['sub_maximums'][energyCategoryIndex][timestampIndex] != null) {\n                detailed_value['a' + (2 * energyCategoryIndex + 1)] = json['reporting_period']['sub_maximums'][energyCategoryIndex][timestampIndex].toFixed(2);\n              } else {\n                detailed_value['a' + (2 * energyCategoryIndex + 1)] = '';\n              };            \n            });\n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        })\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + 2 * index,\n            text: currentValue + ' ' + t('Average Load') + ' (' + unit + '/H)',\n            sort: true\n          });\n          detailed_column_list.push({\n            dataField: 'a' + (2 * index + 1),\n            text: currentValue + ' ' + t('Maximum Load') + ' (' + unit + '/H)',\n            sort: true\n          });\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n        \n        let associated_equipment_value_list = [];\n        if (json['associated_equipment']['associated_equipment_names_array'].length > 0) {\n          json['associated_equipment']['associated_equipment_names_array'][0].forEach((currentEquipmentName, equipmentIndex) => {\n            let associated_equipment_value = {};\n            associated_equipment_value['id'] = equipmentIndex;\n            associated_equipment_value['name'] = currentEquipmentName;\n            json['associated_equipment']['energy_category_names'].forEach((currentValue, energyCategoryIndex) => {\n              if (json['associated_equipment']['sub_averages_array'][energyCategoryIndex][equipmentIndex] != null) {\n                associated_equipment_value['a' + 2 * energyCategoryIndex] = json['associated_equipment']['sub_averages_array'][energyCategoryIndex][equipmentIndex].toFixed(2);\n              } else {\n                associated_equipment_value['a' + 2 * energyCategoryIndex] = '';\n              };  \n              if (json['associated_equipment']['sub_maximums_array'][energyCategoryIndex][equipmentIndex] != null) {\n                associated_equipment_value['a' + (2 * energyCategoryIndex + 1)] = json['associated_equipment']['sub_maximums_array'][energyCategoryIndex][equipmentIndex].toFixed(2);\n              } else {\n                associated_equipment_value['a' + (2 * energyCategoryIndex + 1)] = '';\n              };       \n              \n            });\n            associated_equipment_value_list.push(associated_equipment_value);\n          });\n        };\n\n        setAssociatedEquipmentTableData(associated_equipment_value_list);\n\n        let associated_equipment_column_list = [];\n        associated_equipment_column_list.push({\n          dataField: 'name',\n          text: t('Associated Equipment'),\n          sort: true\n        });\n        json['associated_equipment']['energy_category_names'].forEach((currentValue, index) => {\n          let unit = json['associated_equipment']['units'][index];\n          associated_equipment_column_list.push({\n            dataField: 'a' + 2 * index,\n            text: currentValue + ' ' + t('Average Load') + ' (' + unit + '/H)',\n            sort: true\n          });\n          associated_equipment_column_list.push({\n            dataField: 'a' + (2 * index + 1),\n            text: currentValue + ' ' + t('Maximum Load') + ' (' + unit + '/H)',\n            sort: true\n          });\n        });\n\n        setAssociatedEquipmentTableColumns(associated_equipment_column_list);\n\n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);\n          \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  \n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'combinedequipmentload.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Combined Equipment Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Load')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"combinedEquipmentSelect\">\n                    {t('Combined Equipment')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"combinedEquipmentSelect\" name=\"combinedEquipmentSelect\" onChange={({ target }) => setSelectedCombinedEquipment(target.value)}\n                  >\n                    {combinedEquipmentList.map((combinedEquipment, index) => (\n                      <option value={combinedEquipment.value} key={combinedEquipment.value}>\n                        {combinedEquipment.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      {cardSummaryList.map(cardSummaryItem => (\n        <div className=\"card-deck\" key={cardSummaryItem['name']}>\n          <CardSummary key={cardSummaryItem['name'] + 'average'}\n            rate={cardSummaryItem['average_increment_rate']}\n            title={t('Reporting Period CATEGORY Average Load UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + '/H)' })}\n            color=\"success\" >\n            {cardSummaryItem['average'] && <CountUp end={cardSummaryItem['average']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'maximum'}\n            rate={cardSummaryItem['maximum_increment_rate']}\n            title={t('Reporting Period CATEGORY Maximum Load UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + '/H)' })}\n            color=\"success\" >\n            {cardSummaryItem['maximum'] && <CountUp end={cardSummaryItem['maximum']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'factor'}\n            rate={cardSummaryItem['factor_increment_rate']}\n            title={t('Reporting Period CATEGORY Load Factor', { 'CATEGORY': cardSummaryItem['name'] })}\n            color=\"success\" \n            footnote={t('Ratio of Average Load to Maximum Load')} >\n            {cardSummaryItem['factor'] && <CountUp end={cardSummaryItem['factor']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        </div>\n      ))}\n      <LineChart reportingTitle={t('Reporting Period CATEGORY Maximum Load UNIT', { 'CATEGORY': null, 'UNIT': null })}\n        baseTitle=''\n        labels={combinedEquipmentLineChartLabels}\n        data={combinedEquipmentLineChartData}\n        options={combinedEquipmentLineChartOptions}>\n      </LineChart>\n\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n      <br />\n      <AssociatedEquipmentTable data={associatedEquipmentTableData} title={t('Associated Equipment Data')} columns={associatedEquipmentTableColumns}>\n      </AssociatedEquipmentTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(CombinedEquipmentLoad));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport SharePie from '../common/SharePie';\nimport LineChart from '../common/LineChart';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\nconst AssociatedEquipmentTable = loadable(() => import('../common/AssociatedEquipmentTable'));\n\nconst CombinedEquipmentIncome = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [combinedEquipmentList, setCombinedEquipmentList] = useState([]);\n  const [selectedCombinedEquipment, setSelectedCombinedEquipment] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n  \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n  \n  //Results\n  const [incomeShareData, setIncomeShareData] = useState([]);\n\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [combinedEquipmentLineChartLabels, setCombinedEquipmentLineChartLabels] = useState([]);\n  const [combinedEquipmentLineChartData, setCombinedEquipmentLineChartData] = useState({});\n  const [combinedEquipmentLineChartOptions, setCombinedEquipmentLineChartOptions] = useState([]);\n\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  \n  const [associatedEquipmentTableData, setAssociatedEquipmentTableData] = useState([]);\n  const [associatedEquipmentTableColumns, setAssociatedEquipmentTableColumns] = useState([{dataField: 'name', text: t('Associated Equipment'), sort: true }]);\n  \n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response)\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json)\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Combined Equipments by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/combinedequipments', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setCombinedEquipmentList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedCombinedEquipment(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedCombinedEquipment(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Combined Equipments by root Space ID\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/combinedequipments', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setCombinedEquipmentList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedCombinedEquipment(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedCombinedEquipment(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedCombinedEquipment);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    setAssociatedEquipmentTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/combinedequipmentincome?' +\n      'combinedequipmentid=' + selectedCombinedEquipment +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n\n        let cardSummaryArray = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals'][index];\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryArray.push(cardSummaryItem);\n        });\n        let cardSummaryItem = {}\n        cardSummaryItem['name'] = t('Total');\n        cardSummaryItem['unit'] = json['reporting_period']['total_unit'];\n        cardSummaryItem['subtotal'] = json['reporting_period']['total'];\n        cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['total_increment_rate'] * 100).toFixed(2) + \"%\";\n        cardSummaryArray.push(cardSummaryItem);\n        setCardSummaryList(cardSummaryArray);\n        \n        let incomeDataArray = [];\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let incomeDataItem = {}\n          incomeDataItem['id'] = index;\n          incomeDataItem['name'] = currentValue;\n          incomeDataItem['value'] = json['reporting_period']['subtotals'][index];\n          incomeDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          incomeDataArray.push(incomeDataItem);\n        });\n        setIncomeShareData(incomeDataArray);\n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setCombinedEquipmentLineChartLabels(timestamps);\n\n        let values = {}\n        json['reporting_period']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setCombinedEquipmentLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setCombinedEquipmentLineChartOptions(names);\n\n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n      \n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            let total_current_timstamp = 0.0;\n            json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values'][energyCategoryIndex][timestampIndex].toFixed(2);\n              total_current_timstamp += json['reporting_period']['values'][energyCategoryIndex][timestampIndex];\n            });\n            detailed_value['total'] = total_current_timstamp.toFixed(2);\n            detailed_value_list.push(detailed_value);\n          });\n        }\n\n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        let total_of_subtotals = 0.0;\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\n            detailed_value['a' + index] = currentValue.toFixed(2);\n            total_of_subtotals += currentValue\n          });\n        detailed_value['total'] = total_of_subtotals.toFixed(2);\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        });\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          });\n        });\n        detailed_column_list.push({\n          dataField: 'total',\n          text: t('Total') + ' (' + json['reporting_period']['total_unit'] + ')',\n          sort: true\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n        \n        let associated_equipment_value_list = [];\n        if (json['associated_equipment']['associated_equipment_names_array'].length > 0) {\n          json['associated_equipment']['associated_equipment_names_array'][0].forEach((currentEquipmentName, equipmentIndex) => {\n            let associated_equipment_value = {};\n            associated_equipment_value['id'] = equipmentIndex;\n            associated_equipment_value['name'] = currentEquipmentName;\n            let total = 0.0;\n            json['associated_equipment']['energy_category_names'].forEach((currentValue, energyCategoryIndex) => {\n              associated_equipment_value['a' + energyCategoryIndex] = json['associated_equipment']['subtotals_array'][energyCategoryIndex][equipmentIndex].toFixed(2);\n              total += json['associated_equipment']['subtotals_array'][energyCategoryIndex][equipmentIndex]\n            });\n            associated_equipment_value['total'] = total.toFixed(2);\n            associated_equipment_value_list.push(associated_equipment_value);\n          });\n        };\n\n        setAssociatedEquipmentTableData(associated_equipment_value_list);\n\n        let associated_equipment_column_list = [];\n        associated_equipment_column_list.push({\n          dataField: 'name',\n          text: t('Associated Equipment'),\n          sort: true\n        });\n        json['associated_equipment']['energy_category_names'].forEach((currentValue, index) => {\n          let unit = json['associated_equipment']['units'][index];\n          associated_equipment_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          });\n        });\n        associated_equipment_column_list.push({\n          dataField: 'total',\n          text: t('Total') + ' (' + json['associated_equipment']['total_unit'] + ')',\n          sort: true\n        });\n\n        setAssociatedEquipmentTableColumns(associated_equipment_column_list);\n\n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);\n          \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  \n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'combinedequipmentincome.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Combined Equipment Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Income')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"combinedEquipmentSelect\">\n                    {t('Combined Equipment')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"combinedEquipmentSelect\" name=\"combinedEquipmentSelect\" onChange={({ target }) => setSelectedCombinedEquipment(target.value)}\n                  >\n                    {combinedEquipmentList.map((combinedEquipment, index) => (\n                      <option value={combinedEquipment.value} key={combinedEquipment.value}>\n                        {combinedEquipment.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"card-deck\">\n        {cardSummaryList.map(cardSummaryItem => (\n          <CardSummary key={cardSummaryItem['name']}\n            rate={cardSummaryItem['increment_rate']}\n            title={t('Reporting Period Income CATEGORY UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" >\n            {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        ))}\n      </div>\n      <Row noGutters>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={incomeShareData} title={t('Incomes by Energy Category')} />\n        </Col>\n      </Row>\n      <LineChart reportingTitle={t('Reporting Period Income CATEGORY VALUE UNIT', { 'CATEGORY': null, 'VALUE': null, 'UNIT': null })}\n        baseTitle=''\n        labels={combinedEquipmentLineChartLabels}\n        data={combinedEquipmentLineChartData}\n        options={combinedEquipmentLineChartOptions}>\n      </LineChart>\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n      <br />\n      <AssociatedEquipmentTable data={associatedEquipmentTableData} title={t('Associated Equipment Data')} columns={associatedEquipmentTableColumns}>\n      </AssociatedEquipmentTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(CombinedEquipmentIncome));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\nconst AssociatedEquipmentTable = loadable(() => import('../common/AssociatedEquipmentTable'));\n\nconst CombinedEquipmentOutput = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [combinedEquipmentList, setCombinedEquipmentList] = useState([]);\n  const [selectedCombinedEquipment, setSelectedCombinedEquipment] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n    \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n  \n  //Results\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [combinedEquipmentLineChartLabels, setCombinedEquipmentLineChartLabels] = useState([]);\n  const [combinedEquipmentLineChartData, setCombinedEquipmentLineChartData] = useState({});\n  const [combinedEquipmentLineChartOptions, setCombinedEquipmentLineChartOptions] = useState([]);\n\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  \n  const [associatedEquipmentTableData, setAssociatedEquipmentTableData] = useState([]);\n  const [associatedEquipmentTableColumns, setAssociatedEquipmentTableColumns] = useState([{dataField: 'name', text: t('Associated Equipment'), sort: true }]);\n  \n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response)\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json)\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Combined Equipments by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/combinedequipments', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setCombinedEquipmentList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedCombinedEquipment(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedCombinedEquipment(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Combined Equipments by root Space ID\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/combinedequipments', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setCombinedEquipmentList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedCombinedEquipment(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedCombinedEquipment(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedCombinedEquipment);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    setAssociatedEquipmentTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/combinedequipmentoutput?' +\n      'combinedequipmentid=' + selectedCombinedEquipment +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n                    \n        let cardSummaryArray = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals'][index];\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryArray.push(cardSummaryItem);\n        });\n        setCardSummaryList(cardSummaryArray);\n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setCombinedEquipmentLineChartLabels(timestamps);\n        \n        let values = {}\n        json['reporting_period']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setCombinedEquipmentLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setCombinedEquipmentLineChartOptions(names);\n       \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n      \n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values'][energyCategoryIndex][timestampIndex].toFixed(2);\n            });\n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\n            detailed_value['a' + index] = currentValue.toFixed(2);\n          });\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        })\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          })\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n        \n        let associated_equipment_value_list = [];\n        if (json['associated_equipment']['associated_equipment_names_array'].length > 0) {\n          json['associated_equipment']['associated_equipment_names_array'][0].forEach((currentEquipmentName, equipmentIndex) => {\n            let associated_equipment_value = {};\n            associated_equipment_value['id'] = equipmentIndex;\n            associated_equipment_value['name'] = currentEquipmentName;\n            json['associated_equipment']['energy_category_names'].forEach((currentValue, energyCategoryIndex) => {\n              associated_equipment_value['a' + energyCategoryIndex] = json['associated_equipment']['subtotals_array'][energyCategoryIndex][equipmentIndex].toFixed(2);\n            });\n            associated_equipment_value_list.push(associated_equipment_value);\n          });\n        };\n\n        setAssociatedEquipmentTableData(associated_equipment_value_list);\n\n        let associated_equipment_column_list = [];\n        associated_equipment_column_list.push({\n          dataField: 'name',\n          text: t('Associated Equipment'),\n          sort: true\n        });\n        json['associated_equipment']['energy_category_names'].forEach((currentValue, index) => {\n          let unit = json['associated_equipment']['units'][index];\n          associated_equipment_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          });\n        });\n\n        setAssociatedEquipmentTableColumns(associated_equipment_column_list);\n\n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);\n        \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  };\n  \n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'combinedequipmentoutput.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Combined Equipment Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Output')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"combinedEquipmentSelect\">\n                    {t('Combined Equipment')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"combinedEquipmentSelect\" name=\"combinedEquipmentSelect\" onChange={({ target }) => setSelectedCombinedEquipment(target.value)}\n                  >\n                    {combinedEquipmentList.map((combinedEquipment, index) => (\n                      <option value={combinedEquipment.value} key={combinedEquipment.value}>\n                        {combinedEquipment.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"card-deck\">\n      {cardSummaryList.map(cardSummaryItem => (\n          <CardSummary key={cardSummaryItem['name']}\n            rate={cardSummaryItem['increment_rate']}\n            title={t('Reporting Period Output CATEGORY UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" >\n            {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        ))}\n      </div>\n      <LineChart reportingTitle={t('Reporting Period Output CATEGORY VALUE UNIT', { 'CATEGORY': null, 'VALUE': null, 'UNIT': null })}\n        baseTitle=''\n        labels={combinedEquipmentLineChartLabels}\n        data={combinedEquipmentLineChartData}\n        options={combinedEquipmentLineChartOptions}>\n      </LineChart>\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n      <br />\n      <AssociatedEquipmentTable data={associatedEquipmentTableData} title={t('Associated Equipment Data')} columns={associatedEquipmentTableColumns}>\n      </AssociatedEquipmentTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(CombinedEquipmentOutput));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport SharePie from '../common/SharePie';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\nconst AssociatedEquipmentTable = loadable(() => import('../common/AssociatedEquipmentTable'));\n\nconst CombinedEquipmentSaving = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [combinedEquipmentList, setCombinedEquipmentList] = useState([]);\n  const [selectedCombinedEquipment, setSelectedCombinedEquipment] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n    \n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n  \n  //Results\n  const [TCEShareData, setTCEShareData] = useState([]);\n  const [TCO2EShareData, setTCO2EShareData] = useState([]);\n  \n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [totalInTCE, setTotalInTCE] = useState({});\n  const [totalInTCO2E, setTotalInTCO2E] = useState({});\n  const [combinedEquipmentLineChartLabels, setCombinedEquipmentLineChartLabels] = useState([]);\n  const [combinedEquipmentLineChartData, setCombinedEquipmentLineChartData] = useState({});\n  const [combinedEquipmentLineChartOptions, setCombinedEquipmentLineChartOptions] = useState([]);\n\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  \n  const [associatedEquipmentTableData, setAssociatedEquipmentTableData] = useState([]);\n  const [associatedEquipmentTableColumns, setAssociatedEquipmentTableColumns] = useState([{dataField: 'name', text: t('Associated Equipment'), sort: true }]);\n  \n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response)\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json)\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Combined Equipments by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/combinedequipments', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setCombinedEquipmentList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedCombinedEquipment(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedCombinedEquipment(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Combined Equipments by root Space ID\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/combinedequipments', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setCombinedEquipmentList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedCombinedEquipment(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedCombinedEquipment(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedCombinedEquipment);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    setAssociatedEquipmentTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/combinedequipmentsaving?' +\n      'combinedequipmentid=' + selectedCombinedEquipment +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n              \n        let cardSummaryArray = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['subtotal'] = json['reporting_period']['subtotals_saving'][index];\n          cardSummaryItem['increment_rate'] = parseFloat(json['reporting_period']['increment_rates_saving'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryArray.push(cardSummaryItem);\n        });\n        setCardSummaryList(cardSummaryArray);\n\n        let totalInTCE = {}; \n        totalInTCE['value'] = json['reporting_period']['total_in_kgce_saving'] / 1000; // convert from kg to t\n        totalInTCE['increment_rate'] = parseFloat(json['reporting_period']['increment_rate_in_kgce_saving'] * 100).toFixed(2) + \"%\";\n        setTotalInTCE(totalInTCE);\n\n        let totalInTCO2E = {}; \n        totalInTCO2E['value'] = json['reporting_period']['total_in_kgco2e_saving'] / 1000; // convert from kg to t\n        totalInTCO2E['increment_rate'] = parseFloat(json['reporting_period']['increment_rate_in_kgco2e_saving'] * 100).toFixed(2) + \"%\";\n        setTotalInTCO2E(totalInTCO2E);\n\n        let TCEDataArray = [];\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let TCEDataItem = {}\n          TCEDataItem['id'] = index;\n          TCEDataItem['name'] = currentValue;\n          TCEDataItem['value'] = json['reporting_period']['subtotals_in_kgce_saving'][index] / 1000; // convert from kg to t\n          TCEDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          TCEDataArray.push(TCEDataItem);\n        });\n        setTCEShareData(TCEDataArray);\n\n        let TCO2EDataArray = [];\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let TCO2EDataItem = {}\n          TCO2EDataItem['id'] = index;\n          TCO2EDataItem['name'] = currentValue;\n          TCO2EDataItem['value'] = json['reporting_period']['subtotals_in_kgco2e_saving'][index] / 1000; // convert from kg to t\n          TCO2EDataItem['color'] = \"#\"+((1<<24)*Math.random()|0).toString(16);\n          TCO2EDataArray.push(TCO2EDataItem);\n        });\n        setTCO2EShareData(TCO2EDataArray);\n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setCombinedEquipmentLineChartLabels(timestamps);\n        \n        let values = {}\n        json['reporting_period']['values_saving'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setCombinedEquipmentLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setCombinedEquipmentLineChartOptions(names);\n       \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n        \n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            json['reporting_period']['values_saving'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values_saving'][energyCategoryIndex][timestampIndex].toFixed(2);\n            });\n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        json['reporting_period']['subtotals_saving'].forEach((currentValue, index) => {\n            detailed_value['a' + index] = currentValue.toFixed(2);\n          });\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        })\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          })\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n        \n        let associated_equipment_value_list = [];\n        if (json['associated_equipment']['associated_equipment_names_array'].length > 0) {\n          json['associated_equipment']['associated_equipment_names_array'][0].forEach((currentEquipmentName, spaceIndex) => {\n            let associated_equipment_value = {};\n            associated_equipment_value['id'] = spaceIndex;\n            associated_equipment_value['name'] = currentEquipmentName;\n            json['associated_equipment']['energy_category_names'].forEach((currentValue, energyCategoryIndex) => {\n              associated_equipment_value['a' + energyCategoryIndex] = json['associated_equipment']['subtotals_saving_array'][energyCategoryIndex][spaceIndex].toFixed(2);\n            });\n            associated_equipment_value_list.push(associated_equipment_value);\n          });\n        };\n\n        setAssociatedEquipmentTableData(associated_equipment_value_list);\n\n        let associated_equipment_column_list = [];\n        associated_equipment_column_list.push({\n          dataField: 'name',\n          text: t('Associated Equipment'),\n          sort: true\n        });\n        json['associated_equipment']['energy_category_names'].forEach((currentValue, index) => {\n          let unit = json['associated_equipment']['units'][index];\n          associated_equipment_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          });\n        });\n\n        setAssociatedEquipmentTableColumns(associated_equipment_column_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);\n        \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  \n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'combinedequipmentsaving.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Combined Equipment Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Saving')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"combinedEquipmentSelect\">\n                    {t('Combined Equipment')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"combinedEquipmentSelect\" name=\"combinedEquipmentSelect\" onChange={({ target }) => setSelectedCombinedEquipment(target.value)}\n                  >\n                    {combinedEquipmentList.map((combinedEquipment, index) => (\n                      <option value={combinedEquipment.value} key={combinedEquipment.value}>\n                        {combinedEquipment.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"card-deck\">\n        {cardSummaryList.map(cardSummaryItem => (\n          <CardSummary key={cardSummaryItem['name']}\n            rate={cardSummaryItem['increment_rate']}\n            title={t('Reporting Period Savings CATEGORY (Baseline - Actual) UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" >\n            {cardSummaryItem['subtotal'] && <CountUp end={cardSummaryItem['subtotal']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        ))}\n       \n        <CardSummary \n          rate={totalInTCE['increment_rate'] || ''} \n          title={t('Reporting Period Savings CATEGORY (Baseline - Actual) UNIT', { 'CATEGORY': t('Ton of Standard Coal'), 'UNIT': '(TCE)' })}\n          color=\"warning\" >\n          {totalInTCE['value'] && <CountUp end={totalInTCE['value']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n        </CardSummary>\n        <CardSummary \n          rate={totalInTCO2E['increment_rate'] || ''} \n          title={t('Reporting Period Decreased CATEGORY (Baseline - Actual) UNIT', { 'CATEGORY': t('Ton of Carbon Dioxide Emissions'), 'UNIT': '(TCO2E)' })}\n          color=\"warning\" >\n          {totalInTCO2E['value'] && <CountUp end={totalInTCO2E['value']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n        </CardSummary>\n      </div>\n      <Row noGutters>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={TCEShareData} title={t('Ton of Standard Coal by Energy Category')} />\n        </Col>\n        <Col className=\"mb-3 pr-lg-2 mb-3\">\n          <SharePie data={TCO2EShareData} title={t('Ton of Carbon Dioxide Emissions by Energy Category')} />\n        </Col>\n      </Row>\n      <LineChart reportingTitle={t('Reporting Period Savings CATEGORY VALUE UNIT', { 'CATEGORY': null, 'VALUE': null, 'UNIT': null })}\n        baseTitle=''\n        labels={combinedEquipmentLineChartLabels}\n        data={combinedEquipmentLineChartData}\n        options={combinedEquipmentLineChartOptions}>\n      </LineChart>\n\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n      <br />\n      <AssociatedEquipmentTable data={associatedEquipmentTableData} title={t('Associated Equipment Data')} columns={associatedEquipmentTableColumns}>\n      </AssociatedEquipmentTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(CombinedEquipmentSaving));\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport CountUp from 'react-countup';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport loadable from '@loadable/component';\nimport Cascader from 'rc-cascader';\nimport CardSummary from '../common/CardSummary';\nimport LineChart from '../common/LineChart';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\nimport { periodTypeOptions } from '../common/PeriodTypeOptions';\nimport { comparisonTypeOptions } from '../common/ComparisonTypeOptions';\n\n\nconst DetailedDataTable = loadable(() => import('../common/DetailedDataTable'));\nconst AssociatedEquipmentTable = loadable(() => import('../common/AssociatedEquipmentTable'));\n\nconst CombinedEquipmentStatistics = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [combinedEquipmentList, setCombinedEquipmentList] = useState([]);\n  const [selectedCombinedEquipment, setSelectedCombinedEquipment] = useState(undefined);\n  const [comparisonType, setComparisonType] = useState('month-on-month');\n  const [periodType, setPeriodType] = useState('daily');\n  const [basePeriodBeginsDatetime, setBasePeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [basePeriodEndsDatetime, setBasePeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months'));\n  const [basePeriodBeginsDatetimeDisabled, setBasePeriodBeginsDatetimeDisabled] = useState(true);\n  const [basePeriodEndsDatetimeDisabled, setBasePeriodEndsDatetimeDisabled] = useState(true);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined); \n\n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n  const [exportButtonHidden, setExportButtonHidden] = useState(true);\n  \n  //Results\n  const [cardSummaryList, setCardSummaryList] = useState([]);\n  const [combinedEquipmentLineChartLabels, setCombinedEquipmentLineChartLabels] = useState([]);\n  const [combinedEquipmentLineChartData, setCombinedEquipmentLineChartData] = useState({});\n  const [combinedEquipmentLineChartOptions, setCombinedEquipmentLineChartOptions] = useState([]);\n\n  const [parameterLineChartLabels, setParameterLineChartLabels] = useState([]);\n  const [parameterLineChartData, setParameterLineChartData] = useState({});\n  const [parameterLineChartOptions, setParameterLineChartOptions] = useState([]);\n\n  const [detailedDataTableData, setDetailedDataTableData] = useState([]);\n  const [detailedDataTableColumns, setDetailedDataTableColumns] = useState([{dataField: 'startdatetime', text: t('Datetime'), sort: true}]);\n  \n  const [associatedEquipmentTableData, setAssociatedEquipmentTableData] = useState([]);\n  const [associatedEquipmentTableColumns, setAssociatedEquipmentTableColumns] = useState([{dataField: 'name', text: t('Associated Equipment'), sort: true }]);\n  \n  const [excelBytesBase64, setExcelBytesBase64] = useState(undefined);\n  \n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Combined Equipments by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/combinedequipments', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setCombinedEquipmentList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedCombinedEquipment(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedCombinedEquipment(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Combined Equipments by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/combinedequipments', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setCombinedEquipmentList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedCombinedEquipment(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedCombinedEquipment(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  let onComparisonTypeChange = ({ target }) => {\n    console.log(target.value);\n    setComparisonType(target.value);\n    if (target.value === 'year-over-year') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'years'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'years'));\n    } else if (target.value === 'month-on-month') {\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n      setBasePeriodBeginsDatetime(moment(reportingPeriodBeginsDatetime).subtract(1, 'months'));\n      setBasePeriodEndsDatetime(moment(reportingPeriodEndsDatetime).subtract(1, 'months'));\n    } else if (target.value === 'free-comparison') {\n      setBasePeriodBeginsDatetimeDisabled(false);\n      setBasePeriodEndsDatetimeDisabled(false);\n    } else if (target.value === 'none-comparison') {\n      setBasePeriodBeginsDatetime(undefined);\n      setBasePeriodEndsDatetime(undefined);\n      setBasePeriodBeginsDatetimeDisabled(true);\n      setBasePeriodEndsDatetimeDisabled(true);\n    }\n  }\n\n  let onBasePeriodBeginsDatetimeChange = (newDateTime) => {\n    setBasePeriodBeginsDatetime(newDateTime);\n  }\n\n  let onBasePeriodEndsDatetimeChange = (newDateTime) => {\n    setBasePeriodEndsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodBeginsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n    if (comparisonType === 'year-over-year') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'years'));\n    } else if (comparisonType === 'month-on-month') {\n      setBasePeriodEndsDatetime(newDateTime.clone().subtract(1, 'months'));\n    }\n  }\n\n  var getValidBasePeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(basePeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidBasePeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(basePeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedCombinedEquipment);\n    console.log(periodType);\n    console.log(basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : undefined);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    // hide export buttion\n    setExportButtonHidden(true)\n\n    // Reinitialize tables\n    setDetailedDataTableData([]);\n    setAssociatedEquipmentTableData([]);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/combinedequipmentstatistics?' +\n      'combinedequipmentid=' + selectedCombinedEquipment +\n      '&periodtype=' + periodType +\n      '&baseperiodstartdatetime=' + (basePeriodBeginsDatetime != null ? basePeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&baseperiodenddatetime=' + (basePeriodEndsDatetime != null ? basePeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss') : '') +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n              \n        let cardSummaryArray = []\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let cardSummaryItem = {}\n          cardSummaryItem['name'] = json['reporting_period']['names'][index];\n          cardSummaryItem['unit'] = json['reporting_period']['units'][index];\n          cardSummaryItem['mean'] = json['reporting_period']['means'][index];\n          cardSummaryItem['mean_increment_rate'] = parseFloat(json['reporting_period']['means_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['median'] = json['reporting_period']['medians'][index];\n          cardSummaryItem['median_increment_rate'] = parseFloat(json['reporting_period']['medians_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['minimum'] = json['reporting_period']['minimums'][index];\n          cardSummaryItem['minimum_increment_rate'] = parseFloat(json['reporting_period']['minimums_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['maximum'] = json['reporting_period']['maximums'][index];\n          cardSummaryItem['maximum_increment_rate'] = parseFloat(json['reporting_period']['maximums_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['stdev'] = json['reporting_period']['stdevs'][index];\n          cardSummaryItem['stdev_increment_rate'] = parseFloat(json['reporting_period']['stdevs_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryItem['variance'] = json['reporting_period']['variances'][index];\n          cardSummaryItem['variance_increment_rate'] = parseFloat(json['reporting_period']['variances_increment_rate'][index] * 100).toFixed(2) + \"%\";\n          cardSummaryArray.push(cardSummaryItem);\n        });\n        setCardSummaryList(cardSummaryArray);\n\n        let timestamps = {}\n        json['reporting_period']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setCombinedEquipmentLineChartLabels(timestamps);\n        \n        let values = {}\n        json['reporting_period']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setCombinedEquipmentLineChartData(values);\n        \n        let names = Array();\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          names.push({ 'value': 'a' + index, 'label': currentValue + ' (' + unit + ')'});\n        });\n        setCombinedEquipmentLineChartOptions(names);\n      \n        timestamps = {}\n        json['parameters']['timestamps'].forEach((currentValue, index) => {\n          timestamps['a' + index] = currentValue;\n        });\n        setParameterLineChartLabels(timestamps);\n\n        values = {}\n        json['parameters']['values'].forEach((currentValue, index) => {\n          values['a' + index] = currentValue;\n        });\n        setParameterLineChartData(values);\n      \n        names = Array();\n        json['parameters']['names'].forEach((currentValue, index) => {\n          if (currentValue.startsWith('TARIFF-')) {\n            currentValue = t('Tariff') + currentValue.replace('TARIFF-', '-');\n          }\n          \n          names.push({ 'value': 'a' + index, 'label': currentValue });\n        });\n        setParameterLineChartOptions(names);\n      \n        let detailed_value_list = [];\n        if (json['reporting_period']['timestamps'].length > 0) {\n          json['reporting_period']['timestamps'][0].forEach((currentTimestamp, timestampIndex) => {\n            let detailed_value = {};\n            detailed_value['id'] = timestampIndex;\n            detailed_value['startdatetime'] = currentTimestamp;\n            json['reporting_period']['values'].forEach((currentValue, energyCategoryIndex) => {\n              detailed_value['a' + energyCategoryIndex] = json['reporting_period']['values'][energyCategoryIndex][timestampIndex].toFixed(2);\n            });\n            detailed_value_list.push(detailed_value);\n          });\n        };\n\n        let detailed_value = {};\n        detailed_value['id'] = detailed_value_list.length;\n        detailed_value['startdatetime'] = t('Subtotal');\n        json['reporting_period']['subtotals'].forEach((currentValue, index) => {\n            detailed_value['a' + index] = currentValue.toFixed(2);\n          });\n        detailed_value_list.push(detailed_value);\n        setDetailedDataTableData(detailed_value_list);\n        \n        let detailed_column_list = [];\n        detailed_column_list.push({\n          dataField: 'startdatetime',\n          text: t('Datetime'),\n          sort: true\n        })\n        json['reporting_period']['names'].forEach((currentValue, index) => {\n          let unit = json['reporting_period']['units'][index];\n          detailed_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          })\n        });\n        setDetailedDataTableColumns(detailed_column_list);\n        let associated_equipment_value_list = [];\n        if (json['associated_equipment']['associated_equipment_names_array'].length > 0) {\n          json['associated_equipment']['associated_equipment_names_array'][0].forEach((currentEquipmentName, equipmentIndex) => {\n            let associated_equipment_value = {};\n            associated_equipment_value['id'] = equipmentIndex;\n            associated_equipment_value['name'] = currentEquipmentName;\n            json['associated_equipment']['energy_category_names'].forEach((currentValue, energyCategoryIndex) => {\n              associated_equipment_value['a' + energyCategoryIndex] = json['associated_equipment']['subtotals_array'][energyCategoryIndex][equipmentIndex].toFixed(2);\n            });\n            associated_equipment_value_list.push(associated_equipment_value);\n          });\n        };\n\n        setAssociatedEquipmentTableData(associated_equipment_value_list);\n\n        let associated_equipment_column_list = [];\n        associated_equipment_column_list.push({\n          dataField: 'name',\n          text: t('Associated Equipment'),\n          sort: true\n        });\n        json['associated_equipment']['energy_category_names'].forEach((currentValue, index) => {\n          let unit = json['associated_equipment']['units'][index];\n          associated_equipment_column_list.push({\n            dataField: 'a' + index,\n            text: currentValue + ' (' + unit + ')',\n            sort: true\n          });\n        });\n\n        setAssociatedEquipmentTableColumns(associated_equipment_column_list);\n        \n        setExcelBytesBase64(json['excel_bytes_base64']);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        // show export buttion\n        setExportButtonHidden(false);\n          \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  \n  const handleExport = e => {\n    e.preventDefault();\n    const mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    const fileName = 'combinedequipmentstatistics.xlsx'\n    var fileUrl = \"data:\" + mimeType + \";base64,\" + excelBytesBase64;\n    fetch(fileUrl)\n        .then(response => response.blob())\n        .then(blob => {\n            var link = window.document.createElement(\"a\");\n            link.href = window.URL.createObjectURL(blob, { type: mimeType });\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        });\n  };\n  \n\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Combined Equipment Data')}</BreadcrumbItem><BreadcrumbItem active>{t('Statistics')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"combinedEquipmentSelect\">\n                    {t('Combined Equipment')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"combinedEquipmentSelect\" name=\"combinedEquipmentSelect\" onChange={({ target }) => setSelectedCombinedEquipment(target.value)}\n                  >\n                    {combinedEquipmentList.map((combinedEquipment, index) => (\n                      <option value={combinedEquipment.value} key={combinedEquipment.value}>\n                        {combinedEquipment.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"comparisonType\">\n                    {t('Comparison Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"comparisonType\" name=\"comparisonType\"\n                    defaultValue=\"month-on-month\"\n                    onChange={onComparisonTypeChange}\n                  >\n                    {comparisonTypeOptions.map((comparisonType, index) => (\n                      <option value={comparisonType.value} key={comparisonType.value} >\n                        {t(comparisonType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"periodType\">\n                    {t('Period Types')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"periodType\" name=\"periodType\" defaultValue=\"daily\" onChange={({ target }) => setPeriodType(target.value)}\n                  >\n                    {periodTypeOptions.map((periodType, index) => (\n                      <option value={periodType.value} key={periodType.value} >\n                        {t(periodType.label)}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodBeginsDatetime\">\n                    {t('Base Period Begins')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodBeginsDatetime'\n                    value={basePeriodBeginsDatetime}\n                    inputProps={{ disabled: basePeriodBeginsDatetimeDisabled }}\n                    onChange={onBasePeriodBeginsDatetimeChange}\n                    isValidDate={getValidBasePeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"basePeriodEndsDatetime\">\n                    {t('Base Period Ends')}{t('(Optional)')}\n                  </Label>\n                  <Datetime id='basePeriodEndsDatetime'\n                    value={basePeriodEndsDatetime}\n                    inputProps={{ disabled: basePeriodEndsDatetimeDisabled }}\n                    onChange={onBasePeriodEndsDatetimeChange}\n                    isValidDate={getValidBasePeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                  <br></br>\n                  <ButtonIcon icon=\"external-link-alt\" transform=\"shrink-3 down-2\" color=\"falcon-default\" \n                  hidden={exportButtonHidden}\n                  onClick={handleExport} >\n                    {t('Export')}\n                  </ButtonIcon>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      {cardSummaryList.map(cardSummaryItem => (\n        <div className=\"card-deck\" key={cardSummaryItem['name']}>\n          <CardSummary key={cardSummaryItem['name'] + 'mean'}\n            rate={cardSummaryItem['mean_increment_rate']}\n            title={t('Reporting Period CATEGORY Mean UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" >\n            {cardSummaryItem['mean'] && <CountUp end={cardSummaryItem['mean']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'median'}\n            rate={cardSummaryItem['median_increment_rate']}\n            title={t('Reporting Period CATEGORY Median UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" >\n            {cardSummaryItem['median'] && <CountUp end={cardSummaryItem['median']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'minimum'}\n            rate={cardSummaryItem['minimum_increment_rate']}\n            title={t('Reporting Period CATEGORY Minimum UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" >\n            {cardSummaryItem['minimum'] && <CountUp end={cardSummaryItem['minimum']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'maximum'}\n            rate={cardSummaryItem['maximum_increment_rate']}\n            title={t('Reporting Period CATEGORY Maximum UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" >\n            {cardSummaryItem['maximum'] && <CountUp end={cardSummaryItem['maximum']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'stdev'}\n            rate={cardSummaryItem['stdev_increment_rate']}\n            title={t('Reporting Period CATEGORY Stdev UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" >\n            {cardSummaryItem['stdev'] && <CountUp end={cardSummaryItem['stdev']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n          <CardSummary key={cardSummaryItem['name'] + 'variance'}\n            rate={cardSummaryItem['variance_increment_rate']}\n            title={t('Reporting Period CATEGORY Variance UNIT', { 'CATEGORY': cardSummaryItem['name'], 'UNIT': '(' + cardSummaryItem['unit'] + ')' })}\n            color=\"success\" >\n            {cardSummaryItem['variance'] && <CountUp end={cardSummaryItem['variance']} duration={2} prefix=\"\" separator=\",\" decimal=\".\" decimals={2} />}\n          </CardSummary>\n        </div>\n      ))}\n      <LineChart reportingTitle={t('Reporting Period Consumption CATEGORY VALUE UNIT', { 'CATEGORY': null, 'VALUE': null, 'UNIT': null })}\n        baseTitle=''\n        labels={combinedEquipmentLineChartLabels}\n        data={combinedEquipmentLineChartData}\n        options={combinedEquipmentLineChartOptions}>\n      </LineChart>\n\n      <LineChart reportingTitle={t('Related Parameters')}\n        baseTitle=''\n        labels={parameterLineChartLabels}\n        data={parameterLineChartData}\n        options={parameterLineChartOptions}>\n      </LineChart>\n      <br />\n      <DetailedDataTable data={detailedDataTableData} title={t('Detailed Data')} columns={detailedDataTableColumns} pagesize={50} >\n      </DetailedDataTable>\n      <br />\n      <AssociatedEquipmentTable data={associatedEquipmentTableData} title={t('Associated Equipment Data')} columns={associatedEquipmentTableColumns}>\n      </AssociatedEquipmentTable>\n\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(CombinedEquipmentStatistics));\n","import React, { Fragment, useEffect, useContext, useState } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Label,\n  CustomInput,\n  Spinner,\n} from 'reactstrap';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport ReactEchartsCore from 'echarts-for-react';\nimport echarts from 'echarts/lib/echarts';\nimport AppContext from '../../../context/Context';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport { APIBaseURL } from '../../../config';\n\n\nconst EnergyFlowDiagram = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  // Query Parameters\n  const [energyFlowDiagramList, setEnergyFlowDiagramList] = useState([]);\n  const [selectedEnergyFlowDiagram, setSelectedEnergyFlowDiagram] = useState(undefined);\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().subtract(1, 'months').startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment.clone().subtract(1, 'months').endOf('month'));\n  const { isDark } = useContext(AppContext);\n\n  // buttons\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n\n  //Results\n  const [energyFlowDiagramData, setEnergyFlowDiagramData] = useState({\"nodes\": [], \"links\": []});\n\n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/energyflowdiagrams', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify(json).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json);\n        setEnergyFlowDiagramList(json);\n        setSelectedEnergyFlowDiagram([json[0]].map(o => o.value));\n        // enable submit button\n        setSubmitButtonDisabled(false);\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n  \n  const getOption = () => {\n    let colorArr = ['#5470c6', '#91cc75', '#fac858', '#ee6666', '#73c0de',\n      '#3ba272', '#fc8452', '#9a60b4', '#ea7ccc'];\n    let backgroundColor = '#FFFFFF';\n    let labelColor = 'rgba(0, 0, 0, 1)';\n    let labelTextBorderColor = 'rgba(255, 255, 255, 1)';\n\n    if (isDark) {\n      colorArr = ['#4992ff', '#7cffb2', '#fddd60', '#ff6e76', '#58d9f9',\n        '#05c091', '#ff8a45', '#8d48e3', '#dd79ff'];\n      backgroundColor = '#100C2A';\n      labelColor = 'rgba(255, 255, 255, 1)';\n      labelTextBorderColor = 'rgba(0, 0, 0, 1)';\n    }\n\n    let colorIndex = 0\n    for(let i = 0; i < energyFlowDiagramData.nodes.length; i++) {\n      let item = energyFlowDiagramData.nodes[i];\n      item.itemStyle = {color: colorArr[colorIndex%9]};\n      colorIndex ++;\n    }\n\n    energyFlowDiagramData.links.forEach(function (item) {\n      if(item.value == null) {\n          item.value = 0;\n      }\n      let sourceColor = null;\n      let targetColor = null;\n      for(let i = 0; i < energyFlowDiagramData.nodes.length; i++) {\n        if (item.source === energyFlowDiagramData.nodes[i].name) {\n          sourceColor = energyFlowDiagramData.nodes[i].itemStyle.color;\n        }\n        if (item.target === energyFlowDiagramData.nodes[i].name) {\n          targetColor = energyFlowDiagramData.nodes[i].itemStyle.color;\n        }\n        if(sourceColor != null && targetColor != null) {\n          break;\n        }\n      }\n      const color = {\n        type: 'linear',\n        x: 0,\n        y: 0,\n        x2: 1,\n        y2: 0,\n        colorStops: [{\n            offset: 0, color: sourceColor\n        }, {\n            offset: 1, color: targetColor\n        }],\n        globalCoord: false\n      }\n      item.lineStyle = {\n        color: color\n      }\n    });\n\n    return {\n      backgroundColor: backgroundColor,\n      tooltip: {\n        trigger: 'item',\n        triggerOn: 'mousemove'\n      },\n      series: [\n        {\n          name: 'sankey',\n          type: 'sankey',\n          data: energyFlowDiagramData.nodes,\n          links: energyFlowDiagramData.links,\n          focusNodeAdjacency: 'allEdges',\n          itemStyle: {\n            borderWidth: 1,\n            borderColor: '#aaa'\n          },\n          lineStyle: {\n            color: 'gradient',\n            curveness: 0.5\n          },\n          label: {\n            color: labelColor,\n            fontFamily: 'sans-serif',\n            fontSize: 13,\n            fontStyle: 'normal',\n            fontWeight: 'normal',\n            textBorderWidth: 1.5,\n            textBorderColor: labelTextBorderColor\n          }\n        }\n      ]\n    };\n  };\n\n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedEnergyFlowDiagram);\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/energyflowdiagram?' +\n      'energyflowdiagramid=' + selectedEnergyFlowDiagram +\n      '&reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json)\n        setEnergyFlowDiagramData(json);\n        console.log(energyFlowDiagramData);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n        \n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Auxiliary System')}</BreadcrumbItem><BreadcrumbItem active>{t('Energy Flow Diagram')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup>\n                  <Label className={labelClasses} for=\"energyFlowDiagramSelect\">\n                    {t('Energy Flow Diagram')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"energyFlowDiagramSelect\" name=\"energyFlowDiagramSelect\"\n                    value={selectedEnergyFlowDiagram} onChange={({ target }) => setSelectedEnergyFlowDiagram(target.value)}\n                  >\n                    {energyFlowDiagramList.map((energyFlowDiagram, index) => (\n                      <option value={energyFlowDiagram.value} key={index}>\n                        {energyFlowDiagram.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <Card className=\"mb-3 fs--1\">\n        <CardBody className=\"rounded-soft bg-gradient\">\n          <ReactEchartsCore\n            echarts={echarts}\n            option={getOption()}\n            data={energyFlowDiagramData}\n            style={{ width: '100%', height: 600 }}\n          />\n        </CardBody>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(EnergyFlowDiagram));\n","import React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport range from 'lodash/range';\nimport { Card, CardHeader, CardBody, ListGroup, ListGroupItem } from 'reactstrap';\nimport { rgbaColor } from '../../../helpers/utils';\nimport { withTranslation } from 'react-i18next';\nimport uuid from 'uuid/v1';\nimport { APIBaseURL } from '../../../config';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport { toast } from 'react-toastify';\n\n\nconst dividerBorder = '1px solid rgba(255, 255, 255, 0.15)';\nconst listItemBorderColor = 'rgba(255, 255, 255, 0.05)';\n\nclass RealtimeChart extends Component {\n  _isMounted = false;\n  refreshInterval;\n  refreshTimeout;\n  state = {\n    pointList: [],\n  };\n\n  componentWillUnmount() {\n    this._isMounted = false;\n    clearInterval(this.refreshInterval);\n    clearTimeout(this.refreshTimeout);\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    this._isMounted = true;\n    // fetch realtime data at the first time\n    let isResponseOK = false;\n    if (this.props.distributionSystemID != undefined) {\n      fetch(APIBaseURL + '/reports/distributionsystem?distributionsystemid=' + this.props.distributionSystemID, {\n        method: 'GET',\n        headers: {\n          \"Content-type\": \"application/json\",\n          \"User-UUID\": getCookieValue('user_uuid'),\n          \"Token\": getCookieValue('token')\n        },\n        body: null,\n\n      }).then(response => {\n        if (response.ok) {\n          isResponseOK = true;\n        }\n        return response.json();\n      }).then(json => {\n        if (isResponseOK) {\n          console.log(json);\n          let pointList = [];\n            json.forEach((currentCircuit, circuitIndex) => {\n              json[circuitIndex]['points'].forEach((currentPoint, pointIndex) => {\n                let pointItem = {}\n                pointItem['circuit'] = currentCircuit['name'];\n                pointItem['point'] = currentPoint['name'];\n                pointItem['value'] = currentPoint['value'];\n                pointItem['units'] = currentPoint['units'];\n                pointList.push(pointItem);\n              });\n            });\n          if (this._isMounted) {\n            this.setState({ \n              pointList: pointList,\n            });\n          }\n        } else {\n          toast.error(json.description)\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    //fetch realtime data at regular intervals\n    this.refreshInterval = setInterval(() => {\n      let isResponseOK = false;\n      if (this.props.distributionSystemID != undefined) {\n        fetch(APIBaseURL + '/reports/distributionsystem?distributionsystemid=' + this.props.distributionSystemID, {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            console.log(json);\n            let pointList = [];\n            json.forEach((currentCircuit, circuitIndex) => {\n              json[circuitIndex]['points'].forEach((currentPoint, pointIndex) => {\n                let pointItem = {}\n                pointItem['circuit'] = currentCircuit['name'];\n                pointItem['point'] = currentPoint['name'];\n                pointItem['value'] = currentPoint['value'];\n                pointItem['units'] = currentPoint['units'];\n                pointList.push(pointItem);\n              });\n            });\n            \n            if (this._isMounted) {\n              this.setState({ \n                pointList: pointList,\n              });\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    }, (60 + Math.floor(Math.random() * Math.floor(10))) * 1000); // use random interval to avoid paralels requests \n  }\n\n  render() {\n    const { t } = this.props;\n    \n    return (\n      <Card className=\"h-100 bg-gradient\">\n        <CardHeader className=\"bg-transparent\">\n          <h5 className=\"text-white\">{this.props.distributionSystemName}</h5>\n          <div className=\"real-time-user display-1 font-weight-normal text-white\">{this.state.latestUpdateDatetime}</div>\n        </CardHeader>\n        <CardBody className=\"text-white fs--1\">\n          <ListGroup flush className=\"mt-4\">\n          \n            <ListGroupItem\n              className=\"bg-transparent d-flex justify-content-between px-0 py-1 font-weight-semi-bold border-top-0\"\n              style={{ borderColor: listItemBorderColor }}\n            >\n              <p className=\"mb-0\">{t('Circuit')}</p>\n              <p className=\"mb-0\">{t('Point')}</p>\n              <p className=\"mb-0\">{t('Realtime Value')}</p>\n              <p className=\"mb-0\">{t('Unit')}</p>\n            </ListGroupItem>\n            {this.state.pointList.map(pointItem => (\n              <ListGroupItem key={uuid()}\n                className=\"bg-transparent d-flex justify-content-between px-0 py-1\"\n                style={{ borderColor: listItemBorderColor }}\n              >\n                <p className=\"mb-0\">{pointItem['circuit']}</p>\n                <p className=\"mb-0 \">{pointItem['point']}</p>\n                <p className=\"mb-0\">{pointItem['value']}</p>\n                <p className=\"mb-0\">{pointItem['units']}</p>\n              </ListGroupItem>\n            ))}\n          </ListGroup>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default  withTranslation()(RealtimeChart);\n","import React, { createRef, Fragment, useState, useEffect } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Card,\n  CardBody,\n  Col,\n  CustomInput,\n  Form,\n  FormGroup,\n  Label,\n  Row,\n  Spinner,\n} from 'reactstrap';\nimport RealtimeChart from './RealtimeChart';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport uuid from 'uuid/v1';\nimport { toast } from 'react-toastify';\nimport { APIBaseURL } from '../../../config';\n\n\nconst DistributionSystem = ({ setRedirect, setRedirectUrl, t }) => {\n\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  let table = createRef();\n  // State\n  // Query Parameters\n  const [distributionSystemList, setDistributionSystemList] = useState([]);\n  const [selectedDistributionSystemName, setSelectedDistributionSystemName] = useState(undefined);\n  const [selectedDistributionSystemID, setSelectedDistributionSystemID] = useState(undefined);\n  \n  //Results\n  const [images, setImages] = useState([]);\n  const [spinnerHidden, setSpinnerHidden] = useState(false);\n\n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/distributionsystems', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify(json).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        \n        console.log(json);\n        setDistributionSystemList(json);\n        setSelectedDistributionSystemID([json[0]].map(o => o.value));\n        setSelectedDistributionSystemName([json[0]].map(o => o.label));\n        \n        let images = {};\n        json.forEach((currentValue, index) => {\n          images[currentValue['value']] = {__html: currentValue['svg']}\n        });\n        setImages(images);\n        setSpinnerHidden(true);\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  let onDistributionSystemChange = (event) => {\n    // console.log('onDistributionSystemChange');\n    // console.log(event.target.value);\n\n    setSelectedDistributionSystemID(event.target.value);\n    distributionSystemList.forEach((currentItem, index) => {\n      if (currentItem['value'] == event.target.value) {\n        setSelectedDistributionSystemName(currentItem['label']);\n      }\n    });\n    \n  }\n\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Auxiliary System')}</BreadcrumbItem><BreadcrumbItem active>{t('Distribution System')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form >\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup>\n                  <Label className={labelClasses} for=\"distributionSystemSelect\">\n                    {t('Distribution System')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"distributionSystemSelect\" name=\"distributionSystemSelect\"\n                    value={selectedDistributionSystemID} onChange={onDistributionSystemChange}\n                  >\n                    {distributionSystemList.map((distributionSystem, index) => (\n                      <option value={distributionSystem.value} key={distributionSystem.value}>\n                        {distributionSystem.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>              \n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <Row noGutters>\n        \n        <Col lg=\"4\" className=\"pr-lg-2\" key={uuid()}>\n          <RealtimeChart \n            distributionSystemID={selectedDistributionSystemID} \n            distributionSystemName={selectedDistributionSystemName}  \n          />\n        </Col>\n        \n        <Col lg=\"8\" className=\"pr-lg-2\">\n          <div dangerouslySetInnerHTML={images[selectedDistributionSystemID]} />\n        </Col>\n\n      </Row>\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(DistributionSystem));\n","import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Badge, Col, Row } from 'reactstrap';\nimport { isIterableArray } from '../../../helpers/utils';\nimport Slider from 'react-slick/lib';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Flex from '../../common/Flex';\nimport classNames from 'classnames';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport AppContext, { ProductContext } from '../../../context/Context';\nimport { withTranslation } from 'react-i18next';\n\n\n\nconst EquipmentList = ({\n  id,\n  files,\n  title,\n  category,\n  features,\n  parameter1,\n  parameter2,\n  parameter3,\n  parameter4,\n  parameter5,\n  parameter6,\n  parameter7,\n  alarms,\n  isOnline,\n  isRunning,\n  sliderSettings,\n  index,\n  t\n}) => {\n  const { isDark } = useContext(AppContext);\n  const {  favouriteItemsDispatch } = useContext(ProductContext);\n  const [cartLoading, setCartLoading] = useState(false);\n\n  const handleAddToCart = () => {\n    setCartLoading(true);\n    setTimeout(() => {\n      setCartLoading(false);\n    }, 1000);\n  };\n\n  return (\n    <Col xs={12} className={classNames('p-3', { 'bg-100': isDark && index % 2 !== 0 })}>\n      <div className=\"p-1\">\n        <Row>\n          <Col sm={5} md={4}>\n            <div className=\"position-relative h-sm-100\">\n              {isIterableArray(files) && files.length === 1 && (\n                <img\n                  className=\"img-fluid fit-cover w-sm-100 h-sm-100 rounded absolute-sm-centered\"\n                  src={files[0]['src'] || files[0]['base64']}\n                  alt={files[0].path}\n                />\n              )}\n              {isIterableArray(files) && files.length > 1 && (\n                <Slider {...sliderSettings}>\n                  {files.map(file => (\n                    <img\n                      className=\"img-fluid fit-cover w-sm-100 h-sm-100 rounded\"\n                      src={file['src'] || file['base64']}\n                      alt={file.path}\n                    />\n                  ))}\n                </Slider>\n              )}\n\n              {isRunning && (\n                <Badge color=\"success\" pill className=\"position-absolute t-0 r-0 mr-2 mt-2 fs--2 z-index-2\">\n                  运行\n                </Badge>\n              )}\n            </div>\n          </Col>\n          <Col sm={7} md={8}>\n            <Row>\n              <Col lg={8}>\n                <h5 className=\"mt-3 mt-sm-0\">\n                  {title}\n                </h5>\n                <p className=\"fs--1 mb-2 mb-md-3\">\n                  <a className=\"text-500\" href=\"#!\">\n                    {category}\n                  </a>\n                </p>\n                {isIterableArray(features) && (\n                  <ul className=\"list-unstyled d-none d-lg-block\">\n                    {features.map((feature, index) => (\n                      <li key={index}>\n                        <FontAwesomeIcon icon=\"circle\" transform=\"shrink-12\" />\n                        <span>{feature}</span>\n                      </li>\n                    ))}\n                  </ul>\n                )}\n              </Col>\n              <Col lg={4} tag={Flex} justify=\"between\" column>\n                <div>\n                  <h4 className=\"fs-1 fs-md-2 text-warning mb-0\">\n                    {t('Instantaneous Efficiency VALUE UNIT', {'VALUE': parameter1, 'UNIT': '(kWh/kWh)'} )}\n                  </h4>\n                  <div className=\"d-none d-lg-block\">\n                    <p className=\"fs--1 mb-1\">累计效率:<strong>{parameter2} kW/kW</strong></p>\n                    <p className=\"fs--1 mb-1\">总瞬时功率:<strong>{parameter3} kW</strong></p>\n                    <p className=\"fs--1 mb-1\">总功率因数:<strong>{parameter4}</strong></p>\n                    <p className=\"fs--1 mb-1\">有功功率:<strong>{parameter5} kW</strong></p>\n                    <p className=\"fs--1 mb-1\">冷冻水出水温度:<strong>{parameter6} degree C</strong></p>\n                    <p className=\"fs--1 mb-1\">冷冻水回水温度:<strong>{parameter7} degree C</strong></p>\n                    <p className=\"fs--1 mb-1\">\n                      {t('Communication Status')}:{' '}\n                      <strong className={classNames({ 'text-success': isOnline, 'text-danger': !isOnline })}>\n                        {isOnline ? t('Communication Online') : t('Communication Offline')}\n                      </strong>\n                    </p>\n                    <p className=\"fs--1 mb-1\">\n                      {t('Equipment Status')}:{' '}\n                      <strong className={classNames({ 'text-success': isRunning, 'text-danger': !isRunning })}>\n                        {isRunning ? t('Equipment Running') : t('Equipment Stopped')}\n                      </strong>\n                    </p>\n                  </div>\n                </div>\n                <div className=\"mt-md-2\">\n                  <ButtonIcon\n                    color={isRunning ? 'outline-danger' : 'outline-secondary'}\n                    size=\"sm\"\n                    className={classNames('w-lg-100 mt-2 mr-2 mr-lg-0', {\n                      'border-300': !isRunning\n                    })}\n                    icon={[isRunning ? 'fas' : 'far', 'exclamation-triangle']}\n                    onClick={() =>\n                      isRunning\n                        ? favouriteItemsDispatch({ type: 'REMOVE', id })\n                        : favouriteItemsDispatch({ type: 'ADD', payload: { id } })\n                    }\n                  >\n                    {t('Fault Alarms')}({alarms.length})\n                  </ButtonIcon>\n                  {cartLoading ? (\n                    <ButtonIcon\n                      color=\"primary\"\n                      size=\"sm\"\n                      icon=\"circle-notch\"\n                      iconClassName=\"fa-spin ml-2 d-none d-md-inline-block\"\n                      className=\"w-lg-100 mt-2\"\n                      style={{ cursor: 'progress' }}\n                      disabled\n                    >\n                      Processing\n                    </ButtonIcon>\n                  ) : (\n                      <ButtonIcon\n                        color=\"primary\"\n                        size=\"sm\"\n                        icon=\"users\"\n                        iconClassName=\"ml-2 d-none d-md-inline-block\"\n                        className=\"w-lg-100 mt-2\"\n                        onClick={handleAddToCart}\n                      >\n                        {t('Run Commands')}\n                      </ButtonIcon>\n                    )}\n                </div>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </div>\n    </Col>\n  );\n};\n\nEquipmentList.propTypes = {\n  title: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  sliderSettings: PropTypes.object.isRequired,\n  files: PropTypes.array,\n  parameter1: PropTypes.number,\n  parameter2: PropTypes.number,\n  parameter3: PropTypes.number,\n  parameter4: PropTypes.number,\n  parameter5: PropTypes.number,\n  parameter6: PropTypes.number,\n  parameter7: PropTypes.number,\n  cumulativePerformance: PropTypes.number,\n  alarms: PropTypes.array,\n  isOnline: PropTypes.bool,\n  isRunning: PropTypes.bool,\n  features: PropTypes.array\n};\n\nEquipmentList.defaultProps = { isRunning: false, isOnline: false, files: [] };\n\nexport default withTranslation()(EquipmentList);\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport AppContext from '../../../context/Context';\nimport { Button, CardFooter } from 'reactstrap';\nimport Flex from '../../common/Flex';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { getPaginationArray } from '../../../helpers/utils';\n\nconst EquipmentFooter = ({ meta, handler }) => {\n  const { isRTL } = useContext(AppContext);\n  const { total, pageNo, itemsPerPage, nextPageNo, prevPageNo } = meta;\n  const { nextPage, prevPage, currentPage } = handler;\n\n  return (\n    <CardFooter tag={Flex} justify=\"center\" align=\"center\" className=\"bg-light border-top\">\n      <Button color=\"falcon-default\" size=\"sm\" className=\"ml-1 ml-sm-2\" onClick={prevPage} disabled={!prevPageNo}>\n        <FontAwesomeIcon icon={`chevron-${isRTL ? 'right' : 'left'}`} />\n      </Button>\n      {getPaginationArray(total, itemsPerPage).map(page => (\n        <Button\n          color={pageNo === page ? 'falcon-primary' : 'falcon-default'}\n          size=\"sm\"\n          className=\"ml-2\"\n          onClick={() => currentPage(page)}\n          key={page}\n        >\n          {page}\n        </Button>\n      ))}\n      <Button color=\"falcon-default\" size=\"sm\" className=\"ml-1 ml-sm-2\" onClick={nextPage} disabled={!nextPageNo}>\n        <FontAwesomeIcon icon={`chevron-${isRTL ? 'left' : 'right'}`} />\n      </Button>\n    </CardFooter>\n  );\n};\n\nEquipmentFooter.propTypes = {\n  meta: PropTypes.object.isRequired,\n  handler: PropTypes.object.isRequired\n};\n\nexport default EquipmentFooter;\n","import { useState, useEffect } from 'react';\nimport chunk from 'lodash/chunk';\nimport { isIterableArray } from '../helpers/utils';\n\nconst usePagination = (items, defaultItemsPerPage = 5) => {\n  const [data, setData] = useState([]);\n  const [itemsChunk, setItemsChunk] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [lastPageNo, setLastPageNo] = useState(0);\n  const [itemsPerPage, setItemsPerPage] = useState(defaultItemsPerPage);\n  const [pageNo, setPageNo] = useState(null);\n  const [from, setFrom] = useState(1);\n  const [to, setTo] = useState(itemsPerPage);\n  const [prevPageNo, setPrevPageNo] = useState(true);\n  const [nextPageNo, setNextPageNo] = useState(true);\n\n  useEffect(() => {\n    setData(isIterableArray(itemsChunk[pageNo - 1]) ? itemsChunk[pageNo - 1] : []);\n  }, [setData, itemsPerPage, itemsChunk, pageNo]);\n\n  useEffect(() => {\n    setItemsChunk(chunk(items, itemsPerPage));\n    setPageNo(1);\n    setTotal(items.length);\n  }, [itemsPerPage, setPageNo, items]);\n\n  useEffect(() => {\n    setFrom(itemsPerPage * (pageNo - 1) + 1);\n    setTo(itemsPerPage * (pageNo - 1) + data.length);\n    setPrevPageNo(pageNo > 1 ? pageNo - 1 : null);\n    setNextPageNo(pageNo < lastPageNo ? pageNo + 1 : null);\n  }, [itemsPerPage, pageNo, data, lastPageNo]);\n\n  useEffect(() => {\n    setLastPageNo(itemsChunk.length);\n  }, [itemsChunk]);\n\n  const handleNextPage = () => setPageNo(pageNo + 1);\n  const handlePrevPage = () => setPageNo(pageNo - 1);\n\n  return {\n    data,\n    meta: { total, pageNo, lastPageNo, itemsPerPage, from, to, nextPageNo, prevPageNo },\n    handler: {\n      nextPage: handleNextPage,\n      prevPage: handlePrevPage,\n      currentPage: setPageNo,\n      perPage: setItemsPerPage\n    }\n  };\n};\n\nexport default usePagination;\n","import uuid from 'uuid/v1';\n\nimport product1 from './img/1.png';\nimport product2 from './img/2.png';\nimport product4 from './img/4.png';\nimport product3 from './img/3.png';\nimport product8 from './img/8.png';\nimport product6 from './img/6.png';\nimport product7 from './img/7.png';\nimport product5 from './img/5.png';\nimport product9 from './img/9.png';\n\nexport default [\n  {\n    id: uuid(),\n    files: [\n      {\n        id: uuid(),\n        path: ' product2',\n        src: product2\n      }\n    ],\n    title: '高压制冷机CH-ZL-01',\n    category: '成都项目/公区商场/空调水系统/冷水机组',\n    features: ['Brand: York', 'Manufactured: 2011', 'Ton:  800 Ton', 'Model#:  YKK8K3H9-CUG', 'Serial#:  SNXM-143960', 'Type:  Water-Cooled', 'Compressor Type:  Centrifugal', 'Power:  460 Volts / 60 Hz / 3 Ph', 'Refrigerant:  R-134a'],\n    parameter1: 5.6,\n    parameter2: 6.7,\n    parameter3: 26.20,\n    parameter4: 0.86,\n    parameter5: 24.0,\n    parameter6: 5.0,\n    parameter7: 25.1,\n    alarms: ['supply temperature is high', 'return temperature is low'],\n    isOnline: true,\n    isRunning: true\n  },\n  {\n    id: uuid(),\n    files: [\n      {\n        id: uuid(),\n        path: ' product1',\n        src: product1\n      }\n    ],\n    title: '高压制冷机CH-ZL-02',\n    category: '成都项目/公区商场/空调水系统/冷水机组',\n    features: ['Brand: York', 'Manufactured: 2011', 'Ton:  800 Ton', 'Model#:  YKK8K3H9-CUG', 'Serial#:  SNXM-143960', 'Type:  Water-Cooled', 'Compressor Type:  Centrifugal', 'Power:  460 Volts / 60 Hz / 3 Ph', 'Refrigerant:  R-134a'],\n    parameter1: 5.6,\n    parameter2: 6.7,\n    parameter3: 26.20,\n    parameter4: 0.86,\n    parameter5: 24.0,\n    parameter6: 5.0,\n    parameter7: 25.1,\n    alarms: ['supply temperature is high', 'return temperature is low'],\n    isOnline: true,\n    isRunning: true\n  },\n  {\n    id: uuid(),\n    files: [\n      {\n        id: uuid(),\n        path: ' product4',\n        src: product4\n      }\n    ],\n    title: '高压制冷机CH-ZL-03',\n    category: '成都项目/公区商场/空调水系统/冷水机组',\n    features: ['Brand: York', 'Manufactured: 2011', 'Ton:  800 Ton', 'Model#:  YKK8K3H9-CUG', 'Serial#:  SNXM-143960', 'Type:  Water-Cooled', 'Compressor Type:  Centrifugal', 'Power:  460 Volts / 60 Hz / 3 Ph', 'Refrigerant:  R-134a'],\n    parameter1: 5.6,\n    parameter2: 6.7,\n    parameter3: 26.20,\n    parameter4: 0.86,\n    parameter5: 24.0,\n    parameter6: 5.0,\n    parameter7: 25.1,\n    alarms: ['supply temperature is high', 'return temperature is low'],\n    isOnline: true,\n    isRunning: true\n  },\n  {\n    id: uuid(),\n    files: [\n      {\n        id: uuid(),\n        path: ' product3',\n        src: product3\n      }\n    ],\n    title: '高压制冷机CH-ZL-04',\n    category: '成都项目/公区商场/空调水系统/冷水机组',\n    features: ['Brand: York', 'Manufactured: 2011', 'Ton:  800 Ton', 'Model#:  YKK8K3H9-CUG', 'Serial#:  SNXM-143960', 'Type:  Water-Cooled', 'Compressor Type:  Centrifugal', 'Power:  460 Volts / 60 Hz / 3 Ph', 'Refrigerant:  R-134a'],\n    parameter1: 5.6,\n    parameter2: 6.7,\n    parameter3: 26.20,\n    parameter4: 0.86,\n    parameter5: 24.0,\n    parameter6: 5.0,\n    parameter7: 25.1,\n    alarms: ['supply temperature is high', 'return temperature is low'],\n    isOnline: true,\n    isRunning: true\n  },\n  {\n    id: uuid(),\n    files: [\n      {\n        id: uuid(),\n        path: ' product8',\n        src: product8\n      }\n    ],\n    title: '高压制冷机CH-ZL-05',\n    category: '成都项目/公区商场/空调水系统/冷水机组',\n    features: ['Brand: York', 'Manufactured: 2011', 'Ton:  800 Ton', 'Model#:  YKK8K3H9-CUG', 'Serial#:  SNXM-143960', 'Type:  Water-Cooled', 'Compressor Type:  Centrifugal', 'Power:  460 Volts / 60 Hz / 3 Ph', 'Refrigerant:  R-134a'],\n    parameter1: 5.6,\n    parameter2: 6.7,\n    parameter3: 26.20,\n    parameter4: 0.86,\n    parameter5: 24.0,\n    parameter6: 5.0,\n    parameter7: 25.1,\n    alarms: ['supply temperature is high', 'return temperature is low'],\n    isOnline: true,\n    isRunning: true\n  },\n  {\n    id: uuid(),\n    files: [\n      {\n        id: uuid(),\n        path: ' product6',\n        src: product6\n      }\n    ],\n    title: '高压制冷机CH-ZL-06',\n    category: '成都项目/公区商场/空调水系统/冷水机组',\n    features: ['Brand: York', 'Manufactured: 2011', 'Ton:  800 Ton', 'Model#:  YKK8K3H9-CUG', 'Serial#:  SNXM-143960', 'Type:  Water-Cooled', 'Compressor Type:  Centrifugal', 'Power:  460 Volts / 60 Hz / 3 Ph', 'Refrigerant:  R-134a'],\n    parameter1: 5.6,\n    parameter2: 6.7,\n    parameter3: 26.20,\n    parameter4: 0.86,\n    parameter5: 24.0,\n    parameter6: 5.0,\n    parameter7: 25.1,\n    alarms: ['supply temperature is high', 'return temperature is low'],\n    isOnline: true,\n    isRunning: true\n  },\n  {\n    id: uuid(),\n    files: [\n      {\n        id: uuid(),\n        path: ' product7',\n        src: product7\n      }\n    ],\n    title: '高压制冷机CH-ZL-07',\n    category: '成都项目/公区商场/空调水系统/冷水机组',\n    features: ['Brand: York', 'Manufactured: 2011', 'Ton:  800 Ton', 'Model#:  YKK8K3H9-CUG', 'Serial#:  SNXM-143960', 'Type:  Water-Cooled', 'Compressor Type:  Centrifugal', 'Power:  460 Volts / 60 Hz / 3 Ph', 'Refrigerant:  R-134a'],\n    parameter1: 5.6,\n    parameter2: 6.7,\n    parameter3: 26.20,\n    parameter4: 0.86,\n    parameter5: 24.0,\n    parameter6: 5.0,\n    parameter7: 25.1,\n    alarms: ['supply temperature is high', 'return temperature is low'],\n    isOnline: true,\n    isRunning: true\n  },\n  {\n    id: uuid(),\n    files: [\n      {\n        id: uuid(),\n        path: ' product5',\n        src: product5\n      }\n    ],\n    title: '高压制冷机CH-ZL-08',\n    category: '成都项目/公区商场/空调水系统/冷水机组',\n    features: ['Brand: York', 'Manufactured: 2011', 'Ton:  800 Ton', 'Model#:  YKK8K3H9-CUG', 'Serial#:  SNXM-143960', 'Type:  Water-Cooled', 'Compressor Type:  Centrifugal', 'Power:  460 Volts / 60 Hz / 3 Ph', 'Refrigerant:  R-134a'],\n    parameter1: 5.6,\n    parameter2: 6.7,\n    parameter3: 26.20,\n    parameter4: 0.86,\n    parameter5: 24.0,\n    parameter6: 5.0,\n    parameter7: 25.1,\n    alarms: ['supply temperature is high', 'return temperature is low'],\n    isOnline: true,\n    isRunning: true\n  },\n  {\n    id: uuid(),\n    files: [\n      {\n        id: uuid(),\n        path: ' product9',\n        src: product9\n      }\n    ],\n    title: '高压制冷机CH-ZL-09',\n    category: '成都项目/公区商场/空调水系统/冷水机组',\n    features: ['Brand: York', 'Manufactured: 2011', 'Ton:  800 Ton', 'Model#:  YKK8K3H9-CUG', 'Serial#:  SNXM-143960', 'Type:  Water-Cooled', 'Compressor Type:  Centrifugal', 'Power:  460 Volts / 60 Hz / 3 Ph', 'Refrigerant:  R-134a'],\n    parameter1: 5.6,\n    parameter2: 6.7,\n    parameter3: 26.20,\n    parameter4: 0.86,\n    parameter5: 24.0,\n    parameter6: 5.0,\n    parameter7: 25.1,\n    alarms: ['supply temperature is high', 'return temperature is low'],\n    isOnline: true,\n    isRunning: true\n  }\n];\n","import React, { Fragment, useState, useEffect } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  ButtonGroup,\n  Card,\n  CardBody,\n  Col,\n  CustomInput,\n  Row,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Spinner,\n} from 'reactstrap';\nimport Loader from '../../common/Loader';\nimport useFakeFetch from '../../../hooks/useFakeFetch';\nimport { isIterableArray } from '../../../helpers/utils';\nimport Flex from '../../common/Flex';\nimport Cascader from 'rc-cascader';\nimport classNames from 'classnames';\nimport EquipmentList from './EquipmentList';\nimport EquipmentFooter from './EquipmentFooter';\nimport usePagination from '../../../hooks/usePagination';\nimport equipments from './equipments';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport { APIBaseURL } from '../../../config';\n\n\nconst SpaceEquipments = ({ setRedirect, setRedirectUrl, t }) => {\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [equipmentIds, setEquipmentIds] = useState([]);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n  \n  // button\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n\n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  const sliderSettings = {\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  };\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    console.log(value, selectedOptions);\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n  }\n  // Hook\n  const { loading } = useFakeFetch(equipments);\n  const { data: paginationData, meta: paginationMeta, handler: paginationHandler } = usePagination(equipmentIds, 4);\n  const { total, itemsPerPage, from, to } = paginationMeta;\n  const { perPage } = paginationHandler;\n\n  const isList = true;\n  const isGrid = false;\n\n  useEffect(() => {\n    setEquipmentIds(equipments.map(equipment => equipment.id));\n  }, []);\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    // // disable submit button\n    // setSubmitButtonDisabled(true);\n    // // show spinner\n    // setSpinnerHidden(false);\n        \n    // // enable submit button\n    // setSubmitButtonDisabled(false);\n    // // hide spinner\n    // setSpinnerHidden(true);\n  };\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Monitoring')}</BreadcrumbItem><BreadcrumbItem active>{t('Space Equipments')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n\n\n      <Card>\n        <CardBody className={classNames({ 'p-0  overflow-hidden': isList, 'pb-0': isGrid })}>\n          {loading ? (\n            <Loader />\n          ) : (\n              <Row noGutters={isList}>\n                {isIterableArray(equipments) &&\n                  equipments\n                    .filter(equipment => paginationData.includes(equipment.id))\n                    .map((equipment, index) => <EquipmentList {...equipment} sliderSettings={sliderSettings} key={equipment.id} index={index} />)}\n              </Row>\n            )}\n        </CardBody>\n        <EquipmentFooter meta={paginationMeta} handler={paginationHandler} />\n      </Card>\n      <Card className=\"mb-3\">\n        <CardBody>\n          <Row className=\"justify-content-between align-items-center\">\n            <Col sm=\"auto\" className=\"mb-2 mb-sm-0\" tag={Flex} align=\"center\">\n              <h6 className=\"mb-0 text-nowrap ml-2\">\n                {t('Show Up to')}\n              </h6>\n              <CustomInput\n                id=\"itemsPerPage\"\n                type=\"select\"\n                bsSize=\"sm\"\n                value={itemsPerPage}\n                onChange={({ target }) => perPage(Number(target.value))}\n              >\n                <option value={2}>2</option>\n                <option value={4}>4</option>\n                <option value={6}>6</option>\n                <option value={total}>{t('All')}</option>\n              </CustomInput>\n              <h6 className=\"mb-0 text-nowrap ml-2\">\n                {t('FROM - TO of TOTAL Equipments', { 'FROM': from, 'TO': to, 'TOTAL': total })}\n              </h6>\n            </Col>\n\n          </Row>\n        </CardBody>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(SpaceEquipments));\n","import React, { Fragment, useState, useEffect } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  ButtonGroup,\n  Card,\n  CardBody,\n  Col,\n  CustomInput,\n  Row,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Spinner,\n} from 'reactstrap';\nimport Loader from '../../common/Loader';\nimport useFakeFetch from '../../../hooks/useFakeFetch';\nimport { isIterableArray } from '../../../helpers/utils';\nimport Flex from '../../common/Flex';\nimport Cascader from 'rc-cascader';\nimport classNames from 'classnames';\nimport EquipmentList from './EquipmentList';\nimport EquipmentFooter from './EquipmentFooter';\nimport usePagination from '../../../hooks/usePagination';\nimport equipments from './equipments';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport { APIBaseURL } from '../../../config';\n\n\nconst CombinedEquipments = ({ setRedirect, setRedirectUrl, t }) => {\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [combinedEquipmentList, setCombinedEquipmentList] = useState([]);\n  const [selectedCombinedEquipment, setSelectedCombinedEquipment] = useState(undefined);\n  const [equipmentIds, setEquipmentIds] = useState([]);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n  \n  // button\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n\n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Combined Equipments by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/combinedequipments', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setCombinedEquipmentList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedCombinedEquipment(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedCombinedEquipment(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Combined Equipments by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  const sliderSettings = {\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  };\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/combinedequipments', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setCombinedEquipmentList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedCombinedEquipment(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedCombinedEquipment(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  // Hook\n  const { loading } = useFakeFetch(equipments);\n  const { data: paginationData, meta: paginationMeta, handler: paginationHandler } = usePagination(equipmentIds, 4);\n  const { total, itemsPerPage, from, to } = paginationMeta;\n  const { perPage } = paginationHandler;\n\n  const isList = true;\n  const isGrid = false;\n\n  useEffect(() => {\n    setEquipmentIds(equipments.map(equipment => equipment.id));\n  }, []);\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedCombinedEquipment);\n    // // disable submit button\n    // setSubmitButtonDisabled(true);\n    // // show spinner\n    // setSpinnerHidden(false);\n        \n    // // enable submit button\n    // setSubmitButtonDisabled(false);\n    // // hide spinner\n    // setSpinnerHidden(true);\n\n  };\n  \n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Monitoring')}</BreadcrumbItem><BreadcrumbItem active>{t('Combined Equipments')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"combinedEquipmentSelect\">\n                    {t('Combined Equipment')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"combinedEquipmentSelect\" name=\"combinedEquipmentSelect\" onChange={({ target }) => setSelectedCombinedEquipment(target.value)}\n                  >\n                    {combinedEquipmentList.map((combinedEquipment, index) => (\n                      <option value={combinedEquipment.value} key={combinedEquipment.value}>\n                        {combinedEquipment.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n\n\n      <Card>\n        <CardBody className={classNames({ 'p-0  overflow-hidden': isList, 'pb-0': isGrid })}>\n          {loading ? (\n            <Loader />\n          ) : (\n              <Row noGutters={isList}>\n                {isIterableArray(equipments) &&\n                  equipments\n                    .filter(equipment => paginationData.includes(equipment.id))\n                    .map((equipment, index) => <EquipmentList {...equipment} sliderSettings={sliderSettings} key={equipment.id} index={index} />)}\n              </Row>\n            )}\n        </CardBody>\n        <EquipmentFooter meta={paginationMeta} handler={paginationHandler} />\n      </Card>\n      <Card className=\"mb-3\">\n        <CardBody>\n          <Row className=\"justify-content-between align-items-center\">\n            <Col sm=\"auto\" className=\"mb-2 mb-sm-0\" tag={Flex} align=\"center\">\n              <h6 className=\"mb-0 text-nowrap ml-2\">\n                {t('Show Up to')}\n              </h6>\n              <CustomInput\n                id=\"itemsPerPage\"\n                type=\"select\"\n                bsSize=\"sm\"\n                value={itemsPerPage}\n                onChange={({ target }) => perPage(Number(target.value))}\n              >\n                <option value={2}>2</option>\n                <option value={4}>4</option>\n                <option value={6}>6</option>\n                <option value={total}>{t('All')}</option>\n              </CustomInput>\n              <h6 className=\"mb-0 text-nowrap ml-2\">\n                {t('FROM - TO of TOTAL Equipments', { 'FROM': from, 'TO': to, 'TOTAL': total })}\n              </h6>\n            </Col>\n\n          </Row>\n        </CardBody>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(CombinedEquipments));\n","import React, { Fragment, useState, useEffect } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  ButtonGroup,\n  Card,\n  CardBody,\n  Col,\n  CustomInput,\n  Row,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Spinner,\n} from 'reactstrap';\nimport Loader from '../../common/Loader';\nimport useFakeFetch from '../../../hooks/useFakeFetch';\nimport { isIterableArray } from '../../../helpers/utils';\nimport Flex from '../../common/Flex';\nimport Cascader from 'rc-cascader';\nimport classNames from 'classnames';\nimport EquipmentList from './EquipmentList';\nimport EquipmentFooter from './EquipmentFooter';\nimport usePagination from '../../../hooks/usePagination';\nimport equipments from './equipments';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport { APIBaseURL } from '../../../config';\n\n\nconst TenantEquipments = ({ setRedirect, setRedirectUrl, t }) => {\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [tenantList, setTenantList] = useState([]);\n  const [selectedTenant, setSelectedTenant] = useState(undefined);\n  const [equipmentIds, setEquipmentIds] = useState([]);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n  \n  // button\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n\n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Tenants by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/tenants', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setTenantList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedTenant(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedTenant(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Tenants by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  const sliderSettings = {\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  };\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/tenants', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setTenantList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedTenant(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedTenant(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  // Hook\n  const { loading } = useFakeFetch(equipments);\n  const { data: paginationData, meta: paginationMeta, handler: paginationHandler } = usePagination(equipmentIds, 4);\n  const { total, itemsPerPage, from, to } = paginationMeta;\n  const { perPage } = paginationHandler;\n\n  const isList = true;\n  const isGrid = false;\n\n  useEffect(() => {\n    setEquipmentIds(equipments.map(equipment => equipment.id));\n  }, []);\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedTenant);\n    // // disable submit button\n    // setSubmitButtonDisabled(true);\n    // // show spinner\n    // setSpinnerHidden(false);\n        \n    // // enable submit button\n    // setSubmitButtonDisabled(false);\n    // // hide spinner\n    // setSpinnerHidden(true);\n  };\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Monitoring')}</BreadcrumbItem><BreadcrumbItem active>{t('Tenant Equipments')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"tenantSelect\">\n                    {t('Tenant')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"tenantSelect\" name=\"tenantSelect\" onChange={({ target }) => setSelectedTenant(target.value)}\n                  >\n                    {tenantList.map((tenant, index) => (\n                      <option value={tenant.value} key={tenant.value}>\n                        {tenant.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n\n\n      <Card>\n        <CardBody className={classNames({ 'p-0  overflow-hidden': isList, 'pb-0': isGrid })}>\n          {loading ? (\n            <Loader />\n          ) : (\n              <Row noGutters={isList}>\n                {isIterableArray(equipments) &&\n                  equipments\n                    .filter(equipment => paginationData.includes(equipment.id))\n                    .map((equipment, index) => <EquipmentList {...equipment} sliderSettings={sliderSettings} key={equipment.id} index={index} />)}\n              </Row>\n            )}\n        </CardBody>\n        <EquipmentFooter meta={paginationMeta} handler={paginationHandler} />\n      </Card>\n      <Card className=\"mb-3\">\n        <CardBody>\n          <Row className=\"justify-content-between align-items-center\">\n            <Col sm=\"auto\" className=\"mb-2 mb-sm-0\" tag={Flex} align=\"center\">\n              <h6 className=\"mb-0 text-nowrap ml-2\">\n                {t('Show Up to')}\n              </h6>\n              <CustomInput\n                id=\"itemsPerPage\"\n                type=\"select\"\n                bsSize=\"sm\"\n                value={itemsPerPage}\n                onChange={({ target }) => perPage(Number(target.value))}\n              >\n                <option value={2}>2</option>\n                <option value={4}>4</option>\n                <option value={6}>6</option>\n                <option value={total}>{t('All')}</option>\n              </CustomInput>\n              <h6 className=\"mb-0 text-nowrap ml-2\">\n                {t('FROM - TO of TOTAL Equipments', { 'FROM': from, 'TO': to, 'TOTAL': total })}\n              </h6>\n            </Col>\n\n          </Row>\n        </CardBody>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(TenantEquipments));\n","import React, { Fragment, useState, useEffect } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  ButtonGroup,\n  Card,\n  CardBody,\n  Col,\n  CustomInput,\n  Row,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Spinner,\n} from 'reactstrap';\nimport Loader from '../../common/Loader';\nimport useFakeFetch from '../../../hooks/useFakeFetch';\nimport { isIterableArray } from '../../../helpers/utils';\nimport Flex from '../../common/Flex';\nimport Cascader from 'rc-cascader';\nimport classNames from 'classnames';\nimport EquipmentList from './EquipmentList';\nimport EquipmentFooter from './EquipmentFooter';\nimport usePagination from '../../../hooks/usePagination';\nimport equipments from './equipments';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport ButtonIcon from '../../common/ButtonIcon';\nimport { APIBaseURL } from '../../../config';\n\n\nconst TenantEquipments = ({ setRedirect, setRedirectUrl, t }) => {\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [storeList, setStoreList] = useState([]);\n  const [selectedStore, setSelectedStore] = useState(undefined);\n  const [equipmentIds, setEquipmentIds] = useState([]);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n  \n  // button\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n\n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response)\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json)\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Stores by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/stores', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setStoreList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedStore(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedStore(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Stores by root Space ID\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  const sliderSettings = {\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  };\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/stores', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setStoreList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedStore(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedStore(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  // Hook\n  const { loading } = useFakeFetch(equipments);\n  const { data: paginationData, meta: paginationMeta, handler: paginationHandler } = usePagination(equipmentIds, 4);\n  const { total, itemsPerPage, from, to } = paginationMeta;\n  const { perPage } = paginationHandler;\n\n  const isList = true;\n  const isGrid = false;\n\n  useEffect(() => {\n    setEquipmentIds(equipments.map(equipment => equipment.id));\n  }, []);\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    // // disable submit button\n    // setSubmitButtonDisabled(true);\n    // // show spinner\n    // setSpinnerHidden(false);\n        \n    // // enable submit button\n    // setSubmitButtonDisabled(false);\n    // // hide spinner\n    // setSpinnerHidden(true);\n  };\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Monitoring')}</BreadcrumbItem><BreadcrumbItem active>{t('Store Equipments')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"storeSelect\">\n                    {t('Store')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"storeSelect\" name=\"storeSelect\" onChange={({ target }) => setSelectedStore(target.value)}\n                  >\n                    {storeList.map((store, index) => (\n                      <option value={store.value} key={store.value}>\n                        {store.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n\n\n      <Card>\n        <CardBody className={classNames({ 'p-0  overflow-hidden': isList, 'pb-0': isGrid })}>\n          {loading ? (\n            <Loader />\n          ) : (\n              <Row noGutters={isList}>\n                {isIterableArray(equipments) &&\n                  equipments\n                    .filter(equipment => paginationData.includes(equipment.id))\n                    .map((equipment, index) => <EquipmentList {...equipment} sliderSettings={sliderSettings} key={equipment.id} index={index} />)}\n              </Row>\n            )}\n        </CardBody>\n        <EquipmentFooter meta={paginationMeta} handler={paginationHandler} />\n      </Card>\n      <Card className=\"mb-3\">\n        <CardBody>\n          <Row className=\"justify-content-between align-items-center\">\n            <Col sm=\"auto\" className=\"mb-2 mb-sm-0\" tag={Flex} align=\"center\">\n              <h6 className=\"mb-0 text-nowrap ml-2\">\n                {t('Show Up to')}\n              </h6>\n              <CustomInput\n                id=\"itemsPerPage\"\n                type=\"select\"\n                bsSize=\"sm\"\n                value={itemsPerPage}\n                onChange={({ target }) => perPage(Number(target.value))}\n              >\n                <option value={2}>2</option>\n                <option value={4}>4</option>\n                <option value={6}>6</option>\n                <option value={total}>{t('All')}</option>\n              </CustomInput>\n              <h6 className=\"mb-0 text-nowrap ml-2\">\n                {t('FROM - TO of TOTAL Equipments', { 'FROM': from, 'TO': to, 'TOTAL': total })}\n              </h6>\n            </Col>\n\n          </Row>\n        </CardBody>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(TenantEquipments));\n","import React, { Fragment, useState, useEffect } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  ButtonGroup,\n  Card,\n  CardBody,\n  Col,\n  CustomInput,\n  Row,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Spinner,\n} from 'reactstrap';\nimport Loader from '../../common/Loader';\nimport useFakeFetch from '../../../hooks/useFakeFetch';\nimport { isIterableArray } from '../../../helpers/utils';\nimport Flex from '../../common/Flex';\nimport Cascader from 'rc-cascader';\nimport classNames from 'classnames';\nimport EquipmentList from './EquipmentList';\nimport EquipmentFooter from './EquipmentFooter';\nimport usePagination from '../../../hooks/usePagination';\nimport equipments from './equipments';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport { APIBaseURL } from '../../../config';\n\n\nconst TenantEquipments = ({ setRedirect, setRedirectUrl, t }) => {\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n  // State\n  const [selectedSpaceName, setSelectedSpaceName] = useState(undefined);\n  const [selectedSpaceID, setSelectedSpaceID] = useState(undefined);\n  const [shopfloorList, setShopfloorList] = useState([]);\n  const [selectedShopfloor, setSelectedShopfloor] = useState(undefined);\n  const [equipmentIds, setEquipmentIds] = useState([]);\n  const [cascaderOptions, setCascaderOptions] = useState(undefined);\n  \n  // button\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(true);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n\n  useEffect(() => {\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/tree', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      console.log(response);\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      console.log(json);\n      if (isResponseOK) {\n        // rename keys \n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        setCascaderOptions(json);\n        setSelectedSpaceName([json[0]].map(o => o.label));\n        setSelectedSpaceID([json[0]].map(o => o.value));\n        // get Shopfloors by root Space ID\n        let isResponseOK = false;\n        fetch(APIBaseURL + '/spaces/' + [json[0]].map(o => o.value) + '/shopfloors', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n            console.log(json);\n            setShopfloorList(json[0]);\n            if (json[0].length > 0) {\n              setSelectedShopfloor(json[0][0].value);\n              // enable submit button\n              setSubmitButtonDisabled(false);\n            } else {\n              setSelectedShopfloor(undefined);\n              // disable submit button\n              setSubmitButtonDisabled(true);\n            }\n          } else {\n            toast.error(json.description)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        // end of get Shopfloors by root Space ID\n      } else {\n        toast.error(json.description);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n\n  }, []);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n\n  const sliderSettings = {\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  };\n\n  let onSpaceCascaderChange = (value, selectedOptions) => {\n    setSelectedSpaceName(selectedOptions.map(o => o.label).join('/'));\n    setSelectedSpaceID(value[value.length - 1]);\n\n    let isResponseOK = false;\n    fetch(APIBaseURL + '/spaces/' + value[value.length - 1] + '/shopfloors', {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      }\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        json = JSON.parse(JSON.stringify([json]).split('\"id\":').join('\"value\":').split('\"name\":').join('\"label\":'));\n        console.log(json)\n        setShopfloorList(json[0]);\n        if (json[0].length > 0) {\n          setSelectedShopfloor(json[0][0].value);\n          // enable submit button\n          setSubmitButtonDisabled(false);\n        } else {\n          setSelectedShopfloor(undefined);\n          // disable submit button\n          setSubmitButtonDisabled(true);\n        }\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  // Hook\n  const { loading } = useFakeFetch(equipments);\n  const { data: paginationData, meta: paginationMeta, handler: paginationHandler } = usePagination(equipmentIds, 4);\n  const { total, itemsPerPage, from, to } = paginationMeta;\n  const { perPage } = paginationHandler;\n\n  const isList = true;\n  const isGrid = false;\n\n  useEffect(() => {\n    setEquipmentIds(equipments.map(equipment => equipment.id));\n  }, []);\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(selectedSpaceID);\n    console.log(selectedShopfloor);\n    // // disable submit button\n    // setSubmitButtonDisabled(true);\n    // // show spinner\n    // setSpinnerHidden(false);\n        \n    // // enable submit button\n    // setSubmitButtonDisabled(false);\n    // // hide spinner\n    // setSpinnerHidden(true);\n\n  };\n\n  return (\n    <Fragment>\n      <div>\n        <Breadcrumb>\n          <BreadcrumbItem>{t('Monitoring')}</BreadcrumbItem><BreadcrumbItem active>{t('Shopfloor Equipments')}</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs={6} sm={3}>\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"space\">\n                    {t('Space')}\n                  </Label>\n                  <br />\n                  <Cascader options={cascaderOptions}\n                    onChange={onSpaceCascaderChange}\n                    changeOnSelect\n                    expandTrigger=\"hover\">\n                    <Input value={selectedSpaceName || ''} readOnly />\n                  </Cascader>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <Label className={labelClasses} for=\"shopfloorSelect\">\n                    {t('Shopfloor')}\n                  </Label>\n                  <CustomInput type=\"select\" id=\"shopfloorSelect\" name=\"shopfloorSelect\" onChange={({ target }) => setSelectedShopfloor(target.value)}\n                  >\n                    {shopfloorList.map((shopfloor, index) => (\n                      <option value={shopfloor.value} key={shopfloor.value}>\n                        {shopfloor.label}\n                      </option>\n                    ))}\n                  </CustomInput>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n\n\n      <Card>\n        <CardBody className={classNames({ 'p-0  overflow-hidden': isList, 'pb-0': isGrid })}>\n          {loading ? (\n            <Loader />\n          ) : (\n              <Row noGutters={isList}>\n                {isIterableArray(equipments) &&\n                  equipments\n                    .filter(equipment => paginationData.includes(equipment.id))\n                    .map((equipment, index) => <EquipmentList {...equipment} sliderSettings={sliderSettings} key={equipment.id} index={index} />)}\n              </Row>\n            )}\n        </CardBody>\n        <EquipmentFooter meta={paginationMeta} handler={paginationHandler} />\n      </Card>\n      <Card className=\"mb-3\">\n        <CardBody>\n          <Row className=\"justify-content-between align-items-center\">\n            <Col sm=\"auto\" className=\"mb-2 mb-sm-0\" tag={Flex} align=\"center\">\n              <h6 className=\"mb-0 text-nowrap ml-2\">\n                {t('Show Up to')}\n              </h6>\n              <CustomInput\n                id=\"itemsPerPage\"\n                type=\"select\"\n                bsSize=\"sm\"\n                value={itemsPerPage}\n                onChange={({ target }) => perPage(Number(target.value))}\n              >\n                <option value={2}>2</option>\n                <option value={4}>4</option>\n                <option value={6}>6</option>\n                <option value={total}>{t('All')}</option>\n              </CustomInput>\n              <h6 className=\"mb-0 text-nowrap ml-2\">\n                {t('FROM - TO of TOTAL Equipments', { 'FROM': from, 'TO': to, 'TOTAL': total })}\n              </h6>\n            </Col>\n\n          </Row>\n        </CardBody>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default withTranslation()(withRedirect(TenantEquipments));\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Calendar = ({ month, day }) => (\n  <div className=\"calendar\">\n    <span className=\"calendar-month\">{month}</span>\n    <span className=\"calendar-day\">{day}</span>\n  </div>\n);\n\nCalendar.propTypes = {\n  month: PropTypes.string.isRequired,\n  day: PropTypes.string.isRequired\n};\n\nexport default Calendar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Badge, Media } from 'reactstrap';\nimport Calendar from '../../common/Calendar';\nimport ButtonIcon from '../../common/ButtonIcon';\n\nconst ReportBadge = ({ text, ...rest }) => <Badge {...rest}>{text}</Badge>;\n\nReportBadge.propTypes = {\n  ...Badge.propTypes,\n  text: PropTypes.string.isRequired\n};\n\nconst handleExport = (fileName, fileBytesBase64) => e => {\n  e.preventDefault();\n  const mimeType='application/*'\n  var fileUrl = \"data:\" + mimeType + \";base64,\" + fileBytesBase64;\n  fetch(fileUrl)\n      .then(response => response.blob())\n      .then(blob => {\n          var link = window.document.createElement(\"a\");\n          link.href = window.URL.createObjectURL(blob, { type: mimeType });\n          link.download = fileName;\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n      });\n};\n\nconst Summary = ({ calendar, title, badge, divider, to, children, file_bytes_base64 }) => (\n  <Media>\n    <Calendar {...calendar} />\n    <Media body className=\"position-relative pl-3\">\n      <h6 className=\"fs-0 mb-0\">\n        <Link to={to}  onClick={handleExport(title, file_bytes_base64)}>{title}</Link> {badge && <ReportBadge {...badge} className=\"ml-1\" />}\n      </h6>\n      {children}\n      \n      {divider && <hr className=\"border-dashed border-bottom-0\" />}\n    </Media>\n  </Media>\n);\n\nSummary.propTypes = {\n  calendar: PropTypes.shape(Calendar.propTypes).isRequired,\n  title: PropTypes.string.isRequired,\n  divider: PropTypes.bool,\n  to: PropTypes.string.isRequired,\n  badge: PropTypes.shape(ReportBadge.propTypes),\n  children: PropTypes.node,\n  file_bytes_base64: PropTypes.string.isRequired\n};\n\nSummary.defaultProps = { divider: true };\n\nexport default Summary;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  Alert,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonGroup,\n  Form,\n  FormGroup,\n  Label,\n  Spinner\n} from 'reactstrap';\nimport Summary from './Summary';\nimport Loader from '../../common/Loader';\nimport FalconCardHeader from '../../common/FalconCardHeader';\nimport uuid from 'uuid/v1';\nimport Datetime from 'react-datetime';\nimport moment from 'moment';\nimport createMarkup from '../../../helpers/createMarkup';\nimport { isIterableArray } from '../../../helpers/utils';\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport { APIBaseURL } from '../../../config';\n\n\nconst AdvacnedReporting = ({ setRedirect, setRedirectUrl, t }) => {\n  let current_moment = moment();\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n    }\n  });\n\n  // State\n  // Query Parameters\n  const [reportingPeriodBeginsDatetime, setReportingPeriodBeginsDatetime] = useState(current_moment.clone().startOf('month'));\n  const [reportingPeriodEndsDatetime, setReportingPeriodEndsDatetime] = useState(current_moment);\n\n  // button\n  const [submitButtonDisabled, setSubmitButtonDisabled] = useState(false);\n  const [spinnerHidden, setSpinnerHidden] = useState(true);\n\n  //Results\n  const [reports, setReports] = useState([]);\n\n  const labelClasses = 'ls text-uppercase text-600 font-weight-semi-bold mb-0';\n  \n  let onReportingPeriodBeginsDatetimeChange = (newDateTime) => {\n    setReportingPeriodBeginsDatetime(newDateTime);\n  }\n\n  let onReportingPeriodEndsDatetimeChange = (newDateTime) => {\n    setReportingPeriodEndsDatetime(newDateTime);\n  }\n\n  var getValidReportingPeriodBeginsDatetimes = function (currentDate) {\n    return currentDate.isBefore(moment(reportingPeriodEndsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  var getValidReportingPeriodEndsDatetimes = function (currentDate) {\n    return currentDate.isAfter(moment(reportingPeriodBeginsDatetime, 'MM/DD/YYYY, hh:mm:ss a'));\n  }\n\n  // Handler\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('handleSubmit');\n    console.log(reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n    console.log(reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'));\n\n    // disable submit button\n    setSubmitButtonDisabled(true);\n    // show spinner\n    setSpinnerHidden(false);\n    \n    let isResponseOK = false;\n    fetch(APIBaseURL + '/reports/advancedreports?' +\n      'reportingperiodstartdatetime=' + reportingPeriodBeginsDatetime.format('YYYY-MM-DDTHH:mm:ss') +\n      '&reportingperiodenddatetime=' + reportingPeriodEndsDatetime.format('YYYY-MM-DDTHH:mm:ss'), {\n      method: 'GET',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"User-UUID\": getCookieValue('user_uuid'),\n        \"Token\": getCookieValue('token')\n      },\n      body: null,\n\n    }).then(response => {\n      if (response.ok) {\n        isResponseOK = true;\n      };\n      return response.json();\n    }).then(json => {\n      if (isResponseOK) {\n        console.log(json);\n        let reportList = []\n\n        if (json.length > 0) {\n          json.forEach((currentValue, index) => {\n            let report = {}\n            report['id'] = json[index]['id'];\n            report['calendar'] = { month: json[index]['create_datetime_local'].substring(5, 7), \n            day: json[index]['create_datetime_local'].substring(8, 10) };\n            report['title'] = json[index]['file_name'] + '.' + json[index]['file_type'];\n            report['additional'] = t('Created Datetime') + ': ' + json[index]['create_datetime_local']  + '<br/>' +\n            t('File Size') + ': ' + (json[index]['file_size_bytes']/(1024*1024)).toFixed(2) + ' MB';\n            report['to'] = '#';\n            report['file_bytes_base64'] = json[index]['file_bytes_base64'];\n\n            reportList.push(report);\n          });\n        }\n      \n        setReports(reportList);\n\n        // enable submit button\n        setSubmitButtonDisabled(false);\n        // hide spinner\n        setSpinnerHidden(true);\n\n      } else {\n        toast.error(json.description)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n\n  return (\n    <Fragment>\n      <Card className=\"bg-light mb-3\">\n        <CardBody className=\"p-3\">\n          <Form onSubmit={handleSubmit}>\n            <Row form>\n              <Col xs=\"auto\">\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodBeginsDatetime\">\n                    {t('Reporting Period Begins')}\n                  </Label>\n                  <Datetime id='reportingPeriodBeginsDatetime'\n                    value={reportingPeriodBeginsDatetime}\n                    onChange={onReportingPeriodBeginsDatetimeChange}\n                    isValidDate={getValidReportingPeriodBeginsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup className=\"form-group\">\n                  <Label className={labelClasses} for=\"reportingPeriodEndsDatetime\">\n                    {t('Reporting Period Ends')}\n                  </Label>\n                  <Datetime id='reportingPeriodEndsDatetime'\n                    value={reportingPeriodEndsDatetime}\n                    onChange={onReportingPeriodEndsDatetimeChange}\n                    isValidDate={getValidReportingPeriodEndsDatetimes}\n                    closeOnSelect={true} />\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <ButtonGroup id=\"submit\">\n                    <Button color=\"success\" disabled={submitButtonDisabled} >{t('Submit')}</Button>\n                  </ButtonGroup>\n                </FormGroup>\n              </Col>\n              <Col xs=\"auto\">\n                <FormGroup>\n                  <br></br>\n                  <Spinner color=\"primary\" hidden={spinnerHidden}  />\n                </FormGroup>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n      <Card>\n        <FalconCardHeader title={t('Advanced Reporting')}></FalconCardHeader>\n        <CardBody className=\"fs--1\">\n          {isIterableArray(reports) ? (\n            <Row>\n              {reports.map(({ additional, ...rest }, index) => (\n                <Col md={6} className=\"h-100\" key={index}>\n                  <Summary  divider={reports.length !== index + 1} {...rest}>\n                    <p className=\"text-1000 mb-0\" dangerouslySetInnerHTML={createMarkup(additional)} />\n                  </Summary>\n                </Col>\n              ))}\n            </Row>\n          ) : (\n              <Alert color=\"info\" className=\"mb-0\">\n                {t('No data found')}\n              </Alert>\n            )}\n        </CardBody>\n      </Card>\n    </Fragment >\n  );\n};\n\nexport default withTranslation()(withRedirect(AdvacnedReporting));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Badge, Media } from 'reactstrap';\nimport Calendar from '../../common/Calendar';\nimport ButtonIcon from '../../common/ButtonIcon';\n\nconst ReportBadge = ({ text, ...rest }) => <Badge {...rest}>{text}</Badge>;\n\nReportBadge.propTypes = {\n  ...Badge.propTypes,\n  text: PropTypes.string.isRequired\n};\n\nconst handleExport = (fileName, fileBytesBase64) => e => {\n  e.preventDefault();\n  const mimeType='application/*'\n  var fileUrl = \"data:\" + mimeType + \";base64,\" + fileBytesBase64;\n  fetch(fileUrl)\n      .then(response => response.blob())\n      .then(blob => {\n          var link = window.document.createElement(\"a\");\n          link.href = window.URL.createObjectURL(blob, { type: mimeType });\n          link.download = fileName;\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n      });\n};\n\nconst Summary = ({ calendar, title, badge, divider, to, children, file_bytes_base64 }) => (\n  <Media>\n    <Calendar {...calendar} />\n    <Media body className=\"position-relative pl-3\">\n      <h6 className=\"fs-0 mb-0\">\n        <Link to={to}  onClick={handleExport(title, file_bytes_base64)}>{title}</Link> {badge && <ReportBadge {...badge} className=\"ml-1\" />}\n      </h6>\n      {children}\n      \n      {divider && <hr className=\"border-dashed border-bottom-0\" />}\n    </Media>\n  </Media>\n);\n\nSummary.propTypes = {\n  calendar: PropTypes.shape(Calendar.propTypes).isRequired,\n  title: PropTypes.string.isRequired,\n  divider: PropTypes.bool,\n  to: PropTypes.string.isRequired,\n  badge: PropTypes.shape(ReportBadge.propTypes),\n  children: PropTypes.node,\n  file_bytes_base64: PropTypes.string.isRequired\n};\n\nSummary.defaultProps = { divider: true };\n\nexport default Summary;\n","import React, { useEffect, useState} from 'react';\nimport { Alert, Card, CardBody, Col, Row, Spinner, } from 'reactstrap';\nimport Summary from './Summary';\nimport FalconCardHeader from '../../common/FalconCardHeader';\nimport createMarkup from '../../../helpers/createMarkup';\nimport { isIterableArray } from '../../../helpers/utils'\nimport { getCookieValue, createCookie } from '../../../helpers/utils';\nimport withRedirect from '../../../hoc/withRedirect';\nimport { withTranslation } from 'react-i18next';\nimport { APIBaseURL } from '../../../config';\n\n\n\nconst KnowledgeBase = ({ setRedirect, setRedirectUrl, t }) => {\n  \n  const [fetchSuccess, setFetchSuccess] = useState(false);\n\n  //Results\n  const [reports, setReports] = useState([]);\n\n  const [spinnerHidden, setSpinnerHidden] = useState(false);\n\n  useEffect(() => {\n    let is_logged_in = getCookieValue('is_logged_in');\n    let user_name = getCookieValue('user_name');\n    let user_display_name = getCookieValue('user_display_name');\n    let user_uuid = getCookieValue('user_uuid');\n    let token = getCookieValue('token');\n    if (is_logged_in === null || !is_logged_in) {\n      setRedirectUrl(`/authentication/basic/login`);\n      setRedirect(true);\n    } else {\n      //update expires time of cookies\n      createCookie('is_logged_in', true, 1000 * 60 * 60 * 8);\n      createCookie('user_name', user_name, 1000 * 60 * 60 * 8);\n      createCookie('user_display_name', user_display_name, 1000 * 60 * 60 * 8);\n      createCookie('user_uuid', user_uuid, 1000 * 60 * 60 * 8);\n      createCookie('token', token, 1000 * 60 * 60 * 8);\n\n      let isResponseOK = false;\n      if (!fetchSuccess) { \n        fetch(APIBaseURL + '/knowledgefiles', {\n          method: 'GET',\n          headers: {\n            \"Content-type\": \"application/json\",\n            \"User-UUID\": getCookieValue('user_uuid'),\n            \"Token\": getCookieValue('token')\n          },\n          body: null,\n\n        }).then(response => {\n          if (response.ok) {\n            isResponseOK = true;\n          }\n          return response.json();\n        }).then(json => {\n          if (isResponseOK) {\n            console.log(json);\n            setFetchSuccess(true);\n\n            let reportList = []\n\n            if (json.length > 0) {\n              json.forEach((currentValue, index) => {\n                let report = {}\n                report['id'] = json[index]['id'];\n                report['calendar'] = { month: json[index]['upload_datetime_local'].substring(5, 7), \n                day: json[index]['upload_datetime_local'].substring(8, 10) };\n                report['title'] = json[index]['file_name'];\n                report['additional'] = t('Created Datetime') + ': ' + json[index]['upload_datetime_local']  + '<br/>' +\n                t('File Size') + ': ' + (json[index]['file_size_bytes']/(1024*1024)).toFixed(2) + ' MB';\n                report['to'] = '#';\n                report['file_bytes_base64'] = json[index]['file_bytes_base64'];\n\n                reportList.push(report);\n              });\n            }\n          \n            setReports(reportList);\n            setSpinnerHidden(true);\n          }\n        });\n      }\n    }\n  }, );\n  \n  return (\n    <Card>\n      <FalconCardHeader title={t('Knowledge Base')}>\n      </FalconCardHeader>\n      <CardBody className=\"fs--1\">\n        <Spinner color=\"primary\" hidden={spinnerHidden}  />\n        {isIterableArray(reports) ? (\n              <Row>\n                {reports.map(({ additional, ...rest }, index) => (\n                  <Col md={6} className=\"h-100\" key={index}>\n                    <Summary  divider={reports.length !== index + 1} {...rest}>\n                      <p className=\"text-1000 mb-0\" dangerouslySetInnerHTML={createMarkup(additional)} />\n                    </Summary>\n                  </Col>\n                ))}\n              </Row>\n            ) : (\n                <Alert color=\"info\" className=\"mb-0\">\n                  {t('No data found')}\n                </Alert>\n              )}\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default withTranslation()(withRedirect(KnowledgeBase));\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\n// import Activity from '../components/page/Activity';\r\n// import Associations from '../components/page/Associations';\r\n// import Billing from '../components/page/Billing';\r\n// import CustomerDetails from '../components/page/CustomerDetails';\r\n// import EventDetail from '../components/page/EventDetail';\r\n// import EventCreate from '../components/page/EventCreate';\r\n// import Events from '../components/page/Events';\r\n// import Faq from '../components/page/Faq';\r\n// import Invoice from '../components/page/Invoice';\r\n// import InvitePeople from '../components/page/InvitePeople';\r\n// import Notifications from '../components/page/Notifications';\r\n// import People from '../components/page/People';\r\n// import Pricing from '../components/pricing/Pricing';\r\n// import PricingAlt from '../components/pricing/PricingAlt';\r\n// import Profile from '../components/profile/Profile';\r\n// import Settings from '../components/page/Settings';\r\n// import Starter from '../components/extra/Starter';\r\n// import GettingStarted from '../components/documentation/GettingStarted';\r\n// import Alerts from '../components/bootstrap-components/Alerts';\r\n// import FalconAccordions from '../components/bootstrap-components/FalconAccordions';\r\n// import Spinners from '../components/bootstrap-components/Spinners';\r\n// import Carousel from '../components/bootstrap-components/Carousel';\r\n// import Avatar from '../components/bootstrap-components/Avatar';\r\n// import Badges from '../components/bootstrap-components/Badges';\r\n// import Backgrounds from '../components/bootstrap-components/Backgrounds';\r\n// import Breadcrumbs from '../components/bootstrap-components/Breadcrumb';\r\n// import Buttons from '../components/bootstrap-components/Buttons';\r\n// import Cards from '../components/bootstrap-components/Cards';\r\n// import Collapses from '../components/bootstrap-components/Collapses';\r\n// import Dropdowns from '../components/bootstrap-components/Dropdowns';\r\n// import Forms from '../components/bootstrap-components/Forms';\r\n// import ListGroups from '../components/bootstrap-components/ListGroups';\r\n// import Modals from '../components/bootstrap-components/Modals';\r\n// import Navs from '../components/bootstrap-components/Navs';\r\n// import Navbars from '../components/bootstrap-components/Navbars';\r\n// import PageHeaders from '../components/bootstrap-components/PageHeaders';\r\n// import Paginations from '../components/bootstrap-components/Paginations';\r\n// import Popovers from '../components/bootstrap-components/Popovers';\r\n// import ProgressBar from '../components/bootstrap-components/ProgressBar';\r\n// import Tables from '../components/bootstrap-components/Tables';\r\n// import Tooltips from '../components/bootstrap-components/Tooltips';\r\n// import NavBarTop from '../components/bootstrap-components/NavBarTop';\r\n// import VerticalNavbar from '../components/bootstrap-components/VerticalNavbar';\r\n// import Sidepanel from '../components/bootstrap-components/Sidepanel';\r\n// import CookieNotice from '../components/bootstrap-components/CookieNotice';\r\n// import Borders from '../components/utilities/Borders';\r\n// import Clearfix from '../components/utilities/Clearfix';\r\n// import CloseIcon from '../components/utilities/CloseIcon';\r\n// import Colors from '../components/utilities/Colors';\r\n// import Display from '../components/utilities/Display';\r\n// import Embed from '../components/utilities/Embed';\r\n// import Figures from '../components/utilities/Figures';\r\n// import Flex from '../components/utilities/Flex';\r\n// import Grid from '../components/utilities/Grid';\r\n// import Sizing from '../components/utilities/Sizing';\r\n// import Spacing from '../components/utilities/Spacing';\r\n// import StretchedLink from '../components/utilities/StretchedLink';\r\n// import Typography from '../components/utilities/Typography';\r\n// import VerticalAlign from '../components/utilities/VerticalAlign';\r\n// import Visibility from '../components/utilities/Visibility';\r\n// import Typed from '../components/plugins/Typed';\r\n// import ImageLightbox from '../components/plugins/ImageLightbox';\r\n// import GoogleMapExample from '../components/plugins/GoogleMap';\r\n// import Chart from '../components/plugins/Chart';\r\n// import CountUpExample from '../components/plugins/Countup';\r\n// import DatetimeExample from '../components/plugins/Datetime';\r\n// import FontAwesome from '../components/plugins/FontAwesome';\r\n// import Echarts from '../components/plugins/Echarts';\r\n// import Toastify from '../components/plugins/Toastify';\r\n// import Select from '../components/plugins/Select';\r\n// import SlickCarousel from '../components/plugins/SlickCarousel';\r\n// import ReactBootstrapTable2 from '../components/plugins/ReactBootstrapTable2';\r\n// import ReactBeautifulDnD from '../components/plugins/ReactBeautifulDnD';\r\n// import EmailDetail from '../components/email/EmailDetail';\r\n// import Inbox from '../components/email/Inbox';\r\n// import Compose from '../components/email/Compose';\r\n// import QuillEditorExample from '../components/plugins/Quill';\r\n// import BulkSelect from '../components/plugins/BulkSelect';\r\n// import ChangeLog from '../components/changelog/ChangeLog';\r\n// import ProgressBarJs from '../components/plugins/ProgressBarJs';\r\n// import Products from '../components/e-commerce/Products';\r\n// import ProductDetails from '../components/e-commerce/ProductDetails';\r\n// import ShoppingCart from '../components/e-commerce/ShoppingCart';\r\n// import FavouriteItems from '../components/e-commerce/FavouriteItems';\r\n// import Orders from '../components/e-commerce/Orders';\r\n// import OrderDetails from '../components/e-commerce/OrderDetails';\r\n// import Customers from '../components/e-commerce/Customers';\r\n// import Checkout from '../components/e-commerce/Checkout';\r\n// import Feed from '../components/feed/Feed';\r\n// import Plyr from '../components/plugins/Plyr';\r\n// import Scrollbar from '../components/plugins/Scrollbar';\r\n// import Leaflet from '../components/plugins/Leaflet';\r\n// import EchartMap from '../components/plugins/EchartMap';\r\n// import InboxProvider from '../components/email/inbox/InboxProvider';\r\n// import ReactHookFrom from '../components/plugins/ReactHookFrom';\r\n// import Lottie from '../components/plugins/Lottie';\r\n// import Dropzone from '../components/plugins/Dropzone';\r\n// import CodeHighlightDoc from '../components/plugins/CodeHighlightDoc';\r\n// import EmojiMart from '../components/plugins/EmojiMart';\r\n// import Chat from '../components/chat/Chat';\r\n// import Widgets from '../components/widgets/Widgets';\r\n// import Kanban from '../components/kanban/Kanban';\r\n// Space\r\nimport SpaceEnergyCategory from '../components/MyEMS/Space/SpaceEnergyCategory';\r\nimport SpaceEnergyItem from '../components/MyEMS/Space/SpaceEnergyItem';\r\nimport SpaceCost from '../components/MyEMS/Space/SpaceCost';\r\nimport SpaceOutput from '../components/MyEMS/Space/SpaceOutput';\r\nimport SpaceIncome from '../components/MyEMS/Space/SpaceIncome';\r\nimport SpaceEfficiency from '../components/MyEMS/Space/SpaceEfficiency';\r\nimport SpaceLoad from '../components/MyEMS/Space/SpaceLoad';\r\nimport SpaceStatistics from '../components/MyEMS/Space/SpaceStatistics';\r\nimport SpaceSaving from '../components/MyEMS/Space/SpaceSaving';\r\n// Equipment\r\nimport EquipmentBatch from '../components/MyEMS/Equipment/EquipmentBatch';\r\nimport EquipmentCost from '../components/MyEMS/Equipment/EquipmentCost';\r\nimport EquipmentEfficiency from '../components/MyEMS/Equipment/EquipmentEfficiency';\r\nimport EquipmentEnergyCategory from '../components/MyEMS/Equipment/EquipmentEnergyCategory';\r\nimport EquipmentEnergyItem from '../components/MyEMS/Equipment/EquipmentEnergyItem';\r\nimport EquipmentIncome from '../components/MyEMS/Equipment/EquipmentIncome';\r\nimport EquipmentLoad from '../components/MyEMS/Equipment/EquipmentLoad';\r\nimport EquipmentOutput from '../components/MyEMS/Equipment/EquipmentOutput';\r\nimport EquipmentSaving from '../components/MyEMS/Equipment/EquipmentSaving';\r\nimport EquipmentStatistics from '../components/MyEMS/Equipment/EquipmentStatistics';\r\nimport EquipmentTracking from '../components/MyEMS/Equipment/EquipmentTracking';\r\n// Meter\r\nimport MeterEnergy from '../components/MyEMS/Meter/MeterEnergy';\r\nimport MeterCost from '../components/MyEMS/Meter/MeterCost';\r\nimport MeterTrend from '../components/MyEMS/Meter/MeterTrend';\r\nimport MeterRealtime from '../components/MyEMS/Meter/MeterRealtime';\r\nimport MeterSubmetersBalance from '../components/MyEMS/Meter/MeterSubmetersBalance';\r\nimport OfflineMeterEnergy from '../components/MyEMS/Meter/OfflineMeterEnergy';\r\nimport OfflineMeterCost from '../components/MyEMS/Meter/OfflineMeterCost';\r\nimport VirtualMeterEnergy from '../components/MyEMS/Meter/VirtualMeterEnergy';\r\nimport VirtualMeterCost from '../components/MyEMS/Meter/VirtualMeterCost';\r\nimport MeterTracking from '../components/MyEMS/Meter/MeterTracking';\r\n// Tenant\r\nimport TenantEnergyCategory from '../components/MyEMS/Tenant/TenantEnergyCategory';\r\nimport TenantEnergyItem from '../components/MyEMS/Tenant/TenantEnergyItem';\r\nimport TenantCost from '../components/MyEMS/Tenant/TenantCost';\r\nimport TenantLoad from '../components/MyEMS/Tenant/TenantLoad';\r\nimport TenantStatistics from '../components/MyEMS/Tenant/TenantStatistics';\r\nimport TenantSaving from '../components/MyEMS/Tenant/TenantSaving';\r\nimport TenantBill from '../components/MyEMS/Tenant/TenantBill';\r\nimport TenantBatch from '../components/MyEMS/Tenant/TenantBatch';\r\n// Store\r\nimport StoreEnergyCategory from '../components/MyEMS/Store/StoreEnergyCategory';\r\nimport StoreEnergyItem from '../components/MyEMS/Store/StoreEnergyItem';\r\nimport StoreCost from '../components/MyEMS/Store/StoreCost';\r\nimport StoreLoad from '../components/MyEMS/Store/StoreLoad';\r\nimport StoreStatistics from '../components/MyEMS/Store/StoreStatistics';\r\nimport StoreSaving from '../components/MyEMS/Store/StoreSaving';\r\nimport StoreBatch from '../components/MyEMS/Store/StoreBatch';\r\n// Shopfloor\r\nimport ShopfloorEnergyCategory from '../components/MyEMS/Shopfloor/ShopfloorEnergyCategory';\r\nimport ShopfloorEnergyItem from '../components/MyEMS/Shopfloor/ShopfloorEnergyItem';\r\nimport ShopfloorCost from '../components/MyEMS/Shopfloor/ShopfloorCost';\r\nimport ShopfloorLoad from '../components/MyEMS/Shopfloor/ShopfloorLoad';\r\nimport ShopfloorStatistics from '../components/MyEMS/Shopfloor/ShopfloorStatistics';\r\nimport ShopfloorSaving from '../components/MyEMS/Shopfloor/ShopfloorSaving';\r\nimport ShopfloorBatch from '../components/MyEMS/Shopfloor/ShopfloorBatch';\r\n// CombinedEquipment\r\nimport CombinedEquipmentBatch from '../components/MyEMS/CombinedEquipment/CombinedEquipmentBatch'\r\nimport CombinedEquipmentCost from '../components/MyEMS/CombinedEquipment/CombinedEquipmentCost';\r\nimport CombinedEquipmentEfficiency from '../components/MyEMS/CombinedEquipment/CombinedEquipmentEfficiency';\r\nimport CombinedEquipmentEnergyCategory from '../components/MyEMS/CombinedEquipment/CombinedEquipmentEnergyCategory';\r\nimport CombinedEquipmentEnergyItem from '../components/MyEMS/CombinedEquipment/CombinedEquipmentEnergyItem';\r\nimport CombinedEquipmentLoad from '../components/MyEMS/CombinedEquipment/CombinedEquipmentLoad';\r\nimport CombinedEquipmentIncome from '../components/MyEMS/CombinedEquipment/CombinedEquipmentIncome';\r\nimport CombinedEquipmentOutput from '../components/MyEMS/CombinedEquipment/CombinedEquipmentOutput';\r\nimport CombinedEquipmentSaving from '../components/MyEMS/CombinedEquipment/CombinedEquipmentSaving';\r\nimport CombinedEquipmentStatistics from '../components/MyEMS/CombinedEquipment/CombinedEquipmentStatistics';\r\n// Auxiliary System\r\nimport EnergyFlowDiagram from '../components/MyEMS/AuxiliarySystem/EnergyFlowDiagram';\r\nimport DistributionSystem from '../components/MyEMS/AuxiliarySystem/DistributionSystem';\r\n// FDD\r\nimport FDDCombinedEquipmentFault from '../components/MyEMS/FDD/CombinedEquipmentFault';\r\nimport FDDEquipmentFault from '../components/MyEMS/FDD/EquipmentFault';\r\nimport FDDSpaceFault from '../components/MyEMS/FDD/SpaceFault';\r\nimport FDDTenantFault from '../components/MyEMS/FDD/TenantFault';\r\nimport FDDStoreFault from '../components/MyEMS/FDD/StoreFault';\r\nimport FDDShopfloorFault from '../components/MyEMS/FDD/ShopfloorFault';\r\n// Monitoring\r\nimport SpaceEquipments from '../components/MyEMS/Monitoring/SpaceEquipments';\r\nimport CombinedEquipments from '../components/MyEMS/Monitoring/CombinedEquipments';\r\nimport TenantEquipments from '../components/MyEMS/Monitoring/TenantEquipments';\r\nimport StoreEquipments from '../components/MyEMS/Monitoring/StoreEquipments';\r\nimport ShopfloorEquipments from '../components/MyEMS/Monitoring/ShopfloorEquipments';\r\n// Advanced Reporting\r\nimport AdvancedReporting from '../components/MyEMS/AdvancedReporting/AdvancedReporting';\r\n// Knowledge Base\r\nimport KnowledgeBase from '../components/MyEMS/KnowledgeBase/KnowledgeBase';\r\n// Notification\r\nimport Notification from '../components/MyEMS/Notification/Notification';\r\n\r\n// const InboxRoutes = ({ match: { url } }) => (\r\n//   <InboxProvider>\r\n//     <Switch>\r\n//       <Route path={`${url}/email-detail`} exact component={EmailDetail} />\r\n//       <Route path={`${url}/inbox`} exact component={Inbox} />\r\n//       <Route path={`${url}/compose`} exact component={Compose} />\r\n\r\n//       {/*Redirect*/}\r\n//       <Redirect to=\"/errors/404\" />\r\n//     </Switch>\r\n//   </InboxProvider>\r\n// );\r\n\r\n// const ProductRoutes = ({ match: { url } }) => (\r\n//   <Switch>\r\n//     <Route path={`${url}/products/:productLayout`} exact component={Products} />\r\n//     <Route path={`${url}/checkout`} exact component={Checkout} />\r\n//     <Route path={`${url}/product-details/:id`} exact component={ProductDetails} />\r\n//     <Route path={`${url}/product-details/`} exact component={ProductDetails} />\r\n//     <Route path={`${url}/shopping-cart`} exact component={ShoppingCart} />\r\n//     <Route path={`${url}/orders`} exact component={Orders} />\r\n//     <Route path={`${url}/order-details`} exact component={OrderDetails} />\r\n//     <Route path={`${url}/customers`} exact component={Customers} />\r\n//     <Route path={`${url}/favourite-items`} exact component={FavouriteItems} />\r\n\r\n//     {/*Redirect*/}\r\n//     <Redirect to=\"/errors/404\" />\r\n//   </Switch>\r\n// );\r\n\r\nconst MyEMSRoutes = () => (\r\n  <Switch>\r\n    {/* <Route path=\"/feed\" exact component={Feed} /> */}\r\n    {/*Pages*/}\r\n    {/* <Route path=\"/pages/activity\" exact component={Activity} />\r\n    <Route path=\"/pages/associations\" exact component={Associations} />\r\n    <Route path=\"/pages/billing\" exact component={Billing} />\r\n    <Route path=\"/pages/customer-details\" exact component={CustomerDetails} />\r\n    <Route path=\"/pages/event-detail\" exact component={EventDetail} />\r\n    <Route path=\"/pages/event-create\" exact component={EventCreate} />\r\n    <Route path=\"/pages/events\" exact component={Events} />\r\n    <Route path=\"/pages/faq\" exact component={Faq} />\r\n    <Route path=\"/pages/invoice\" exact component={Invoice} />\r\n    <Route path=\"/pages/invite-people\" exact component={InvitePeople} />\r\n    <Route path=\"/pages/notifications\" exact component={Notifications} />\r\n    <Route path=\"/pages/people\" exact component={People} />\r\n    <Route path=\"/pages/pricing\" exact component={Pricing} />\r\n    <Route path=\"/pages/pricing-alt\" exact component={PricingAlt} />\r\n    <Route path=\"/pages/profile\" exact component={Profile} />\r\n    <Route path=\"/pages/settings\" exact component={Settings} />\r\n    <Route path=\"/pages/starter\" exact component={Starter} /> */}\r\n    {/*chat*/}\r\n    {/* <Route path=\"/chat\" exact component={Chat} /> */}\r\n    {/*kanban*/}\r\n    {/* <Route path=\"/kanban\" exact component={Kanban} /> */}\r\n    {/*E commerce*/}\r\n    {/* <Route path=\"/e-commerce\" component={ProductRoutes} /> */}\r\n\r\n    {/*Email*/}\r\n    {/* <Route path=\"/email\" component={InboxRoutes} /> */}\r\n\r\n    {/*widgets*/}\r\n    {/* <Route path=\"/widgets\" component={Widgets} /> */}\r\n\r\n    {/*Documentation*/}\r\n    {/* <Route path=\"/documentation\" exact component={GettingStarted} /> */}\r\n\r\n    {/*Changelog*/}\r\n    {/* <Route path=\"/changelog\" exact component={ChangeLog} /> */}\r\n\r\n    {/*Components*/}\r\n    {/* <Route path=\"/components/alerts\" exact component={Alerts} /> \r\n    <Route path=\"/components/accordions\" exact component={FalconAccordions} />\r\n    <Route path=\"/components/avatar\" exact component={Avatar} />\r\n    <Route path=\"/components/badges\" exact component={Badges} />\r\n    <Route path=\"/components/backgrounds\" exact component={Backgrounds} />\r\n    <Route path=\"/components/breadcrumb\" exact component={Breadcrumbs} />\r\n    <Route path=\"/components/buttons\" exact component={Buttons} />\r\n    <Route path=\"/components/cards\" exact component={Cards} />\r\n    <Route path=\"/components/cookie-notice\" exact component={CookieNotice} />\r\n    <Route path=\"/components/collapses\" exact component={Collapses} />\r\n    <Route path=\"/components/dropdowns\" exact component={Dropdowns} />\r\n    <Route path=\"/components/forms\" exact component={Forms} />\r\n    <Route path=\"/components/listgroups\" exact component={ListGroups} />\r\n    <Route path=\"/components/modals\" exact component={Modals} />\r\n    <Route path=\"/components/navs\" exact component={Navs} />\r\n    <Route path=\"/components/navbars\" exact component={Navbars} />\r\n    <Route path=\"/components/navbar-top\" exact component={NavBarTop} />\r\n    <Route path=\"/components/navbar-vertical\" exact component={VerticalNavbar} />\r\n    <Route path=\"/components/Sidepanel\" exact component={Sidepanel} />\r\n    <Route path=\"/components/pageheaders\" exact component={PageHeaders} />\r\n    <Route path=\"/components/paginations\" exact component={Paginations} />\r\n    <Route path=\"/components/popovers\" exact component={Popovers} />\r\n    <Route path=\"/components/progress\" exact component={ProgressBar} />\r\n    <Route path=\"/components/tables\" exact component={Tables} />\r\n    <Route path=\"/components/tooltips\" exact component={Tooltips} />\r\n    <Route path=\"/components/spinners\" exact component={Spinners} />\r\n    <Route path=\"/components/carousel\" exact component={Carousel} /> */}\r\n\r\n    {/*Utilities*/}\r\n    {/* <Route path=\"/utilities/borders\" exact component={Borders} />\r\n    <Route path=\"/utilities/clearfix\" exact component={Clearfix} />\r\n    <Route path=\"/utilities/closeIcon\" exact component={CloseIcon} />\r\n    <Route path=\"/utilities/colors\" exact component={Colors} />\r\n    <Route path=\"/utilities/display\" exact component={Display} />\r\n    <Route path=\"/utilities/embed\" exact component={Embed} />\r\n    <Route path=\"/utilities/figures\" exact component={Figures} />\r\n    <Route path=\"/utilities/flex\" exact component={Flex} />\r\n    <Route path=\"/utilities/grid\" exact component={Grid} />\r\n    <Route path=\"/utilities/sizing\" exact component={Sizing} />\r\n    <Route path=\"/utilities/spacing\" exact component={Spacing} />\r\n    <Route path=\"/utilities/stretchedLink\" exact component={StretchedLink} />\r\n    <Route path=\"/utilities/typography\" exact component={Typography} />\r\n    <Route path=\"/utilities/verticalAlign\" exact component={VerticalAlign} />\r\n    <Route path=\"/utilities/visibility\" exact component={Visibility} /> */}\r\n\r\n    {/*Plugins*/}\r\n    {/* <Route path=\"/plugins/bulk-select\" exact component={BulkSelect} />\r\n    <Route path=\"/plugins/typed\" exact component={Typed} />\r\n    <Route path=\"/plugins/image-lightbox\" exact component={ImageLightbox} />\r\n    <Route path=\"/plugins/lottie\" exact component={Lottie} />\r\n    <Route path=\"/plugins/google-map\" exact component={GoogleMapExample} />\r\n    <Route path=\"/plugins/wysiwyg\" exact component={QuillEditorExample} />\r\n    <Route path=\"/plugins/chart\" exact component={Chart} />\r\n    <Route path=\"/plugins/countup\" exact component={CountUpExample} />\r\n    <Route path=\"/plugins/datetime\" exact component={DatetimeExample} />\r\n    <Route path=\"/plugins/fontawesome\" exact component={FontAwesome} />\r\n    <Route path=\"/plugins/echarts\" exact component={Echarts} />\r\n    <Route path=\"/plugins/toastify\" exact component={Toastify} />\r\n    <Route path=\"/plugins/select\" exact component={Select} />\r\n    <Route path=\"/plugins/slick-carousel\" exact component={SlickCarousel} />\r\n    <Route path=\"/plugins/scroll-bar\" exact component={Scrollbar} />\r\n    <Route path=\"/plugins/progressbar\" exact component={ProgressBarJs} />\r\n    <Route path=\"/plugins/plyr\" exact component={Plyr} />\r\n    <Route path=\"/plugins/react-hook-form\" exact component={ReactHookFrom} />\r\n    <Route path=\"/plugins/leaflet-map\" exact component={Leaflet} />\r\n    <Route path=\"/plugins/echart-map\" exact component={EchartMap} />\r\n    <Route path=\"/plugins/dropzone\" exact component={Dropzone} />\r\n    <Route path=\"/plugins/code-highlight\" exact component={CodeHighlightDoc} />\r\n    <Route path=\"/plugins/emoji-mart\" exact component={EmojiMart} />\r\n    <Route path=\"/plugins/react-bootstrap-table2\" exact component={ReactBootstrapTable2} />\r\n    <Route path=\"/plugins/react-beautiful-dnd\" exact component={ReactBeautifulDnD} /> */}\r\n\r\n    {/*Space*/}\r\n    <Route path=\"/space/energycategory\" exact component={SpaceEnergyCategory} />\r\n    <Route path=\"/space/energyitem\" exact component={SpaceEnergyItem} />\r\n    <Route path=\"/space/cost\" exact component={SpaceCost} />\r\n    <Route path=\"/space/output\" exact component={SpaceOutput} />\r\n    <Route path=\"/space/income\" exact component={SpaceIncome} />\r\n    <Route path=\"/space/efficiency\" exact component={SpaceEfficiency} />\r\n    <Route path=\"/space/load\" exact component={SpaceLoad} />\r\n    <Route path=\"/space/statistics\" exact component={SpaceStatistics} />\r\n    <Route path=\"/space/saving\" exact component={SpaceSaving} />\r\n\r\n    {/*Equipment*/}\r\n    <Route path=\"/equipment/batch\" exact component={EquipmentBatch} />\r\n    <Route path=\"/equipment/cost\" exact component={EquipmentCost} />\r\n    <Route path=\"/equipment/efficiency\" exact component={EquipmentEfficiency} />\r\n    <Route path=\"/equipment/energycategory\" exact component={EquipmentEnergyCategory} />\r\n    <Route path=\"/equipment/energyitem\" exact component={EquipmentEnergyItem} />\r\n    <Route path=\"/equipment/income\" exact component={EquipmentIncome} />\r\n    <Route path=\"/equipment/load\" exact component={EquipmentLoad} />\r\n    <Route path=\"/equipment/output\" exact component={EquipmentOutput} />\r\n    <Route path=\"/equipment/saving\" exact component={EquipmentSaving} />\r\n    <Route path=\"/equipment/statistics\" exact component={EquipmentStatistics} />\r\n    <Route path=\"/equipment/tracking\" exact component={EquipmentTracking} />\r\n\r\n    {/*Meter*/}\r\n    <Route path=\"/meter/meterenergy\" exact component={MeterEnergy} />\r\n    <Route path=\"/meter/metercost\" exact component={MeterCost} />\r\n    <Route path=\"/meter/metertrend\" exact component={MeterTrend} />\r\n    <Route path=\"/meter/meterrealtime\" exact component={MeterRealtime} />\r\n    <Route path=\"/meter/metersubmetersbalance\" exact component={MeterSubmetersBalance} />\r\n    <Route path=\"/meter/offlinemeterenergy\" exact component={OfflineMeterEnergy} />\r\n    <Route path=\"/meter/offlinemetercost\" exact component={OfflineMeterCost} />\r\n    <Route path=\"/meter/virtualmeterenergy\" exact component={VirtualMeterEnergy} />\r\n    <Route path=\"/meter/virtualmetercost\" exact component={VirtualMeterCost} />\r\n    <Route path=\"/meter/tracking\" exact component={MeterTracking} />\r\n\r\n    {/*Tenant*/}\r\n    <Route path=\"/tenant/energycategory\" exact component={TenantEnergyCategory} />\r\n    <Route path=\"/tenant/energyitem\" exact component={TenantEnergyItem} />\r\n    <Route path=\"/tenant/cost\" exact component={TenantCost} />\r\n    <Route path=\"/tenant/load\" exact component={TenantLoad} />\r\n    <Route path=\"/tenant/statistics\" exact component={TenantStatistics} />\r\n    <Route path=\"/tenant/saving\" exact component={TenantSaving} />\r\n    <Route path=\"/tenant/bill\" exact component={TenantBill} />\r\n    <Route path=\"/tenant/batch\" exact component={TenantBatch} />\r\n    \r\n    {/*Sotore*/}\r\n    <Route path=\"/store/energycategory\" exact component={StoreEnergyCategory} />\r\n    <Route path=\"/store/energyitem\" exact component={StoreEnergyItem} />\r\n    <Route path=\"/store/cost\" exact component={StoreCost} />\r\n    <Route path=\"/store/load\" exact component={StoreLoad} />\r\n    <Route path=\"/store/statistics\" exact component={StoreStatistics} />\r\n    <Route path=\"/store/saving\" exact component={StoreSaving} />\r\n    <Route path=\"/store/batch\" exact component={StoreBatch} />\r\n    \r\n    {/*Shopfloor*/}\r\n    <Route path=\"/shopfloor/energycategory\" exact component={ShopfloorEnergyCategory} />\r\n    <Route path=\"/shopfloor/energyitem\" exact component={ShopfloorEnergyItem} />\r\n    <Route path=\"/shopfloor/cost\" exact component={ShopfloorCost} />\r\n    <Route path=\"/shopfloor/load\" exact component={ShopfloorLoad} />\r\n    <Route path=\"/shopfloor/statistics\" exact component={ShopfloorStatistics} />\r\n    <Route path=\"/shopfloor/saving\" exact component={ShopfloorSaving} />\r\n    <Route path=\"/shopfloor/batch\" exact component={ShopfloorBatch} />\r\n\r\n    {/*CombinedEquipment*/}\r\n    <Route path=\"/combinedequipment/batch\" exact component={CombinedEquipmentBatch} />\r\n    <Route path=\"/combinedequipment/cost\" exact component={CombinedEquipmentCost} />\r\n    <Route path=\"/combinedequipment/efficiency\" exact component={CombinedEquipmentEfficiency} />\r\n    <Route path=\"/combinedequipment/energycategory\" exact component={CombinedEquipmentEnergyCategory} />\r\n    <Route path=\"/combinedequipment/energyitem\" exact component={CombinedEquipmentEnergyItem} />\r\n    <Route path=\"/combinedequipment/income\" exact component={CombinedEquipmentIncome} />\r\n    <Route path=\"/combinedequipment/load\" exact component={CombinedEquipmentLoad} />\r\n    <Route path=\"/combinedequipment/output\" exact component={CombinedEquipmentOutput} />\r\n    <Route path=\"/combinedequipment/saving\" exact component={CombinedEquipmentSaving} />\r\n    <Route path=\"/combinedequipment/statistics\" exact component={CombinedEquipmentStatistics} />\r\n\r\n    {/*Auxiliary System*/}\r\n    <Route path=\"/auxiliarysystem/energyflowdiagram\" exact component={EnergyFlowDiagram} />\r\n    <Route path=\"/auxiliarysystem/distributionsystem\" exact component={DistributionSystem} />\r\n\r\n    {/*FDD*/}\r\n    <Route path=\"/fdd/combinedequipment\" exact component={FDDCombinedEquipmentFault} />\r\n    <Route path=\"/fdd/equipment\" exact component={FDDEquipmentFault} />\r\n    <Route path=\"/fdd/space\" exact component={FDDSpaceFault} />\r\n    <Route path=\"/fdd/tenant\" exact component={FDDTenantFault} />\r\n    <Route path=\"/fdd/store\" exact component={FDDStoreFault} />\r\n    <Route path=\"/fdd/shopfloor\" exact component={FDDShopfloorFault} />\r\n    \r\n    {/*Equipment Monitoring*/}\r\n    <Route path=\"/monitoring/spaceequipments\" exact component={SpaceEquipments} />\r\n    <Route path=\"/monitoring/combinedequipments\" exact component={CombinedEquipments} />\r\n    <Route path=\"/monitoring/tenantequipments\" exact component={TenantEquipments} />\r\n    <Route path=\"/monitoring/storeequipments\" exact component={StoreEquipments} />\r\n    <Route path=\"/monitoring/shopfloorequipments\" exact component={ShopfloorEquipments} />\r\n    \r\n    {/*Advanced Reporting*/}\r\n    <Route path=\"/advancedreporting\" exact component={AdvancedReporting} />\r\n    \r\n    {/*Knowledge Base*/}\r\n    <Route path=\"/knowledgebase\" exact component={KnowledgeBase} />\r\n    \r\n    {/* Notification */}\r\n    <Route path=\"/notification\" exact component={Notification} />\r\n\r\n    {/*Redirect*/}\r\n    <Redirect to=\"/errors/404\" />\r\n  </Switch>\r\n);\r\n\r\nexport default MyEMSRoutes;\r\n"],"sourceRoot":""}